// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Data source for retrieving fqdn list information.
 *
 * ## Admin Permission Type
 *
 * * `Rulestack` (for `scope="Local"`)
 * * `Global Rulestack` (for `scope="Global"`)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudngfwaws from "@pulumi/cloudngfwaws";
 *
 * const r = new cloudngfwaws.Rulestack("r", {
 *     name: "my-rulestack",
 *     scope: "Local",
 *     accountId: "12345",
 *     description: "Made by Pulumi",
 *     profileConfig: {
 *         antiSpyware: "BestPractice",
 *     },
 * });
 * const example = cloudngfwaws.getFqdnListOutput({
 *     rulestack: r.name,
 *     name: "foobar",
 * });
 * ```
 */
export function getFqdnList(args: GetFqdnListArgs, opts?: pulumi.InvokeOptions): Promise<GetFqdnListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudngfwaws:index/getFqdnList:getFqdnList", {
        "configType": args.configType,
        "name": args.name,
        "rulestack": args.rulestack,
        "scope": args.scope,
    }, opts);
}

/**
 * A collection of arguments for invoking getFqdnList.
 */
export interface GetFqdnListArgs {
    /**
     * Retrieve either the candidate or running config. Valid values are `candidate` or `running`. Defaults to `candidate`.
     */
    configType?: string;
    /**
     * The name.
     */
    name: string;
    /**
     * The rulestack.
     */
    rulestack: string;
    /**
     * The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
     */
    scope?: string;
}

/**
 * A collection of values returned by getFqdnList.
 */
export interface GetFqdnListResult {
    /**
     * The audit comment.
     */
    readonly auditComment: string;
    /**
     * Retrieve either the candidate or running config. Valid values are `candidate` or `running`. Defaults to `candidate`.
     */
    readonly configType?: string;
    /**
     * The description.
     */
    readonly description: string;
    /**
     * The fqdn list.
     */
    readonly fqdnLists: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name.
     */
    readonly name: string;
    /**
     * The rulestack.
     */
    readonly rulestack: string;
    /**
     * The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
     */
    readonly scope?: string;
    /**
     * The update token.
     */
    readonly updateToken: string;
}
/**
 * Data source for retrieving fqdn list information.
 *
 * ## Admin Permission Type
 *
 * * `Rulestack` (for `scope="Local"`)
 * * `Global Rulestack` (for `scope="Global"`)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudngfwaws from "@pulumi/cloudngfwaws";
 *
 * const r = new cloudngfwaws.Rulestack("r", {
 *     name: "my-rulestack",
 *     scope: "Local",
 *     accountId: "12345",
 *     description: "Made by Pulumi",
 *     profileConfig: {
 *         antiSpyware: "BestPractice",
 *     },
 * });
 * const example = cloudngfwaws.getFqdnListOutput({
 *     rulestack: r.name,
 *     name: "foobar",
 * });
 * ```
 */
export function getFqdnListOutput(args: GetFqdnListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFqdnListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudngfwaws:index/getFqdnList:getFqdnList", {
        "configType": args.configType,
        "name": args.name,
        "rulestack": args.rulestack,
        "scope": args.scope,
    }, opts);
}

/**
 * A collection of arguments for invoking getFqdnList.
 */
export interface GetFqdnListOutputArgs {
    /**
     * Retrieve either the candidate or running config. Valid values are `candidate` or `running`. Defaults to `candidate`.
     */
    configType?: pulumi.Input<string>;
    /**
     * The name.
     */
    name: pulumi.Input<string>;
    /**
     * The rulestack.
     */
    rulestack: pulumi.Input<string>;
    /**
     * The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
     */
    scope?: pulumi.Input<string>;
}
