// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Resource for Account manipulation.
 *
 * ## Admin Permission Type
 *
 * * `Rulestack` (for `scope="Local"`)
 * * `Global Rulestack` (for `scope="Global"`)
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudngfwaws:index/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * The account ID
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * The CFT URL.
     */
    public readonly cftUrl!: pulumi.Output<string>;
    /**
     * The external ID of the account
     */
    public readonly externalId!: pulumi.Output<string>;
    /**
     * The Account onboarding status
     */
    public readonly onboardingStatus!: pulumi.Output<string>;
    /**
     * Origin of account onboarding
     */
    public readonly origin!: pulumi.Output<string>;
    /**
     * The account ID of cloud NGFW service
     */
    public readonly serviceAccountId!: pulumi.Output<string>;
    /**
     * The SNS topic ARN
     */
    public readonly snsTopicArn!: pulumi.Output<string>;
    /**
     * The trusted account ID
     */
    public readonly trustedAccount!: pulumi.Output<string>;
    /**
     * The update token.
     */
    public /*out*/ readonly updateToken!: pulumi.Output<string>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["cftUrl"] = state ? state.cftUrl : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["onboardingStatus"] = state ? state.onboardingStatus : undefined;
            resourceInputs["origin"] = state ? state.origin : undefined;
            resourceInputs["serviceAccountId"] = state ? state.serviceAccountId : undefined;
            resourceInputs["snsTopicArn"] = state ? state.snsTopicArn : undefined;
            resourceInputs["trustedAccount"] = state ? state.trustedAccount : undefined;
            resourceInputs["updateToken"] = state ? state.updateToken : undefined;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["cftUrl"] = args ? args.cftUrl : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["onboardingStatus"] = args ? args.onboardingStatus : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["serviceAccountId"] = args ? args.serviceAccountId : undefined;
            resourceInputs["snsTopicArn"] = args ? args.snsTopicArn : undefined;
            resourceInputs["trustedAccount"] = args ? args.trustedAccount : undefined;
            resourceInputs["updateToken"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * The account ID
     */
    accountId?: pulumi.Input<string>;
    /**
     * The CFT URL.
     */
    cftUrl?: pulumi.Input<string>;
    /**
     * The external ID of the account
     */
    externalId?: pulumi.Input<string>;
    /**
     * The Account onboarding status
     */
    onboardingStatus?: pulumi.Input<string>;
    /**
     * Origin of account onboarding
     */
    origin?: pulumi.Input<string>;
    /**
     * The account ID of cloud NGFW service
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * The SNS topic ARN
     */
    snsTopicArn?: pulumi.Input<string>;
    /**
     * The trusted account ID
     */
    trustedAccount?: pulumi.Input<string>;
    /**
     * The update token.
     */
    updateToken?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The account ID
     */
    accountId?: pulumi.Input<string>;
    /**
     * The CFT URL.
     */
    cftUrl?: pulumi.Input<string>;
    /**
     * The external ID of the account
     */
    externalId?: pulumi.Input<string>;
    /**
     * The Account onboarding status
     */
    onboardingStatus?: pulumi.Input<string>;
    /**
     * Origin of account onboarding
     */
    origin?: pulumi.Input<string>;
    /**
     * The account ID of cloud NGFW service
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * The SNS topic ARN
     */
    snsTopicArn?: pulumi.Input<string>;
    /**
     * The trusted account ID
     */
    trustedAccount?: pulumi.Input<string>;
}
