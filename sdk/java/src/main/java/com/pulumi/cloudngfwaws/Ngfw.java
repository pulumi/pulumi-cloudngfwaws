// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws;

import com.pulumi.cloudngfwaws.NgfwArgs;
import com.pulumi.cloudngfwaws.Utilities;
import com.pulumi.cloudngfwaws.inputs.NgfwState;
import com.pulumi.cloudngfwaws.outputs.NgfwEgressNat;
import com.pulumi.cloudngfwaws.outputs.NgfwEndpoint;
import com.pulumi.cloudngfwaws.outputs.NgfwPrivateAccess;
import com.pulumi.cloudngfwaws.outputs.NgfwStatus;
import com.pulumi.cloudngfwaws.outputs.NgfwSubnetMapping;
import com.pulumi.cloudngfwaws.outputs.NgfwUserId;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudngfwaws.CommitRulestack;
 * import com.pulumi.cloudngfwaws.CommitRulestackArgs;
 * import com.pulumi.aws.vpc;
 * import com.pulumi.aws.vpcArgs;
 * import com.pulumi.aws.subnet;
 * import com.pulumi.aws.subnetArgs;
 * import com.pulumi.cloudngfwaws.Ngfw;
 * import com.pulumi.cloudngfwaws.NgfwArgs;
 * import com.pulumi.cloudngfwaws.inputs.NgfwEndpointArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var rs = new CommitRulestack("rs", CommitRulestackArgs.builder()
 *             .rulestack("my-rulestack")
 *             .build());
 * 
 *         var exampleVpc = new Vpc("exampleVpc", VpcArgs.builder()
 *             .cidrBlock("172.16.0.0/16")
 *             .tags(Map.of("name", "tf-example"))
 *             .build());
 * 
 *         var subnet1 = new Subnet("subnet1", SubnetArgs.builder()
 *             .vpcId(myVpc.id())
 *             .cidrBlock("172.16.10.0/24")
 *             .availabilityZone("us-west-2a")
 *             .tags(Map.of("name", "tf-example"))
 *             .build());
 * 
 *         var example = new Ngfw("example", NgfwArgs.builder()
 *             .name("example-instance")
 *             .description("Example description")
 *             .endpoints(NgfwEndpointArgs.builder()
 *                 .subnetId(subnet1.id())
 *                 .mode("ServiceManaged")
 *                 .vpcId(exampleVpc.id())
 *                 .accountId("12345678")
 *                 .build())
 *             .rulestack(rs.rulestack())
 *             .tags(Map.of("Foo", "bar"))
 *             .build());
 * 
 *         var subnet2 = new Subnet("subnet2", SubnetArgs.builder()
 *             .vpcId(myVpc.id())
 *             .cidrBlock("172.16.20.0/24")
 *             .availabilityZone("us-west-2b")
 *             .tags(Map.of("name", "tf-example"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * import name is &lt;account_id&gt;:&lt;name&gt;
 * 
 * ```sh
 * $ pulumi import cloudngfwaws:index/ngfw:Ngfw example 12345678:example-instance
 * ```
 * 
 */
@ResourceType(type="cloudngfwaws:index/ngfw:Ngfw")
public class Ngfw extends com.pulumi.resources.CustomResource {
    /**
     * The description.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountId;

    /**
     * @return The description.
     * 
     */
    public Output<Optional<String>> accountId() {
        return Codegen.optional(this.accountId);
    }
    /**
     * The list of allowed accounts for this NGFW.
     * 
     */
    @Export(name="allowlistAccounts", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> allowlistAccounts;

    /**
     * @return The list of allowed accounts for this NGFW.
     * 
     */
    public Output<Optional<List<String>>> allowlistAccounts() {
        return Codegen.optional(this.allowlistAccounts);
    }
    /**
     * App-ID version number.
     * 
     */
    @Export(name="appIdVersion", refs={String.class}, tree="[0]")
    private Output<String> appIdVersion;

    /**
     * @return App-ID version number.
     * 
     */
    public Output<String> appIdVersion() {
        return this.appIdVersion;
    }
    /**
     * Automatic App-ID upgrade version number. Defaults to `true`.
     * 
     */
    @Export(name="automaticUpgradeAppIdVersion", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> automaticUpgradeAppIdVersion;

    /**
     * @return Automatic App-ID upgrade version number. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> automaticUpgradeAppIdVersion() {
        return Codegen.optional(this.automaticUpgradeAppIdVersion);
    }
    /**
     * The list of availability zones for this NGFW.
     * 
     */
    @Export(name="azLists", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> azLists;

    /**
     * @return The list of availability zones for this NGFW.
     * 
     */
    public Output<List<String>> azLists() {
        return this.azLists;
    }
    /**
     * Enables or disables change protection for the NGFW.
     * 
     */
    @Export(name="changeProtections", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> changeProtections;

    /**
     * @return Enables or disables change protection for the NGFW.
     * 
     */
    public Output<List<String>> changeProtections() {
        return this.changeProtections;
    }
    /**
     * The update token.
     * 
     */
    @Export(name="deploymentUpdateToken", refs={String.class}, tree="[0]")
    private Output<String> deploymentUpdateToken;

    /**
     * @return The update token.
     * 
     */
    public Output<String> deploymentUpdateToken() {
        return this.deploymentUpdateToken;
    }
    /**
     * The NGFW description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The NGFW description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="egressNats", refs={List.class,NgfwEgressNat.class}, tree="[0,1]")
    private Output<List<NgfwEgressNat>> egressNats;

    public Output<List<NgfwEgressNat>> egressNats() {
        return this.egressNats;
    }
    /**
     * Set endpoint mode from the following options. Valid values are `ServiceManaged` or `CustomerManaged`.
     * 
     */
    @Export(name="endpointMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> endpointMode;

    /**
     * @return Set endpoint mode from the following options. Valid values are `ServiceManaged` or `CustomerManaged`.
     * 
     */
    public Output<Optional<String>> endpointMode() {
        return Codegen.optional(this.endpointMode);
    }
    /**
     * The endpoint service name.
     * 
     */
    @Export(name="endpointServiceName", refs={String.class}, tree="[0]")
    private Output<String> endpointServiceName;

    /**
     * @return The endpoint service name.
     * 
     */
    public Output<String> endpointServiceName() {
        return this.endpointServiceName;
    }
    @Export(name="endpoints", refs={List.class,NgfwEndpoint.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NgfwEndpoint>> endpoints;

    public Output<Optional<List<NgfwEndpoint>>> endpoints() {
        return Codegen.optional(this.endpoints);
    }
    /**
     * The Firewall ID.
     * 
     */
    @Export(name="firewallId", refs={String.class}, tree="[0]")
    private Output<String> firewallId;

    /**
     * @return The Firewall ID.
     * 
     */
    public Output<String> firewallId() {
        return this.firewallId;
    }
    /**
     * The global rulestack for this NGFW.
     * 
     */
    @Export(name="globalRulestack", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> globalRulestack;

    /**
     * @return The global rulestack for this NGFW.
     * 
     */
    public Output<Optional<String>> globalRulestack() {
        return Codegen.optional(this.globalRulestack);
    }
    /**
     * The link ID.
     * 
     */
    @Export(name="linkId", refs={String.class}, tree="[0]")
    private Output<String> linkId;

    /**
     * @return The link ID.
     * 
     */
    public Output<String> linkId() {
        return this.linkId;
    }
    /**
     * The link status.
     * 
     */
    @Export(name="linkStatus", refs={String.class}, tree="[0]")
    private Output<String> linkStatus;

    /**
     * @return The link status.
     * 
     */
    public Output<String> linkStatus() {
        return this.linkStatus;
    }
    /**
     * Share NGFW with Multiple VPCs. This feature can be enabled only if the endpoint_mode is CustomerManaged.
     * 
     */
    @Export(name="multiVpc", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> multiVpc;

    /**
     * @return Share NGFW with Multiple VPCs. This feature can be enabled only if the endpoint_mode is CustomerManaged.
     * 
     */
    public Output<Boolean> multiVpc() {
        return this.multiVpc;
    }
    /**
     * The NGFW name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The NGFW name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="privateAccesses", refs={List.class,NgfwPrivateAccess.class}, tree="[0,1]")
    private Output<List<NgfwPrivateAccess>> privateAccesses;

    public Output<List<NgfwPrivateAccess>> privateAccesses() {
        return this.privateAccesses;
    }
    /**
     * The rulestack for this NGFW.
     * 
     */
    @Export(name="rulestack", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rulestack;

    /**
     * @return The rulestack for this NGFW.
     * 
     */
    public Output<Optional<String>> rulestack() {
        return Codegen.optional(this.rulestack);
    }
    @Export(name="statuses", refs={List.class,NgfwStatus.class}, tree="[0,1]")
    private Output<List<NgfwStatus>> statuses;

    public Output<List<NgfwStatus>> statuses() {
        return this.statuses;
    }
    /**
     * Subnet mappings.
     * 
     */
    @Export(name="subnetMappings", refs={List.class,NgfwSubnetMapping.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NgfwSubnetMapping>> subnetMappings;

    /**
     * @return Subnet mappings.
     * 
     */
    public Output<Optional<List<NgfwSubnetMapping>>> subnetMappings() {
        return Codegen.optional(this.subnetMappings);
    }
    /**
     * The tags.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> tags;

    /**
     * @return The tags.
     * 
     */
    public Output<Map<String,String>> tags() {
        return this.tags;
    }
    /**
     * The update token.
     * 
     */
    @Export(name="updateToken", refs={String.class}, tree="[0]")
    private Output<String> updateToken;

    /**
     * @return The update token.
     * 
     */
    public Output<String> updateToken() {
        return this.updateToken;
    }
    @Export(name="userIds", refs={List.class,NgfwUserId.class}, tree="[0,1]")
    private Output<List<NgfwUserId>> userIds;

    public Output<List<NgfwUserId>> userIds() {
        return this.userIds;
    }
    /**
     * The VPC ID for the NGFW.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpcId;

    /**
     * @return The VPC ID for the NGFW.
     * 
     */
    public Output<Optional<String>> vpcId() {
        return Codegen.optional(this.vpcId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Ngfw(java.lang.String name) {
        this(name, NgfwArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Ngfw(java.lang.String name, NgfwArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Ngfw(java.lang.String name, NgfwArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudngfwaws:index/ngfw:Ngfw", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Ngfw(java.lang.String name, Output<java.lang.String> id, @Nullable NgfwState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudngfwaws:index/ngfw:Ngfw", name, state, makeResourceOptions(options, id), false);
    }

    private static NgfwArgs makeArgs(NgfwArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NgfwArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi/pulumi-cloudngfwaws")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Ngfw get(java.lang.String name, Output<java.lang.String> id, @Nullable NgfwState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Ngfw(name, id, state, options);
    }
}
