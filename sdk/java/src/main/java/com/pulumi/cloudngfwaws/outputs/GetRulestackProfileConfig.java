// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRulestackProfileConfig {
    /**
     * @return Anti-spyware profile setting.
     * 
     */
    private String antiSpyware;
    /**
     * @return Anti-virus profile setting.
     * 
     */
    private String antiVirus;
    /**
     * @return File blocking profile setting.
     * 
     */
    private String fileBlocking;
    /**
     * @return Outbound trust certificate.
     * 
     */
    private String outboundTrustCertificate;
    /**
     * @return Outbound untrust certificate.
     * 
     */
    private String outboundUntrustCertificate;
    /**
     * @return URL filtering profile setting.
     * 
     */
    private String urlFiltering;
    /**
     * @return Vulnerability profile setting.
     * 
     */
    private String vulnerability;

    private GetRulestackProfileConfig() {}
    /**
     * @return Anti-spyware profile setting.
     * 
     */
    public String antiSpyware() {
        return this.antiSpyware;
    }
    /**
     * @return Anti-virus profile setting.
     * 
     */
    public String antiVirus() {
        return this.antiVirus;
    }
    /**
     * @return File blocking profile setting.
     * 
     */
    public String fileBlocking() {
        return this.fileBlocking;
    }
    /**
     * @return Outbound trust certificate.
     * 
     */
    public String outboundTrustCertificate() {
        return this.outboundTrustCertificate;
    }
    /**
     * @return Outbound untrust certificate.
     * 
     */
    public String outboundUntrustCertificate() {
        return this.outboundUntrustCertificate;
    }
    /**
     * @return URL filtering profile setting.
     * 
     */
    public String urlFiltering() {
        return this.urlFiltering;
    }
    /**
     * @return Vulnerability profile setting.
     * 
     */
    public String vulnerability() {
        return this.vulnerability;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulestackProfileConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String antiSpyware;
        private String antiVirus;
        private String fileBlocking;
        private String outboundTrustCertificate;
        private String outboundUntrustCertificate;
        private String urlFiltering;
        private String vulnerability;
        public Builder() {}
        public Builder(GetRulestackProfileConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.antiSpyware = defaults.antiSpyware;
    	      this.antiVirus = defaults.antiVirus;
    	      this.fileBlocking = defaults.fileBlocking;
    	      this.outboundTrustCertificate = defaults.outboundTrustCertificate;
    	      this.outboundUntrustCertificate = defaults.outboundUntrustCertificate;
    	      this.urlFiltering = defaults.urlFiltering;
    	      this.vulnerability = defaults.vulnerability;
        }

        @CustomType.Setter
        public Builder antiSpyware(String antiSpyware) {
            if (antiSpyware == null) {
              throw new MissingRequiredPropertyException("GetRulestackProfileConfig", "antiSpyware");
            }
            this.antiSpyware = antiSpyware;
            return this;
        }
        @CustomType.Setter
        public Builder antiVirus(String antiVirus) {
            if (antiVirus == null) {
              throw new MissingRequiredPropertyException("GetRulestackProfileConfig", "antiVirus");
            }
            this.antiVirus = antiVirus;
            return this;
        }
        @CustomType.Setter
        public Builder fileBlocking(String fileBlocking) {
            if (fileBlocking == null) {
              throw new MissingRequiredPropertyException("GetRulestackProfileConfig", "fileBlocking");
            }
            this.fileBlocking = fileBlocking;
            return this;
        }
        @CustomType.Setter
        public Builder outboundTrustCertificate(String outboundTrustCertificate) {
            if (outboundTrustCertificate == null) {
              throw new MissingRequiredPropertyException("GetRulestackProfileConfig", "outboundTrustCertificate");
            }
            this.outboundTrustCertificate = outboundTrustCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder outboundUntrustCertificate(String outboundUntrustCertificate) {
            if (outboundUntrustCertificate == null) {
              throw new MissingRequiredPropertyException("GetRulestackProfileConfig", "outboundUntrustCertificate");
            }
            this.outboundUntrustCertificate = outboundUntrustCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder urlFiltering(String urlFiltering) {
            if (urlFiltering == null) {
              throw new MissingRequiredPropertyException("GetRulestackProfileConfig", "urlFiltering");
            }
            this.urlFiltering = urlFiltering;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerability(String vulnerability) {
            if (vulnerability == null) {
              throw new MissingRequiredPropertyException("GetRulestackProfileConfig", "vulnerability");
            }
            this.vulnerability = vulnerability;
            return this;
        }
        public GetRulestackProfileConfig build() {
            final var _resultValue = new GetRulestackProfileConfig();
            _resultValue.antiSpyware = antiSpyware;
            _resultValue.antiVirus = antiVirus;
            _resultValue.fileBlocking = fileBlocking;
            _resultValue.outboundTrustCertificate = outboundTrustCertificate;
            _resultValue.outboundUntrustCertificate = outboundUntrustCertificate;
            _resultValue.urlFiltering = urlFiltering;
            _resultValue.vulnerability = vulnerability;
            return _resultValue;
        }
    }
}
