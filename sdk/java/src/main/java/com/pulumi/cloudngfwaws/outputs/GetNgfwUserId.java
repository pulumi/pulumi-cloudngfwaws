// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.cloudngfwaws.outputs.GetNgfwUserIdCustomIncludeExcludeNetwork;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNgfwUserId {
    /**
     * @return Agent Name for UserID
     * 
     */
    private String agentName;
    /**
     * @return The Collector Name
     * 
     */
    private String collectorName;
    /**
     * @return List of Custom Include Exclude Networks
     * 
     */
    private List<GetNgfwUserIdCustomIncludeExcludeNetwork> customIncludeExcludeNetworks;
    /**
     * @return Enable UserID Config
     * 
     */
    private Boolean enabled;
    /**
     * @return The Port
     * 
     */
    private Integer port;
    /**
     * @return AWS Secret Key ARN
     * 
     */
    private String secretKeyArn;
    /**
     * @return Status and State of UserID Configuration
     * 
     */
    private String userIdStatus;

    private GetNgfwUserId() {}
    /**
     * @return Agent Name for UserID
     * 
     */
    public String agentName() {
        return this.agentName;
    }
    /**
     * @return The Collector Name
     * 
     */
    public String collectorName() {
        return this.collectorName;
    }
    /**
     * @return List of Custom Include Exclude Networks
     * 
     */
    public List<GetNgfwUserIdCustomIncludeExcludeNetwork> customIncludeExcludeNetworks() {
        return this.customIncludeExcludeNetworks;
    }
    /**
     * @return Enable UserID Config
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The Port
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return AWS Secret Key ARN
     * 
     */
    public String secretKeyArn() {
        return this.secretKeyArn;
    }
    /**
     * @return Status and State of UserID Configuration
     * 
     */
    public String userIdStatus() {
        return this.userIdStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNgfwUserId defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String agentName;
        private String collectorName;
        private List<GetNgfwUserIdCustomIncludeExcludeNetwork> customIncludeExcludeNetworks;
        private Boolean enabled;
        private Integer port;
        private String secretKeyArn;
        private String userIdStatus;
        public Builder() {}
        public Builder(GetNgfwUserId defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentName = defaults.agentName;
    	      this.collectorName = defaults.collectorName;
    	      this.customIncludeExcludeNetworks = defaults.customIncludeExcludeNetworks;
    	      this.enabled = defaults.enabled;
    	      this.port = defaults.port;
    	      this.secretKeyArn = defaults.secretKeyArn;
    	      this.userIdStatus = defaults.userIdStatus;
        }

        @CustomType.Setter
        public Builder agentName(String agentName) {
            if (agentName == null) {
              throw new MissingRequiredPropertyException("GetNgfwUserId", "agentName");
            }
            this.agentName = agentName;
            return this;
        }
        @CustomType.Setter
        public Builder collectorName(String collectorName) {
            if (collectorName == null) {
              throw new MissingRequiredPropertyException("GetNgfwUserId", "collectorName");
            }
            this.collectorName = collectorName;
            return this;
        }
        @CustomType.Setter
        public Builder customIncludeExcludeNetworks(List<GetNgfwUserIdCustomIncludeExcludeNetwork> customIncludeExcludeNetworks) {
            if (customIncludeExcludeNetworks == null) {
              throw new MissingRequiredPropertyException("GetNgfwUserId", "customIncludeExcludeNetworks");
            }
            this.customIncludeExcludeNetworks = customIncludeExcludeNetworks;
            return this;
        }
        public Builder customIncludeExcludeNetworks(GetNgfwUserIdCustomIncludeExcludeNetwork... customIncludeExcludeNetworks) {
            return customIncludeExcludeNetworks(List.of(customIncludeExcludeNetworks));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetNgfwUserId", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetNgfwUserId", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder secretKeyArn(String secretKeyArn) {
            if (secretKeyArn == null) {
              throw new MissingRequiredPropertyException("GetNgfwUserId", "secretKeyArn");
            }
            this.secretKeyArn = secretKeyArn;
            return this;
        }
        @CustomType.Setter
        public Builder userIdStatus(String userIdStatus) {
            if (userIdStatus == null) {
              throw new MissingRequiredPropertyException("GetNgfwUserId", "userIdStatus");
            }
            this.userIdStatus = userIdStatus;
            return this;
        }
        public GetNgfwUserId build() {
            final var _resultValue = new GetNgfwUserId();
            _resultValue.agentName = agentName;
            _resultValue.collectorName = collectorName;
            _resultValue.customIncludeExcludeNetworks = customIncludeExcludeNetworks;
            _resultValue.enabled = enabled;
            _resultValue.port = port;
            _resultValue.secretKeyArn = secretKeyArn;
            _resultValue.userIdStatus = userIdStatus;
            return _resultValue;
        }
    }
}
