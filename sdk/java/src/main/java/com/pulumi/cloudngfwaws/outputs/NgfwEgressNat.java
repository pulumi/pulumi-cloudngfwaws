// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.cloudngfwaws.outputs.NgfwEgressNatSetting;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class NgfwEgressNat {
    /**
     * @return Enable egress NAT
     * 
     */
    private Boolean enabled;
    private @Nullable List<NgfwEgressNatSetting> settings;

    private NgfwEgressNat() {}
    /**
     * @return Enable egress NAT
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    public List<NgfwEgressNatSetting> settings() {
        return this.settings == null ? List.of() : this.settings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NgfwEgressNat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable List<NgfwEgressNatSetting> settings;
        public Builder() {}
        public Builder(NgfwEgressNat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.settings = defaults.settings;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("NgfwEgressNat", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder settings(@Nullable List<NgfwEgressNatSetting> settings) {

            this.settings = settings;
            return this;
        }
        public Builder settings(NgfwEgressNatSetting... settings) {
            return settings(List.of(settings));
        }
        public NgfwEgressNat build() {
            final var _resultValue = new NgfwEgressNat();
            _resultValue.enabled = enabled;
            _resultValue.settings = settings;
            return _resultValue;
        }
    }
}
