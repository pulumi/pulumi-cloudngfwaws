// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.inputs;

import com.pulumi.cloudngfwaws.inputs.GetAccountsAccountDetailArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccountsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccountsArgs Empty = new GetAccountsArgs();

    /**
     * List of account details.
     * 
     */
    @Import(name="accountDetails")
    private @Nullable Output<List<GetAccountsAccountDetailArgs>> accountDetails;

    /**
     * @return List of account details.
     * 
     */
    public Optional<Output<List<GetAccountsAccountDetailArgs>>> accountDetails() {
        return Optional.ofNullable(this.accountDetails);
    }

    /**
     * List of account ids.
     * 
     */
    @Import(name="accountIds")
    private @Nullable Output<List<String>> accountIds;

    /**
     * @return List of account ids.
     * 
     */
    public Optional<Output<List<String>>> accountIds() {
        return Optional.ofNullable(this.accountIds);
    }

    /**
     * Flag to include account details while listing accounts. Defaults to `false`.
     * 
     */
    @Import(name="describe")
    private @Nullable Output<Boolean> describe;

    /**
     * @return Flag to include account details while listing accounts. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> describe() {
        return Optional.ofNullable(this.describe);
    }

    private GetAccountsArgs() {}

    private GetAccountsArgs(GetAccountsArgs $) {
        this.accountDetails = $.accountDetails;
        this.accountIds = $.accountIds;
        this.describe = $.describe;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccountsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccountsArgs $;

        public Builder() {
            $ = new GetAccountsArgs();
        }

        public Builder(GetAccountsArgs defaults) {
            $ = new GetAccountsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountDetails List of account details.
         * 
         * @return builder
         * 
         */
        public Builder accountDetails(@Nullable Output<List<GetAccountsAccountDetailArgs>> accountDetails) {
            $.accountDetails = accountDetails;
            return this;
        }

        /**
         * @param accountDetails List of account details.
         * 
         * @return builder
         * 
         */
        public Builder accountDetails(List<GetAccountsAccountDetailArgs> accountDetails) {
            return accountDetails(Output.of(accountDetails));
        }

        /**
         * @param accountDetails List of account details.
         * 
         * @return builder
         * 
         */
        public Builder accountDetails(GetAccountsAccountDetailArgs... accountDetails) {
            return accountDetails(List.of(accountDetails));
        }

        /**
         * @param accountIds List of account ids.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(@Nullable Output<List<String>> accountIds) {
            $.accountIds = accountIds;
            return this;
        }

        /**
         * @param accountIds List of account ids.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(List<String> accountIds) {
            return accountIds(Output.of(accountIds));
        }

        /**
         * @param accountIds List of account ids.
         * 
         * @return builder
         * 
         */
        public Builder accountIds(String... accountIds) {
            return accountIds(List.of(accountIds));
        }

        /**
         * @param describe Flag to include account details while listing accounts. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder describe(@Nullable Output<Boolean> describe) {
            $.describe = describe;
            return this;
        }

        /**
         * @param describe Flag to include account details while listing accounts. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder describe(Boolean describe) {
            return describe(Output.of(describe));
        }

        public GetAccountsArgs build() {
            return $;
        }
    }

}
