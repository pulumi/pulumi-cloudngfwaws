// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws;

import com.pulumi.cloudngfwaws.Utilities;
import com.pulumi.cloudngfwaws.inputs.GetAccountArgs;
import com.pulumi.cloudngfwaws.inputs.GetAccountPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetAccountsArgs;
import com.pulumi.cloudngfwaws.inputs.GetAccountsPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionArgs;
import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionsArgs;
import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionsPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetCertificateArgs;
import com.pulumi.cloudngfwaws.inputs.GetCertificatePlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetCountryArgs;
import com.pulumi.cloudngfwaws.inputs.GetCountryPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetCustomUrlCategoryArgs;
import com.pulumi.cloudngfwaws.inputs.GetCustomUrlCategoryPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetFqdnListArgs;
import com.pulumi.cloudngfwaws.inputs.GetFqdnListPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetIntelligentFeedArgs;
import com.pulumi.cloudngfwaws.inputs.GetIntelligentFeedPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetNgfwArgs;
import com.pulumi.cloudngfwaws.inputs.GetNgfwLogProfileArgs;
import com.pulumi.cloudngfwaws.inputs.GetNgfwLogProfilePlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetNgfwPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetNgfwsArgs;
import com.pulumi.cloudngfwaws.inputs.GetNgfwsPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoriesArgs;
import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoriesPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoryOverrideArgs;
import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoryOverridePlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetPrefixListArgs;
import com.pulumi.cloudngfwaws.inputs.GetPrefixListPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetRulestackArgs;
import com.pulumi.cloudngfwaws.inputs.GetRulestackPlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetSecurityRuleArgs;
import com.pulumi.cloudngfwaws.inputs.GetSecurityRulePlainArgs;
import com.pulumi.cloudngfwaws.inputs.GetValidateRulestackArgs;
import com.pulumi.cloudngfwaws.inputs.GetValidateRulestackPlainArgs;
import com.pulumi.cloudngfwaws.outputs.GetAccountResult;
import com.pulumi.cloudngfwaws.outputs.GetAccountsResult;
import com.pulumi.cloudngfwaws.outputs.GetAppIdVersionResult;
import com.pulumi.cloudngfwaws.outputs.GetAppIdVersionsResult;
import com.pulumi.cloudngfwaws.outputs.GetCertificateResult;
import com.pulumi.cloudngfwaws.outputs.GetCountryResult;
import com.pulumi.cloudngfwaws.outputs.GetCustomUrlCategoryResult;
import com.pulumi.cloudngfwaws.outputs.GetFqdnListResult;
import com.pulumi.cloudngfwaws.outputs.GetIntelligentFeedResult;
import com.pulumi.cloudngfwaws.outputs.GetNgfwLogProfileResult;
import com.pulumi.cloudngfwaws.outputs.GetNgfwResult;
import com.pulumi.cloudngfwaws.outputs.GetNgfwsResult;
import com.pulumi.cloudngfwaws.outputs.GetPredefinedUrlCategoriesResult;
import com.pulumi.cloudngfwaws.outputs.GetPredefinedUrlCategoryOverrideResult;
import com.pulumi.cloudngfwaws.outputs.GetPrefixListResult;
import com.pulumi.cloudngfwaws.outputs.GetRulestackResult;
import com.pulumi.cloudngfwaws.outputs.GetSecurityRuleResult;
import com.pulumi.cloudngfwaws.outputs.GetValidateRulestackResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class CloudngfwawsFunctions {
    /**
     * Data source for retrieving account information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetAccountResult> getAccount() {
        return getAccount(GetAccountArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving account information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain() {
        return getAccountPlain(GetAccountPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving account information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args) {
        return getAccount(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving account information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(GetAccountPlainArgs args) {
        return getAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving account information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving account information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving account information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(GetAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of Accounts.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetAccountsResult> getAccounts() {
        return getAccounts(GetAccountsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of Accounts.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static CompletableFuture<GetAccountsResult> getAccountsPlain() {
        return getAccountsPlain(GetAccountsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of Accounts.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args) {
        return getAccounts(args, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of Accounts.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static CompletableFuture<GetAccountsResult> getAccountsPlain(GetAccountsPlainArgs args) {
        return getAccountsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of Accounts.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of Accounts.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of Accounts.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static CompletableFuture<GetAccountsResult> getAccountsPlain(GetAccountsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve information on a given AppId version.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersion(GetAppIdVersionArgs.builder()
     *             .version("123-456")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppIdVersionResult> getAppIdVersion(GetAppIdVersionArgs args) {
        return getAppIdVersion(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve information on a given AppId version.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersion(GetAppIdVersionArgs.builder()
     *             .version("123-456")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppIdVersionResult> getAppIdVersionPlain(GetAppIdVersionPlainArgs args) {
        return getAppIdVersionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve information on a given AppId version.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersion(GetAppIdVersionArgs.builder()
     *             .version("123-456")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppIdVersionResult> getAppIdVersion(GetAppIdVersionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getAppIdVersion:getAppIdVersion", TypeShape.of(GetAppIdVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve information on a given AppId version.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersion(GetAppIdVersionArgs.builder()
     *             .version("123-456")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppIdVersionResult> getAppIdVersion(GetAppIdVersionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getAppIdVersion:getAppIdVersion", TypeShape.of(GetAppIdVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve information on a given AppId version.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersion(GetAppIdVersionArgs.builder()
     *             .version("123-456")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppIdVersionResult> getAppIdVersionPlain(GetAppIdVersionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getAppIdVersion:getAppIdVersion", TypeShape.of(GetAppIdVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of AppId versions.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersions(GetAppIdVersionsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppIdVersionsResult> getAppIdVersions() {
        return getAppIdVersions(GetAppIdVersionsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of AppId versions.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersions(GetAppIdVersionsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppIdVersionsResult> getAppIdVersionsPlain() {
        return getAppIdVersionsPlain(GetAppIdVersionsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of AppId versions.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersions(GetAppIdVersionsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppIdVersionsResult> getAppIdVersions(GetAppIdVersionsArgs args) {
        return getAppIdVersions(args, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of AppId versions.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersions(GetAppIdVersionsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppIdVersionsResult> getAppIdVersionsPlain(GetAppIdVersionsPlainArgs args) {
        return getAppIdVersionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of AppId versions.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersions(GetAppIdVersionsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppIdVersionsResult> getAppIdVersions(GetAppIdVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getAppIdVersions:getAppIdVersions", TypeShape.of(GetAppIdVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of AppId versions.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersions(GetAppIdVersionsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppIdVersionsResult> getAppIdVersions(GetAppIdVersionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getAppIdVersions:getAppIdVersions", TypeShape.of(GetAppIdVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of AppId versions.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetAppIdVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getAppIdVersions(GetAppIdVersionsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppIdVersionsResult> getAppIdVersionsPlain(GetAppIdVersionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getAppIdVersions:getAppIdVersions", TypeShape.of(GetAppIdVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving certificate information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args) {
        return getCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving certificate information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args) {
        return getCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving certificate information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving certificate information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving certificate information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCertificate(GetCertificateArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of countries and their country codes.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCountryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getCountry(GetCountryArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCountryResult> getCountry() {
        return getCountry(GetCountryArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of countries and their country codes.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCountryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getCountry(GetCountryArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCountryResult> getCountryPlain() {
        return getCountryPlain(GetCountryPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of countries and their country codes.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCountryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getCountry(GetCountryArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCountryResult> getCountry(GetCountryArgs args) {
        return getCountry(args, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of countries and their country codes.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCountryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getCountry(GetCountryArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCountryResult> getCountryPlain(GetCountryPlainArgs args) {
        return getCountryPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of countries and their country codes.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCountryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getCountry(GetCountryArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCountryResult> getCountry(GetCountryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getCountry:getCountry", TypeShape.of(GetCountryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of countries and their country codes.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCountryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getCountry(GetCountryArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCountryResult> getCountry(GetCountryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getCountry:getCountry", TypeShape.of(GetCountryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of countries and their country codes.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCountryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getCountry(GetCountryArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCountryResult> getCountryPlain(GetCountryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getCountry:getCountry", TypeShape.of(GetCountryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving custom url category information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCustomUrlCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCustomUrlCategory(GetCustomUrlCategoryArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomUrlCategoryResult> getCustomUrlCategory(GetCustomUrlCategoryArgs args) {
        return getCustomUrlCategory(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving custom url category information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCustomUrlCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCustomUrlCategory(GetCustomUrlCategoryArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomUrlCategoryResult> getCustomUrlCategoryPlain(GetCustomUrlCategoryPlainArgs args) {
        return getCustomUrlCategoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving custom url category information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCustomUrlCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCustomUrlCategory(GetCustomUrlCategoryArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomUrlCategoryResult> getCustomUrlCategory(GetCustomUrlCategoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getCustomUrlCategory:getCustomUrlCategory", TypeShape.of(GetCustomUrlCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving custom url category information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCustomUrlCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCustomUrlCategory(GetCustomUrlCategoryArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomUrlCategoryResult> getCustomUrlCategory(GetCustomUrlCategoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getCustomUrlCategory:getCustomUrlCategory", TypeShape.of(GetCustomUrlCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving custom url category information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetCustomUrlCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getCustomUrlCategory(GetCustomUrlCategoryArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomUrlCategoryResult> getCustomUrlCategoryPlain(GetCustomUrlCategoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getCustomUrlCategory:getCustomUrlCategory", TypeShape.of(GetCustomUrlCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving fqdn list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetFqdnListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getFqdnList(GetFqdnListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFqdnListResult> getFqdnList(GetFqdnListArgs args) {
        return getFqdnList(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving fqdn list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetFqdnListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getFqdnList(GetFqdnListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFqdnListResult> getFqdnListPlain(GetFqdnListPlainArgs args) {
        return getFqdnListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving fqdn list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetFqdnListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getFqdnList(GetFqdnListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFqdnListResult> getFqdnList(GetFqdnListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getFqdnList:getFqdnList", TypeShape.of(GetFqdnListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving fqdn list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetFqdnListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getFqdnList(GetFqdnListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFqdnListResult> getFqdnList(GetFqdnListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getFqdnList:getFqdnList", TypeShape.of(GetFqdnListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving fqdn list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetFqdnListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getFqdnList(GetFqdnListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFqdnListResult> getFqdnListPlain(GetFqdnListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getFqdnList:getFqdnList", TypeShape.of(GetFqdnListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving intelligent feed information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetIntelligentFeedArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getIntelligentFeed(GetIntelligentFeedArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIntelligentFeedResult> getIntelligentFeed(GetIntelligentFeedArgs args) {
        return getIntelligentFeed(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving intelligent feed information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetIntelligentFeedArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getIntelligentFeed(GetIntelligentFeedArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIntelligentFeedResult> getIntelligentFeedPlain(GetIntelligentFeedPlainArgs args) {
        return getIntelligentFeedPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving intelligent feed information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetIntelligentFeedArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getIntelligentFeed(GetIntelligentFeedArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIntelligentFeedResult> getIntelligentFeed(GetIntelligentFeedArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getIntelligentFeed:getIntelligentFeed", TypeShape.of(GetIntelligentFeedResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving intelligent feed information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetIntelligentFeedArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getIntelligentFeed(GetIntelligentFeedArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIntelligentFeedResult> getIntelligentFeed(GetIntelligentFeedArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getIntelligentFeed:getIntelligentFeed", TypeShape.of(GetIntelligentFeedResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving intelligent feed information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetIntelligentFeedArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getIntelligentFeed(GetIntelligentFeedArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIntelligentFeedResult> getIntelligentFeedPlain(GetIntelligentFeedPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getIntelligentFeed:getIntelligentFeed", TypeShape.of(GetIntelligentFeedResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving NGFW information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfw(GetNgfwArgs.builder()
     *             .name("example-instance")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwResult> getNgfw(GetNgfwArgs args) {
        return getNgfw(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving NGFW information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfw(GetNgfwArgs.builder()
     *             .name("example-instance")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNgfwResult> getNgfwPlain(GetNgfwPlainArgs args) {
        return getNgfwPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving NGFW information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfw(GetNgfwArgs.builder()
     *             .name("example-instance")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwResult> getNgfw(GetNgfwArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getNgfw:getNgfw", TypeShape.of(GetNgfwResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving NGFW information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfw(GetNgfwArgs.builder()
     *             .name("example-instance")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwResult> getNgfw(GetNgfwArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getNgfw:getNgfw", TypeShape.of(GetNgfwResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving NGFW information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfw(GetNgfwArgs.builder()
     *             .name("example-instance")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNgfwResult> getNgfwPlain(GetNgfwPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getNgfw:getNgfw", TypeShape.of(GetNgfwResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving log profile information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwLogProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfwLogProfile(GetNgfwLogProfileArgs.builder()
     *             .ngfw("example-instance")
     *             .accountId("123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwLogProfileResult> getNgfwLogProfile(GetNgfwLogProfileArgs args) {
        return getNgfwLogProfile(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving log profile information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwLogProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfwLogProfile(GetNgfwLogProfileArgs.builder()
     *             .ngfw("example-instance")
     *             .accountId("123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNgfwLogProfileResult> getNgfwLogProfilePlain(GetNgfwLogProfilePlainArgs args) {
        return getNgfwLogProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving log profile information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwLogProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfwLogProfile(GetNgfwLogProfileArgs.builder()
     *             .ngfw("example-instance")
     *             .accountId("123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwLogProfileResult> getNgfwLogProfile(GetNgfwLogProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getNgfwLogProfile:getNgfwLogProfile", TypeShape.of(GetNgfwLogProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving log profile information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwLogProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfwLogProfile(GetNgfwLogProfileArgs.builder()
     *             .ngfw("example-instance")
     *             .accountId("123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwLogProfileResult> getNgfwLogProfile(GetNgfwLogProfileArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getNgfwLogProfile:getNgfwLogProfile", TypeShape.of(GetNgfwLogProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving log profile information.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwLogProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfwLogProfile(GetNgfwLogProfileArgs.builder()
     *             .ngfw("example-instance")
     *             .accountId("123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNgfwLogProfileResult> getNgfwLogProfilePlain(GetNgfwLogProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getNgfwLogProfile:getNgfwLogProfile", TypeShape.of(GetNgfwLogProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of NGFWs.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfws(GetNgfwsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwsResult> getNgfws() {
        return getNgfws(GetNgfwsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of NGFWs.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfws(GetNgfwsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNgfwsResult> getNgfwsPlain() {
        return getNgfwsPlain(GetNgfwsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of NGFWs.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfws(GetNgfwsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwsResult> getNgfws(GetNgfwsArgs args) {
        return getNgfws(args, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of NGFWs.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfws(GetNgfwsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNgfwsResult> getNgfwsPlain(GetNgfwsPlainArgs args) {
        return getNgfwsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source get a list of NGFWs.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfws(GetNgfwsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwsResult> getNgfws(GetNgfwsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getNgfws:getNgfws", TypeShape.of(GetNgfwsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of NGFWs.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfws(GetNgfwsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNgfwsResult> getNgfws(GetNgfwsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getNgfws:getNgfws", TypeShape.of(GetNgfwsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source get a list of NGFWs.
     * 
     * ## Admin Permission Type
     * 
     * * `Firewall`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetNgfwsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getNgfws(GetNgfwsArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNgfwsResult> getNgfwsPlain(GetNgfwsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getNgfws:getNgfws", TypeShape.of(GetNgfwsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving the predefined URL categories.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPredefinedUrlCategoriesResult> getPredefinedUrlCategories() {
        return getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the predefined URL categories.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPredefinedUrlCategoriesResult> getPredefinedUrlCategoriesPlain() {
        return getPredefinedUrlCategoriesPlain(GetPredefinedUrlCategoriesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the predefined URL categories.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPredefinedUrlCategoriesResult> getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs args) {
        return getPredefinedUrlCategories(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the predefined URL categories.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPredefinedUrlCategoriesResult> getPredefinedUrlCategoriesPlain(GetPredefinedUrlCategoriesPlainArgs args) {
        return getPredefinedUrlCategoriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the predefined URL categories.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPredefinedUrlCategoriesResult> getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getPredefinedUrlCategories:getPredefinedUrlCategories", TypeShape.of(GetPredefinedUrlCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving the predefined URL categories.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPredefinedUrlCategoriesResult> getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getPredefinedUrlCategories:getPredefinedUrlCategories", TypeShape.of(GetPredefinedUrlCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving the predefined URL categories.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategories(GetPredefinedUrlCategoriesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPredefinedUrlCategoriesResult> getPredefinedUrlCategoriesPlain(GetPredefinedUrlCategoriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getPredefinedUrlCategories:getPredefinedUrlCategories", TypeShape.of(GetPredefinedUrlCategoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a predefined URL category override.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoryOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategoryOverride(GetPredefinedUrlCategoryOverrideArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPredefinedUrlCategoryOverrideResult> getPredefinedUrlCategoryOverride(GetPredefinedUrlCategoryOverrideArgs args) {
        return getPredefinedUrlCategoryOverride(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a predefined URL category override.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoryOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategoryOverride(GetPredefinedUrlCategoryOverrideArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPredefinedUrlCategoryOverrideResult> getPredefinedUrlCategoryOverridePlain(GetPredefinedUrlCategoryOverridePlainArgs args) {
        return getPredefinedUrlCategoryOverridePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a predefined URL category override.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoryOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategoryOverride(GetPredefinedUrlCategoryOverrideArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPredefinedUrlCategoryOverrideResult> getPredefinedUrlCategoryOverride(GetPredefinedUrlCategoryOverrideArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getPredefinedUrlCategoryOverride:getPredefinedUrlCategoryOverride", TypeShape.of(GetPredefinedUrlCategoryOverrideResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a predefined URL category override.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoryOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategoryOverride(GetPredefinedUrlCategoryOverrideArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPredefinedUrlCategoryOverrideResult> getPredefinedUrlCategoryOverride(GetPredefinedUrlCategoryOverrideArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getPredefinedUrlCategoryOverride:getPredefinedUrlCategoryOverride", TypeShape.of(GetPredefinedUrlCategoryOverrideResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a predefined URL category override.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPredefinedUrlCategoryOverrideArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPredefinedUrlCategoryOverride(GetPredefinedUrlCategoryOverrideArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPredefinedUrlCategoryOverrideResult> getPredefinedUrlCategoryOverridePlain(GetPredefinedUrlCategoryOverridePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getPredefinedUrlCategoryOverride:getPredefinedUrlCategoryOverride", TypeShape.of(GetPredefinedUrlCategoryOverrideResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving prefix list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPrefixListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPrefixList(GetPrefixListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPrefixListResult> getPrefixList(GetPrefixListArgs args) {
        return getPrefixList(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving prefix list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPrefixListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPrefixList(GetPrefixListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPrefixListResult> getPrefixListPlain(GetPrefixListPlainArgs args) {
        return getPrefixListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving prefix list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPrefixListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPrefixList(GetPrefixListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPrefixListResult> getPrefixList(GetPrefixListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getPrefixList:getPrefixList", TypeShape.of(GetPrefixListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving prefix list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPrefixListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPrefixList(GetPrefixListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPrefixListResult> getPrefixList(GetPrefixListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getPrefixList:getPrefixList", TypeShape.of(GetPrefixListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving prefix list information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.Rulestack;
     * import com.pulumi.cloudngfwaws.RulestackArgs;
     * import com.pulumi.cloudngfwaws.inputs.RulestackProfileConfigArgs;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetPrefixListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var r = new Rulestack("r", RulestackArgs.builder()
     *             .name("my-rulestack")
     *             .scope("Local")
     *             .accountId("12345")
     *             .description("Made by Pulumi")
     *             .profileConfig(RulestackProfileConfigArgs.builder()
     *                 .antiSpyware("BestPractice")
     *                 .build())
     *             .build());
     * 
     *         final var example = CloudngfwawsFunctions.getPrefixList(GetPrefixListArgs.builder()
     *             .rulestack(r.name())
     *             .name("foobar")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPrefixListResult> getPrefixListPlain(GetPrefixListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getPrefixList:getPrefixList", TypeShape.of(GetPrefixListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving rulestack information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetRulestackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getRulestack(GetRulestackArgs.builder()
     *             .name("my-rulestack-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulestackResult> getRulestack(GetRulestackArgs args) {
        return getRulestack(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving rulestack information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetRulestackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getRulestack(GetRulestackArgs.builder()
     *             .name("my-rulestack-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRulestackResult> getRulestackPlain(GetRulestackPlainArgs args) {
        return getRulestackPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving rulestack information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetRulestackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getRulestack(GetRulestackArgs.builder()
     *             .name("my-rulestack-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulestackResult> getRulestack(GetRulestackArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getRulestack:getRulestack", TypeShape.of(GetRulestackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving rulestack information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetRulestackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getRulestack(GetRulestackArgs.builder()
     *             .name("my-rulestack-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRulestackResult> getRulestack(GetRulestackArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getRulestack:getRulestack", TypeShape.of(GetRulestackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving rulestack information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudngfwaws.CloudngfwawsFunctions;
     * import com.pulumi.cloudngfwaws.inputs.GetRulestackArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CloudngfwawsFunctions.getRulestack(GetRulestackArgs.builder()
     *             .name("my-rulestack-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRulestackResult> getRulestackPlain(GetRulestackPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getRulestack:getRulestack", TypeShape.of(GetRulestackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving security rule information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityRuleResult> getSecurityRule(GetSecurityRuleArgs args) {
        return getSecurityRule(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving security rule information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityRuleResult> getSecurityRulePlain(GetSecurityRulePlainArgs args) {
        return getSecurityRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving security rule information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityRuleResult> getSecurityRule(GetSecurityRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getSecurityRule:getSecurityRule", TypeShape.of(GetSecurityRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving security rule information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityRuleResult> getSecurityRule(GetSecurityRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getSecurityRule:getSecurityRule", TypeShape.of(GetSecurityRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving security rule information.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityRuleResult> getSecurityRulePlain(GetSecurityRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getSecurityRule:getSecurityRule", TypeShape.of(GetSecurityRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to validate the rulestack config.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetValidateRulestackResult> getValidateRulestack(GetValidateRulestackArgs args) {
        return getValidateRulestack(args, InvokeOptions.Empty);
    }
    /**
     * Data source to validate the rulestack config.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static CompletableFuture<GetValidateRulestackResult> getValidateRulestackPlain(GetValidateRulestackPlainArgs args) {
        return getValidateRulestackPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to validate the rulestack config.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetValidateRulestackResult> getValidateRulestack(GetValidateRulestackArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getValidateRulestack:getValidateRulestack", TypeShape.of(GetValidateRulestackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to validate the rulestack config.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static Output<GetValidateRulestackResult> getValidateRulestack(GetValidateRulestackArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("cloudngfwaws:index/getValidateRulestack:getValidateRulestack", TypeShape.of(GetValidateRulestackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to validate the rulestack config.
     * 
     * ## Admin Permission Type
     * 
     * * `Rulestack` (for `scope=&#34;Local&#34;`)
     * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
     * 
     */
    public static CompletableFuture<GetValidateRulestackResult> getValidateRulestackPlain(GetValidateRulestackPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudngfwaws:index/getValidateRulestack:getValidateRulestack", TypeShape.of(GetValidateRulestackResult.class), args, Utilities.withVersion(options));
    }
}
