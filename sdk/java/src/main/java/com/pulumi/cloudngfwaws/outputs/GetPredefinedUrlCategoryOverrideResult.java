// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPredefinedUrlCategoryOverrideResult {
    /**
     * @return The action to take. Valid values are `none`, `allow`, `alert`, or `block`.
     * 
     */
    private String action;
    /**
     * @return The audit comment.
     * 
     */
    private String auditComment;
    /**
     * @return Retrieve either the candidate or running config. Valid values are `candidate` or `running`. Defaults to `candidate`.
     * 
     */
    private @Nullable String configType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name.
     * 
     */
    private String name;
    /**
     * @return The rulestack.
     * 
     */
    private String rulestack;
    /**
     * @return Update token.
     * 
     */
    private String updateToken;

    private GetPredefinedUrlCategoryOverrideResult() {}
    /**
     * @return The action to take. Valid values are `none`, `allow`, `alert`, or `block`.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return The audit comment.
     * 
     */
    public String auditComment() {
        return this.auditComment;
    }
    /**
     * @return Retrieve either the candidate or running config. Valid values are `candidate` or `running`. Defaults to `candidate`.
     * 
     */
    public Optional<String> configType() {
        return Optional.ofNullable(this.configType);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The rulestack.
     * 
     */
    public String rulestack() {
        return this.rulestack;
    }
    /**
     * @return Update token.
     * 
     */
    public String updateToken() {
        return this.updateToken;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPredefinedUrlCategoryOverrideResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String auditComment;
        private @Nullable String configType;
        private String id;
        private String name;
        private String rulestack;
        private String updateToken;
        public Builder() {}
        public Builder(GetPredefinedUrlCategoryOverrideResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.auditComment = defaults.auditComment;
    	      this.configType = defaults.configType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.rulestack = defaults.rulestack;
    	      this.updateToken = defaults.updateToken;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetPredefinedUrlCategoryOverrideResult", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder auditComment(String auditComment) {
            if (auditComment == null) {
              throw new MissingRequiredPropertyException("GetPredefinedUrlCategoryOverrideResult", "auditComment");
            }
            this.auditComment = auditComment;
            return this;
        }
        @CustomType.Setter
        public Builder configType(@Nullable String configType) {

            this.configType = configType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPredefinedUrlCategoryOverrideResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPredefinedUrlCategoryOverrideResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder rulestack(String rulestack) {
            if (rulestack == null) {
              throw new MissingRequiredPropertyException("GetPredefinedUrlCategoryOverrideResult", "rulestack");
            }
            this.rulestack = rulestack;
            return this;
        }
        @CustomType.Setter
        public Builder updateToken(String updateToken) {
            if (updateToken == null) {
              throw new MissingRequiredPropertyException("GetPredefinedUrlCategoryOverrideResult", "updateToken");
            }
            this.updateToken = updateToken;
            return this;
        }
        public GetPredefinedUrlCategoryOverrideResult build() {
            final var _resultValue = new GetPredefinedUrlCategoryOverrideResult();
            _resultValue.action = action;
            _resultValue.auditComment = auditComment;
            _resultValue.configType = configType;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.rulestack = rulestack;
            _resultValue.updateToken = updateToken;
            return _resultValue;
        }
    }
}
