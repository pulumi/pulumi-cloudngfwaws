// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.cloudngfwaws.outputs.GetNgfwLogProfileLogDestination;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNgfwLogProfileResult {
    /**
     * @return The unique ID of the account.
     * 
     */
    private String accountId;
    /**
     * @return Enable advanced threat logging.
     * 
     */
    private Boolean advancedThreatLog;
    /**
     * @return The CloudWatch metric namespace.
     * 
     */
    private String cloudWatchMetricNamespace;
    /**
     * @return Cloudwatch metric fields.
     * 
     */
    private List<String> cloudwatchMetricFields;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of log destinations.
     * 
     */
    private List<GetNgfwLogProfileLogDestination> logDestinations;
    /**
     * @return The name of the NGFW.
     * 
     */
    private String ngfw;

    private GetNgfwLogProfileResult() {}
    /**
     * @return The unique ID of the account.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Enable advanced threat logging.
     * 
     */
    public Boolean advancedThreatLog() {
        return this.advancedThreatLog;
    }
    /**
     * @return The CloudWatch metric namespace.
     * 
     */
    public String cloudWatchMetricNamespace() {
        return this.cloudWatchMetricNamespace;
    }
    /**
     * @return Cloudwatch metric fields.
     * 
     */
    public List<String> cloudwatchMetricFields() {
        return this.cloudwatchMetricFields;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of log destinations.
     * 
     */
    public List<GetNgfwLogProfileLogDestination> logDestinations() {
        return this.logDestinations;
    }
    /**
     * @return The name of the NGFW.
     * 
     */
    public String ngfw() {
        return this.ngfw;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNgfwLogProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean advancedThreatLog;
        private String cloudWatchMetricNamespace;
        private List<String> cloudwatchMetricFields;
        private String id;
        private List<GetNgfwLogProfileLogDestination> logDestinations;
        private String ngfw;
        public Builder() {}
        public Builder(GetNgfwLogProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.advancedThreatLog = defaults.advancedThreatLog;
    	      this.cloudWatchMetricNamespace = defaults.cloudWatchMetricNamespace;
    	      this.cloudwatchMetricFields = defaults.cloudwatchMetricFields;
    	      this.id = defaults.id;
    	      this.logDestinations = defaults.logDestinations;
    	      this.ngfw = defaults.ngfw;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetNgfwLogProfileResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder advancedThreatLog(Boolean advancedThreatLog) {
            if (advancedThreatLog == null) {
              throw new MissingRequiredPropertyException("GetNgfwLogProfileResult", "advancedThreatLog");
            }
            this.advancedThreatLog = advancedThreatLog;
            return this;
        }
        @CustomType.Setter
        public Builder cloudWatchMetricNamespace(String cloudWatchMetricNamespace) {
            if (cloudWatchMetricNamespace == null) {
              throw new MissingRequiredPropertyException("GetNgfwLogProfileResult", "cloudWatchMetricNamespace");
            }
            this.cloudWatchMetricNamespace = cloudWatchMetricNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder cloudwatchMetricFields(List<String> cloudwatchMetricFields) {
            if (cloudwatchMetricFields == null) {
              throw new MissingRequiredPropertyException("GetNgfwLogProfileResult", "cloudwatchMetricFields");
            }
            this.cloudwatchMetricFields = cloudwatchMetricFields;
            return this;
        }
        public Builder cloudwatchMetricFields(String... cloudwatchMetricFields) {
            return cloudwatchMetricFields(List.of(cloudwatchMetricFields));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNgfwLogProfileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder logDestinations(List<GetNgfwLogProfileLogDestination> logDestinations) {
            if (logDestinations == null) {
              throw new MissingRequiredPropertyException("GetNgfwLogProfileResult", "logDestinations");
            }
            this.logDestinations = logDestinations;
            return this;
        }
        public Builder logDestinations(GetNgfwLogProfileLogDestination... logDestinations) {
            return logDestinations(List.of(logDestinations));
        }
        @CustomType.Setter
        public Builder ngfw(String ngfw) {
            if (ngfw == null) {
              throw new MissingRequiredPropertyException("GetNgfwLogProfileResult", "ngfw");
            }
            this.ngfw = ngfw;
            return this;
        }
        public GetNgfwLogProfileResult build() {
            final var _resultValue = new GetNgfwLogProfileResult();
            _resultValue.accountId = accountId;
            _resultValue.advancedThreatLog = advancedThreatLog;
            _resultValue.cloudWatchMetricNamespace = cloudWatchMetricNamespace;
            _resultValue.cloudwatchMetricFields = cloudwatchMetricFields;
            _resultValue.id = id;
            _resultValue.logDestinations = logDestinations;
            _resultValue.ngfw = ngfw;
            return _resultValue;
        }
    }
}
