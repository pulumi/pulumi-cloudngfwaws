// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws;

import com.pulumi.cloudngfwaws.inputs.NgfwEgressNatArgs;
import com.pulumi.cloudngfwaws.inputs.NgfwEndpointArgs;
import com.pulumi.cloudngfwaws.inputs.NgfwPrivateAccessArgs;
import com.pulumi.cloudngfwaws.inputs.NgfwSubnetMappingArgs;
import com.pulumi.cloudngfwaws.inputs.NgfwUserIdArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NgfwArgs extends com.pulumi.resources.ResourceArgs {

    public static final NgfwArgs Empty = new NgfwArgs();

    /**
     * The description.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The description.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The list of allowed accounts for this NGFW.
     * 
     */
    @Import(name="allowlistAccounts")
    private @Nullable Output<List<String>> allowlistAccounts;

    /**
     * @return The list of allowed accounts for this NGFW.
     * 
     */
    public Optional<Output<List<String>>> allowlistAccounts() {
        return Optional.ofNullable(this.allowlistAccounts);
    }

    /**
     * App-ID version number.
     * 
     */
    @Import(name="appIdVersion")
    private @Nullable Output<String> appIdVersion;

    /**
     * @return App-ID version number.
     * 
     */
    public Optional<Output<String>> appIdVersion() {
        return Optional.ofNullable(this.appIdVersion);
    }

    /**
     * Automatic App-ID upgrade version number. Defaults to `true`.
     * 
     */
    @Import(name="automaticUpgradeAppIdVersion")
    private @Nullable Output<Boolean> automaticUpgradeAppIdVersion;

    /**
     * @return Automatic App-ID upgrade version number. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> automaticUpgradeAppIdVersion() {
        return Optional.ofNullable(this.automaticUpgradeAppIdVersion);
    }

    /**
     * The list of availability zones for this NGFW.
     * 
     */
    @Import(name="azLists", required=true)
    private Output<List<String>> azLists;

    /**
     * @return The list of availability zones for this NGFW.
     * 
     */
    public Output<List<String>> azLists() {
        return this.azLists;
    }

    /**
     * Enables or disables change protection for the NGFW.
     * 
     */
    @Import(name="changeProtections")
    private @Nullable Output<List<String>> changeProtections;

    /**
     * @return Enables or disables change protection for the NGFW.
     * 
     */
    public Optional<Output<List<String>>> changeProtections() {
        return Optional.ofNullable(this.changeProtections);
    }

    /**
     * The NGFW description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The NGFW description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="egressNats")
    private @Nullable Output<List<NgfwEgressNatArgs>> egressNats;

    public Optional<Output<List<NgfwEgressNatArgs>>> egressNats() {
        return Optional.ofNullable(this.egressNats);
    }

    /**
     * Set endpoint mode from the following options. Valid values are `ServiceManaged` or `CustomerManaged`.
     * 
     */
    @Import(name="endpointMode")
    private @Nullable Output<String> endpointMode;

    /**
     * @return Set endpoint mode from the following options. Valid values are `ServiceManaged` or `CustomerManaged`.
     * 
     */
    public Optional<Output<String>> endpointMode() {
        return Optional.ofNullable(this.endpointMode);
    }

    @Import(name="endpoints")
    private @Nullable Output<List<NgfwEndpointArgs>> endpoints;

    public Optional<Output<List<NgfwEndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * The global rulestack for this NGFW.
     * 
     */
    @Import(name="globalRulestack")
    private @Nullable Output<String> globalRulestack;

    /**
     * @return The global rulestack for this NGFW.
     * 
     */
    public Optional<Output<String>> globalRulestack() {
        return Optional.ofNullable(this.globalRulestack);
    }

    /**
     * The link ID.
     * 
     */
    @Import(name="linkId")
    private @Nullable Output<String> linkId;

    /**
     * @return The link ID.
     * 
     */
    public Optional<Output<String>> linkId() {
        return Optional.ofNullable(this.linkId);
    }

    /**
     * Share NGFW with Multiple VPCs. This feature can be enabled only if the endpoint_mode is CustomerManaged.
     * 
     */
    @Import(name="multiVpc")
    private @Nullable Output<Boolean> multiVpc;

    /**
     * @return Share NGFW with Multiple VPCs. This feature can be enabled only if the endpoint_mode is CustomerManaged.
     * 
     */
    public Optional<Output<Boolean>> multiVpc() {
        return Optional.ofNullable(this.multiVpc);
    }

    /**
     * The NGFW name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The NGFW name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="privateAccesses")
    private @Nullable Output<List<NgfwPrivateAccessArgs>> privateAccesses;

    public Optional<Output<List<NgfwPrivateAccessArgs>>> privateAccesses() {
        return Optional.ofNullable(this.privateAccesses);
    }

    /**
     * The rulestack for this NGFW.
     * 
     */
    @Import(name="rulestack")
    private @Nullable Output<String> rulestack;

    /**
     * @return The rulestack for this NGFW.
     * 
     */
    public Optional<Output<String>> rulestack() {
        return Optional.ofNullable(this.rulestack);
    }

    /**
     * Subnet mappings.
     * 
     */
    @Import(name="subnetMappings")
    private @Nullable Output<List<NgfwSubnetMappingArgs>> subnetMappings;

    /**
     * @return Subnet mappings.
     * 
     */
    public Optional<Output<List<NgfwSubnetMappingArgs>>> subnetMappings() {
        return Optional.ofNullable(this.subnetMappings);
    }

    /**
     * The tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="userIds")
    private @Nullable Output<List<NgfwUserIdArgs>> userIds;

    public Optional<Output<List<NgfwUserIdArgs>>> userIds() {
        return Optional.ofNullable(this.userIds);
    }

    /**
     * The VPC ID for the NGFW.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The VPC ID for the NGFW.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private NgfwArgs() {}

    private NgfwArgs(NgfwArgs $) {
        this.accountId = $.accountId;
        this.allowlistAccounts = $.allowlistAccounts;
        this.appIdVersion = $.appIdVersion;
        this.automaticUpgradeAppIdVersion = $.automaticUpgradeAppIdVersion;
        this.azLists = $.azLists;
        this.changeProtections = $.changeProtections;
        this.description = $.description;
        this.egressNats = $.egressNats;
        this.endpointMode = $.endpointMode;
        this.endpoints = $.endpoints;
        this.globalRulestack = $.globalRulestack;
        this.linkId = $.linkId;
        this.multiVpc = $.multiVpc;
        this.name = $.name;
        this.privateAccesses = $.privateAccesses;
        this.rulestack = $.rulestack;
        this.subnetMappings = $.subnetMappings;
        this.tags = $.tags;
        this.userIds = $.userIds;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NgfwArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NgfwArgs $;

        public Builder() {
            $ = new NgfwArgs();
        }

        public Builder(NgfwArgs defaults) {
            $ = new NgfwArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The description.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The description.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param allowlistAccounts The list of allowed accounts for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder allowlistAccounts(@Nullable Output<List<String>> allowlistAccounts) {
            $.allowlistAccounts = allowlistAccounts;
            return this;
        }

        /**
         * @param allowlistAccounts The list of allowed accounts for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder allowlistAccounts(List<String> allowlistAccounts) {
            return allowlistAccounts(Output.of(allowlistAccounts));
        }

        /**
         * @param allowlistAccounts The list of allowed accounts for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder allowlistAccounts(String... allowlistAccounts) {
            return allowlistAccounts(List.of(allowlistAccounts));
        }

        /**
         * @param appIdVersion App-ID version number.
         * 
         * @return builder
         * 
         */
        public Builder appIdVersion(@Nullable Output<String> appIdVersion) {
            $.appIdVersion = appIdVersion;
            return this;
        }

        /**
         * @param appIdVersion App-ID version number.
         * 
         * @return builder
         * 
         */
        public Builder appIdVersion(String appIdVersion) {
            return appIdVersion(Output.of(appIdVersion));
        }

        /**
         * @param automaticUpgradeAppIdVersion Automatic App-ID upgrade version number. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder automaticUpgradeAppIdVersion(@Nullable Output<Boolean> automaticUpgradeAppIdVersion) {
            $.automaticUpgradeAppIdVersion = automaticUpgradeAppIdVersion;
            return this;
        }

        /**
         * @param automaticUpgradeAppIdVersion Automatic App-ID upgrade version number. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder automaticUpgradeAppIdVersion(Boolean automaticUpgradeAppIdVersion) {
            return automaticUpgradeAppIdVersion(Output.of(automaticUpgradeAppIdVersion));
        }

        /**
         * @param azLists The list of availability zones for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder azLists(Output<List<String>> azLists) {
            $.azLists = azLists;
            return this;
        }

        /**
         * @param azLists The list of availability zones for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder azLists(List<String> azLists) {
            return azLists(Output.of(azLists));
        }

        /**
         * @param azLists The list of availability zones for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder azLists(String... azLists) {
            return azLists(List.of(azLists));
        }

        /**
         * @param changeProtections Enables or disables change protection for the NGFW.
         * 
         * @return builder
         * 
         */
        public Builder changeProtections(@Nullable Output<List<String>> changeProtections) {
            $.changeProtections = changeProtections;
            return this;
        }

        /**
         * @param changeProtections Enables or disables change protection for the NGFW.
         * 
         * @return builder
         * 
         */
        public Builder changeProtections(List<String> changeProtections) {
            return changeProtections(Output.of(changeProtections));
        }

        /**
         * @param changeProtections Enables or disables change protection for the NGFW.
         * 
         * @return builder
         * 
         */
        public Builder changeProtections(String... changeProtections) {
            return changeProtections(List.of(changeProtections));
        }

        /**
         * @param description The NGFW description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The NGFW description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder egressNats(@Nullable Output<List<NgfwEgressNatArgs>> egressNats) {
            $.egressNats = egressNats;
            return this;
        }

        public Builder egressNats(List<NgfwEgressNatArgs> egressNats) {
            return egressNats(Output.of(egressNats));
        }

        public Builder egressNats(NgfwEgressNatArgs... egressNats) {
            return egressNats(List.of(egressNats));
        }

        /**
         * @param endpointMode Set endpoint mode from the following options. Valid values are `ServiceManaged` or `CustomerManaged`.
         * 
         * @return builder
         * 
         */
        public Builder endpointMode(@Nullable Output<String> endpointMode) {
            $.endpointMode = endpointMode;
            return this;
        }

        /**
         * @param endpointMode Set endpoint mode from the following options. Valid values are `ServiceManaged` or `CustomerManaged`.
         * 
         * @return builder
         * 
         */
        public Builder endpointMode(String endpointMode) {
            return endpointMode(Output.of(endpointMode));
        }

        public Builder endpoints(@Nullable Output<List<NgfwEndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        public Builder endpoints(List<NgfwEndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        public Builder endpoints(NgfwEndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        /**
         * @param globalRulestack The global rulestack for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder globalRulestack(@Nullable Output<String> globalRulestack) {
            $.globalRulestack = globalRulestack;
            return this;
        }

        /**
         * @param globalRulestack The global rulestack for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder globalRulestack(String globalRulestack) {
            return globalRulestack(Output.of(globalRulestack));
        }

        /**
         * @param linkId The link ID.
         * 
         * @return builder
         * 
         */
        public Builder linkId(@Nullable Output<String> linkId) {
            $.linkId = linkId;
            return this;
        }

        /**
         * @param linkId The link ID.
         * 
         * @return builder
         * 
         */
        public Builder linkId(String linkId) {
            return linkId(Output.of(linkId));
        }

        /**
         * @param multiVpc Share NGFW with Multiple VPCs. This feature can be enabled only if the endpoint_mode is CustomerManaged.
         * 
         * @return builder
         * 
         */
        public Builder multiVpc(@Nullable Output<Boolean> multiVpc) {
            $.multiVpc = multiVpc;
            return this;
        }

        /**
         * @param multiVpc Share NGFW with Multiple VPCs. This feature can be enabled only if the endpoint_mode is CustomerManaged.
         * 
         * @return builder
         * 
         */
        public Builder multiVpc(Boolean multiVpc) {
            return multiVpc(Output.of(multiVpc));
        }

        /**
         * @param name The NGFW name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The NGFW name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder privateAccesses(@Nullable Output<List<NgfwPrivateAccessArgs>> privateAccesses) {
            $.privateAccesses = privateAccesses;
            return this;
        }

        public Builder privateAccesses(List<NgfwPrivateAccessArgs> privateAccesses) {
            return privateAccesses(Output.of(privateAccesses));
        }

        public Builder privateAccesses(NgfwPrivateAccessArgs... privateAccesses) {
            return privateAccesses(List.of(privateAccesses));
        }

        /**
         * @param rulestack The rulestack for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder rulestack(@Nullable Output<String> rulestack) {
            $.rulestack = rulestack;
            return this;
        }

        /**
         * @param rulestack The rulestack for this NGFW.
         * 
         * @return builder
         * 
         */
        public Builder rulestack(String rulestack) {
            return rulestack(Output.of(rulestack));
        }

        /**
         * @param subnetMappings Subnet mappings.
         * 
         * @return builder
         * 
         */
        public Builder subnetMappings(@Nullable Output<List<NgfwSubnetMappingArgs>> subnetMappings) {
            $.subnetMappings = subnetMappings;
            return this;
        }

        /**
         * @param subnetMappings Subnet mappings.
         * 
         * @return builder
         * 
         */
        public Builder subnetMappings(List<NgfwSubnetMappingArgs> subnetMappings) {
            return subnetMappings(Output.of(subnetMappings));
        }

        /**
         * @param subnetMappings Subnet mappings.
         * 
         * @return builder
         * 
         */
        public Builder subnetMappings(NgfwSubnetMappingArgs... subnetMappings) {
            return subnetMappings(List.of(subnetMappings));
        }

        /**
         * @param tags The tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder userIds(@Nullable Output<List<NgfwUserIdArgs>> userIds) {
            $.userIds = userIds;
            return this;
        }

        public Builder userIds(List<NgfwUserIdArgs> userIds) {
            return userIds(Output.of(userIds));
        }

        public Builder userIds(NgfwUserIdArgs... userIds) {
            return userIds(List.of(userIds));
        }

        /**
         * @param vpcId The VPC ID for the NGFW.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The VPC ID for the NGFW.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public NgfwArgs build() {
            if ($.azLists == null) {
                throw new MissingRequiredPropertyException("NgfwArgs", "azLists");
            }
            return $;
        }
    }

}
