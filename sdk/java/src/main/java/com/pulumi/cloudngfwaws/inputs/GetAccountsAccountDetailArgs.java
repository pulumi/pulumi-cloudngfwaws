// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetAccountsAccountDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetAccountsAccountDetailArgs Empty = new GetAccountsAccountDetailArgs();

    /**
     * The account id.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The account id.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * External Id of the onboarded account
     * 
     */
    @Import(name="externalId", required=true)
    private Output<String> externalId;

    /**
     * @return External Id of the onboarded account
     * 
     */
    public Output<String> externalId() {
        return this.externalId;
    }

    /**
     * Onboarding status of the account.
     * 
     */
    @Import(name="onboardingStatus", required=true)
    private Output<String> onboardingStatus;

    /**
     * @return Onboarding status of the account.
     * 
     */
    public Output<String> onboardingStatus() {
        return this.onboardingStatus;
    }

    private GetAccountsAccountDetailArgs() {}

    private GetAccountsAccountDetailArgs(GetAccountsAccountDetailArgs $) {
        this.accountId = $.accountId;
        this.externalId = $.externalId;
        this.onboardingStatus = $.onboardingStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccountsAccountDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccountsAccountDetailArgs $;

        public Builder() {
            $ = new GetAccountsAccountDetailArgs();
        }

        public Builder(GetAccountsAccountDetailArgs defaults) {
            $ = new GetAccountsAccountDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account id.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account id.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param externalId External Id of the onboarded account
         * 
         * @return builder
         * 
         */
        public Builder externalId(Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId External Id of the onboarded account
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param onboardingStatus Onboarding status of the account.
         * 
         * @return builder
         * 
         */
        public Builder onboardingStatus(Output<String> onboardingStatus) {
            $.onboardingStatus = onboardingStatus;
            return this;
        }

        /**
         * @param onboardingStatus Onboarding status of the account.
         * 
         * @return builder
         * 
         */
        public Builder onboardingStatus(String onboardingStatus) {
            return onboardingStatus(Output.of(onboardingStatus));
        }

        public GetAccountsAccountDetailArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetAccountsAccountDetailArgs", "accountId");
            }
            if ($.externalId == null) {
                throw new MissingRequiredPropertyException("GetAccountsAccountDetailArgs", "externalId");
            }
            if ($.onboardingStatus == null) {
                throw new MissingRequiredPropertyException("GetAccountsAccountDetailArgs", "onboardingStatus");
            }
            return $;
        }
    }

}
