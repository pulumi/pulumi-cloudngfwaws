// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAppIdVersionsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Max number of results. Defaults to `100`.
     * 
     */
    private @Nullable Integer maxResults;
    /**
     * @return Token for the next page of results.
     * 
     */
    private String nextToken;
    /**
     * @return Pagination token.
     * 
     */
    private @Nullable String token;
    /**
     * @return List of AppId versions.
     * 
     */
    private List<String> versions;

    private GetAppIdVersionsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Max number of results. Defaults to `100`.
     * 
     */
    public Optional<Integer> maxResults() {
        return Optional.ofNullable(this.maxResults);
    }
    /**
     * @return Token for the next page of results.
     * 
     */
    public String nextToken() {
        return this.nextToken;
    }
    /**
     * @return Pagination token.
     * 
     */
    public Optional<String> token() {
        return Optional.ofNullable(this.token);
    }
    /**
     * @return List of AppId versions.
     * 
     */
    public List<String> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppIdVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable Integer maxResults;
        private String nextToken;
        private @Nullable String token;
        private List<String> versions;
        public Builder() {}
        public Builder(GetAppIdVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.maxResults = defaults.maxResults;
    	      this.nextToken = defaults.nextToken;
    	      this.token = defaults.token;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAppIdVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxResults(@Nullable Integer maxResults) {

            this.maxResults = maxResults;
            return this;
        }
        @CustomType.Setter
        public Builder nextToken(String nextToken) {
            if (nextToken == null) {
              throw new MissingRequiredPropertyException("GetAppIdVersionsResult", "nextToken");
            }
            this.nextToken = nextToken;
            return this;
        }
        @CustomType.Setter
        public Builder token(@Nullable String token) {

            this.token = token;
            return this;
        }
        @CustomType.Setter
        public Builder versions(List<String> versions) {
            if (versions == null) {
              throw new MissingRequiredPropertyException("GetAppIdVersionsResult", "versions");
            }
            this.versions = versions;
            return this;
        }
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }
        public GetAppIdVersionsResult build() {
            final var _resultValue = new GetAppIdVersionsResult();
            _resultValue.id = id;
            _resultValue.maxResults = maxResults;
            _resultValue.nextToken = nextToken;
            _resultValue.token = token;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
