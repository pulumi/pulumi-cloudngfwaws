// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccountResult {
    /**
     * @return The account ID
     * 
     */
    private @Nullable String accountId;
    /**
     * @return The CFT URL.
     * 
     */
    private String cftUrl;
    /**
     * @return The external ID of the account
     * 
     */
    private String externalId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Account onboarding status
     * 
     */
    private String onboardingStatus;
    /**
     * @return Origin of account onboarding
     * 
     */
    private String origin;
    /**
     * @return The account ID of cloud NGFW service
     * 
     */
    private String serviceAccountId;
    /**
     * @return The SNS topic ARN
     * 
     */
    private String snsTopicArn;
    /**
     * @return The trusted account ID
     * 
     */
    private String trustedAccount;
    /**
     * @return The update token.
     * 
     */
    private String updateToken;

    private GetAccountResult() {}
    /**
     * @return The account ID
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return The CFT URL.
     * 
     */
    public String cftUrl() {
        return this.cftUrl;
    }
    /**
     * @return The external ID of the account
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Account onboarding status
     * 
     */
    public String onboardingStatus() {
        return this.onboardingStatus;
    }
    /**
     * @return Origin of account onboarding
     * 
     */
    public String origin() {
        return this.origin;
    }
    /**
     * @return The account ID of cloud NGFW service
     * 
     */
    public String serviceAccountId() {
        return this.serviceAccountId;
    }
    /**
     * @return The SNS topic ARN
     * 
     */
    public String snsTopicArn() {
        return this.snsTopicArn;
    }
    /**
     * @return The trusted account ID
     * 
     */
    public String trustedAccount() {
        return this.trustedAccount;
    }
    /**
     * @return The update token.
     * 
     */
    public String updateToken() {
        return this.updateToken;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private String cftUrl;
        private String externalId;
        private String id;
        private String onboardingStatus;
        private String origin;
        private String serviceAccountId;
        private String snsTopicArn;
        private String trustedAccount;
        private String updateToken;
        public Builder() {}
        public Builder(GetAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.cftUrl = defaults.cftUrl;
    	      this.externalId = defaults.externalId;
    	      this.id = defaults.id;
    	      this.onboardingStatus = defaults.onboardingStatus;
    	      this.origin = defaults.origin;
    	      this.serviceAccountId = defaults.serviceAccountId;
    	      this.snsTopicArn = defaults.snsTopicArn;
    	      this.trustedAccount = defaults.trustedAccount;
    	      this.updateToken = defaults.updateToken;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {

            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder cftUrl(String cftUrl) {
            if (cftUrl == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "cftUrl");
            }
            this.cftUrl = cftUrl;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            if (externalId == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "externalId");
            }
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder onboardingStatus(String onboardingStatus) {
            if (onboardingStatus == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "onboardingStatus");
            }
            this.onboardingStatus = onboardingStatus;
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            if (origin == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "origin");
            }
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountId(String serviceAccountId) {
            if (serviceAccountId == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "serviceAccountId");
            }
            this.serviceAccountId = serviceAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder snsTopicArn(String snsTopicArn) {
            if (snsTopicArn == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "snsTopicArn");
            }
            this.snsTopicArn = snsTopicArn;
            return this;
        }
        @CustomType.Setter
        public Builder trustedAccount(String trustedAccount) {
            if (trustedAccount == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "trustedAccount");
            }
            this.trustedAccount = trustedAccount;
            return this;
        }
        @CustomType.Setter
        public Builder updateToken(String updateToken) {
            if (updateToken == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "updateToken");
            }
            this.updateToken = updateToken;
            return this;
        }
        public GetAccountResult build() {
            final var _resultValue = new GetAccountResult();
            _resultValue.accountId = accountId;
            _resultValue.cftUrl = cftUrl;
            _resultValue.externalId = externalId;
            _resultValue.id = id;
            _resultValue.onboardingStatus = onboardingStatus;
            _resultValue.origin = origin;
            _resultValue.serviceAccountId = serviceAccountId;
            _resultValue.snsTopicArn = snsTopicArn;
            _resultValue.trustedAccount = trustedAccount;
            _resultValue.updateToken = updateToken;
            return _resultValue;
        }
    }
}
