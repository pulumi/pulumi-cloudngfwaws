// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws;

import com.pulumi.cloudngfwaws.AccountOnboardingStackArgs;
import com.pulumi.cloudngfwaws.Utilities;
import com.pulumi.cloudngfwaws.inputs.AccountOnboardingStackState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for Account Onboarding.
 * 
 * ## Admin Permission Type
 * 
 * * `Rulestack` (for `scope=&#34;Local&#34;`)
 * * `Global Rulestack` (for `scope=&#34;Global&#34;`)
 * 
 */
@ResourceType(type="cloudngfwaws:index/accountOnboardingStack:AccountOnboardingStack")
public class AccountOnboardingStack extends com.pulumi.resources.CustomResource {
    /**
     * The account IDs
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The account IDs
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Audit Log Group Name
     * 
     */
    @Export(name="auditlogGroup", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> auditlogGroup;

    /**
     * @return Audit Log Group Name
     * 
     */
    public Output<Optional<String>> auditlogGroup() {
        return Codegen.optional(this.auditlogGroup);
    }
    /**
     * Role name to run the account onboarding CFT in each account to be onboarded.
     * 
     */
    @Export(name="cftRoleName", refs={String.class}, tree="[0]")
    private Output<String> cftRoleName;

    /**
     * @return Role name to run the account onboarding CFT in each account to be onboarded.
     * 
     */
    public Output<String> cftRoleName() {
        return this.cftRoleName;
    }
    /**
     * Cloudwatch Log Group
     * 
     */
    @Export(name="cloudwatchLogGroup", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cloudwatchLogGroup;

    /**
     * @return Cloudwatch Log Group
     * 
     */
    public Output<Optional<String>> cloudwatchLogGroup() {
        return Codegen.optional(this.cloudwatchLogGroup);
    }
    /**
     * Cloudwatch Namespace
     * 
     */
    @Export(name="cloudwatchNamespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cloudwatchNamespace;

    /**
     * @return Cloudwatch Namespace
     * 
     */
    public Output<Optional<String>> cloudwatchNamespace() {
        return Codegen.optional(this.cloudwatchNamespace);
    }
    /**
     * The CloudNGFW can decrypt inbound and outbound traffic by providing a
     * 					  certificate stored in secret Manager.
     * 		 			  The role allows the service to access a certificate configured in the rulestack.
     * 		 			  Only certificated tagged with PaloAltoCloudNGFW can be accessed
     * 
     */
    @Export(name="decryptionCert", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> decryptionCert;

    /**
     * @return The CloudNGFW can decrypt inbound and outbound traffic by providing a
     * 					  certificate stored in secret Manager.
     * 		 			  The role allows the service to access a certificate configured in the rulestack.
     * 		 			  Only certificated tagged with PaloAltoCloudNGFW can be accessed
     * 
     */
    public Output<Optional<String>> decryptionCert() {
        return Codegen.optional(this.decryptionCert);
    }
    /**
     * Controls whether cloud NGFW will create firewall endpoints automatitically in customer subnets
     * 
     */
    @Export(name="endpointMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> endpointMode;

    /**
     * @return Controls whether cloud NGFW will create firewall endpoints automatitically in customer subnets
     * 
     */
    public Output<Optional<String>> endpointMode() {
        return Codegen.optional(this.endpointMode);
    }
    /**
     * External Id of the onboarded account
     * 
     */
    @Export(name="externalId", refs={String.class}, tree="[0]")
    private Output<String> externalId;

    /**
     * @return External Id of the onboarded account
     * 
     */
    public Output<String> externalId() {
        return this.externalId;
    }
    /**
     * Kinesis Firehose for logging
     * 
     */
    @Export(name="kinesisFirehose", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kinesisFirehose;

    /**
     * @return Kinesis Firehose for logging
     * 
     */
    public Output<Optional<String>> kinesisFirehose() {
        return Codegen.optional(this.kinesisFirehose);
    }
    /**
     * Role name to run the account onboarding CFT in each account to be onboarded.
     * 
     */
    @Export(name="onboardingCft", refs={String.class}, tree="[0]")
    private Output<String> onboardingCft;

    /**
     * @return Role name to run the account onboarding CFT in each account to be onboarded.
     * 
     */
    public Output<String> onboardingCft() {
        return this.onboardingCft;
    }
    /**
     * S3 Bucket Name for Logging. Logging roles provide access to create log contents in this bucket.
     * 
     */
    @Export(name="s3Bucket", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> s3Bucket;

    /**
     * @return S3 Bucket Name for Logging. Logging roles provide access to create log contents in this bucket.
     * 
     */
    public Output<Optional<String>> s3Bucket() {
        return Codegen.optional(this.s3Bucket);
    }
    /**
     * SNS topic ARN to publish the role ARNs
     * 
     */
    @Export(name="snsTopicArn", refs={String.class}, tree="[0]")
    private Output<String> snsTopicArn;

    /**
     * @return SNS topic ARN to publish the role ARNs
     * 
     */
    public Output<String> snsTopicArn() {
        return this.snsTopicArn;
    }
    /**
     * ID of the account onboarding CFT stack
     * 
     */
    @Export(name="stackId", refs={String.class}, tree="[0]")
    private Output<String> stackId;

    /**
     * @return ID of the account onboarding CFT stack
     * 
     */
    public Output<String> stackId() {
        return this.stackId;
    }
    /**
     * Status of the account onboarding CFT stack.
     * 
     */
    @Export(name="stackStatus", refs={String.class}, tree="[0]")
    private Output<String> stackStatus;

    /**
     * @return Status of the account onboarding CFT stack.
     * 
     */
    public Output<String> stackStatus() {
        return this.stackStatus;
    }
    /**
     * PANW Cloud NGFW trusted account Id
     * 
     */
    @Export(name="trustedAccount", refs={String.class}, tree="[0]")
    private Output<String> trustedAccount;

    /**
     * @return PANW Cloud NGFW trusted account Id
     * 
     */
    public Output<String> trustedAccount() {
        return this.trustedAccount;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccountOnboardingStack(java.lang.String name) {
        this(name, AccountOnboardingStackArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccountOnboardingStack(java.lang.String name, AccountOnboardingStackArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccountOnboardingStack(java.lang.String name, AccountOnboardingStackArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudngfwaws:index/accountOnboardingStack:AccountOnboardingStack", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AccountOnboardingStack(java.lang.String name, Output<java.lang.String> id, @Nullable AccountOnboardingStackState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudngfwaws:index/accountOnboardingStack:AccountOnboardingStack", name, state, makeResourceOptions(options, id), false);
    }

    private static AccountOnboardingStackArgs makeArgs(AccountOnboardingStackArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AccountOnboardingStackArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi/pulumi-cloudngfwaws")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccountOnboardingStack get(java.lang.String name, Output<java.lang.String> id, @Nullable AccountOnboardingStackState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccountOnboardingStack(name, id, state, options);
    }
}
