// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityRuleDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityRuleDestinationArgs Empty = new SecurityRuleDestinationArgs();

    /**
     * List of CIDRs.
     * 
     */
    @Import(name="cidrs")
    private @Nullable Output<List<String>> cidrs;

    /**
     * @return List of CIDRs.
     * 
     */
    public Optional<Output<List<String>>> cidrs() {
        return Optional.ofNullable(this.cidrs);
    }

    /**
     * List of countries.
     * 
     */
    @Import(name="countries")
    private @Nullable Output<List<String>> countries;

    /**
     * @return List of countries.
     * 
     */
    public Optional<Output<List<String>>> countries() {
        return Optional.ofNullable(this.countries);
    }

    /**
     * List of feeds.
     * 
     */
    @Import(name="feeds")
    private @Nullable Output<List<String>> feeds;

    /**
     * @return List of feeds.
     * 
     */
    public Optional<Output<List<String>>> feeds() {
        return Optional.ofNullable(this.feeds);
    }

    /**
     * List of FQDN lists.
     * 
     */
    @Import(name="fqdnLists")
    private @Nullable Output<List<String>> fqdnLists;

    /**
     * @return List of FQDN lists.
     * 
     */
    public Optional<Output<List<String>>> fqdnLists() {
        return Optional.ofNullable(this.fqdnLists);
    }

    /**
     * List of prefix list.
     * 
     */
    @Import(name="prefixLists")
    private @Nullable Output<List<String>> prefixLists;

    /**
     * @return List of prefix list.
     * 
     */
    public Optional<Output<List<String>>> prefixLists() {
        return Optional.ofNullable(this.prefixLists);
    }

    private SecurityRuleDestinationArgs() {}

    private SecurityRuleDestinationArgs(SecurityRuleDestinationArgs $) {
        this.cidrs = $.cidrs;
        this.countries = $.countries;
        this.feeds = $.feeds;
        this.fqdnLists = $.fqdnLists;
        this.prefixLists = $.prefixLists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityRuleDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityRuleDestinationArgs $;

        public Builder() {
            $ = new SecurityRuleDestinationArgs();
        }

        public Builder(SecurityRuleDestinationArgs defaults) {
            $ = new SecurityRuleDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrs List of CIDRs.
         * 
         * @return builder
         * 
         */
        public Builder cidrs(@Nullable Output<List<String>> cidrs) {
            $.cidrs = cidrs;
            return this;
        }

        /**
         * @param cidrs List of CIDRs.
         * 
         * @return builder
         * 
         */
        public Builder cidrs(List<String> cidrs) {
            return cidrs(Output.of(cidrs));
        }

        /**
         * @param cidrs List of CIDRs.
         * 
         * @return builder
         * 
         */
        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }

        /**
         * @param countries List of countries.
         * 
         * @return builder
         * 
         */
        public Builder countries(@Nullable Output<List<String>> countries) {
            $.countries = countries;
            return this;
        }

        /**
         * @param countries List of countries.
         * 
         * @return builder
         * 
         */
        public Builder countries(List<String> countries) {
            return countries(Output.of(countries));
        }

        /**
         * @param countries List of countries.
         * 
         * @return builder
         * 
         */
        public Builder countries(String... countries) {
            return countries(List.of(countries));
        }

        /**
         * @param feeds List of feeds.
         * 
         * @return builder
         * 
         */
        public Builder feeds(@Nullable Output<List<String>> feeds) {
            $.feeds = feeds;
            return this;
        }

        /**
         * @param feeds List of feeds.
         * 
         * @return builder
         * 
         */
        public Builder feeds(List<String> feeds) {
            return feeds(Output.of(feeds));
        }

        /**
         * @param feeds List of feeds.
         * 
         * @return builder
         * 
         */
        public Builder feeds(String... feeds) {
            return feeds(List.of(feeds));
        }

        /**
         * @param fqdnLists List of FQDN lists.
         * 
         * @return builder
         * 
         */
        public Builder fqdnLists(@Nullable Output<List<String>> fqdnLists) {
            $.fqdnLists = fqdnLists;
            return this;
        }

        /**
         * @param fqdnLists List of FQDN lists.
         * 
         * @return builder
         * 
         */
        public Builder fqdnLists(List<String> fqdnLists) {
            return fqdnLists(Output.of(fqdnLists));
        }

        /**
         * @param fqdnLists List of FQDN lists.
         * 
         * @return builder
         * 
         */
        public Builder fqdnLists(String... fqdnLists) {
            return fqdnLists(List.of(fqdnLists));
        }

        /**
         * @param prefixLists List of prefix list.
         * 
         * @return builder
         * 
         */
        public Builder prefixLists(@Nullable Output<List<String>> prefixLists) {
            $.prefixLists = prefixLists;
            return this;
        }

        /**
         * @param prefixLists List of prefix list.
         * 
         * @return builder
         * 
         */
        public Builder prefixLists(List<String> prefixLists) {
            return prefixLists(Output.of(prefixLists));
        }

        /**
         * @param prefixLists List of prefix list.
         * 
         * @return builder
         * 
         */
        public Builder prefixLists(String... prefixLists) {
            return prefixLists(List.of(prefixLists));
        }

        public SecurityRuleDestinationArgs build() {
            return $;
        }
    }

}
