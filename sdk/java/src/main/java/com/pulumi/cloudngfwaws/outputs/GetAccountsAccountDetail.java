// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountsAccountDetail {
    /**
     * @return The account id.
     * 
     */
    private String accountId;
    /**
     * @return External Id of the onboarded account
     * 
     */
    private String externalId;
    /**
     * @return Onboarding status of the account.
     * 
     */
    private String onboardingStatus;

    private GetAccountsAccountDetail() {}
    /**
     * @return The account id.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return External Id of the onboarded account
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return Onboarding status of the account.
     * 
     */
    public String onboardingStatus() {
        return this.onboardingStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountsAccountDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String externalId;
        private String onboardingStatus;
        public Builder() {}
        public Builder(GetAccountsAccountDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.externalId = defaults.externalId;
    	      this.onboardingStatus = defaults.onboardingStatus;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountDetail", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            if (externalId == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountDetail", "externalId");
            }
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder onboardingStatus(String onboardingStatus) {
            if (onboardingStatus == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountDetail", "onboardingStatus");
            }
            this.onboardingStatus = onboardingStatus;
            return this;
        }
        public GetAccountsAccountDetail build() {
            final var _resultValue = new GetAccountsAccountDetail();
            _resultValue.accountId = accountId;
            _resultValue.externalId = externalId;
            _resultValue.onboardingStatus = onboardingStatus;
            return _resultValue;
        }
    }
}
