// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSecurityRuleSource {
    /**
     * @return List of CIDRs.
     * 
     */
    private List<String> cidrs;
    /**
     * @return List of countries.
     * 
     */
    private List<String> countries;
    /**
     * @return List of feeds.
     * 
     */
    private List<String> feeds;
    /**
     * @return List of prefix list.
     * 
     */
    private List<String> prefixLists;

    private GetSecurityRuleSource() {}
    /**
     * @return List of CIDRs.
     * 
     */
    public List<String> cidrs() {
        return this.cidrs;
    }
    /**
     * @return List of countries.
     * 
     */
    public List<String> countries() {
        return this.countries;
    }
    /**
     * @return List of feeds.
     * 
     */
    public List<String> feeds() {
        return this.feeds;
    }
    /**
     * @return List of prefix list.
     * 
     */
    public List<String> prefixLists() {
        return this.prefixLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityRuleSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> cidrs;
        private List<String> countries;
        private List<String> feeds;
        private List<String> prefixLists;
        public Builder() {}
        public Builder(GetSecurityRuleSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrs = defaults.cidrs;
    	      this.countries = defaults.countries;
    	      this.feeds = defaults.feeds;
    	      this.prefixLists = defaults.prefixLists;
        }

        @CustomType.Setter
        public Builder cidrs(List<String> cidrs) {
            if (cidrs == null) {
              throw new MissingRequiredPropertyException("GetSecurityRuleSource", "cidrs");
            }
            this.cidrs = cidrs;
            return this;
        }
        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }
        @CustomType.Setter
        public Builder countries(List<String> countries) {
            if (countries == null) {
              throw new MissingRequiredPropertyException("GetSecurityRuleSource", "countries");
            }
            this.countries = countries;
            return this;
        }
        public Builder countries(String... countries) {
            return countries(List.of(countries));
        }
        @CustomType.Setter
        public Builder feeds(List<String> feeds) {
            if (feeds == null) {
              throw new MissingRequiredPropertyException("GetSecurityRuleSource", "feeds");
            }
            this.feeds = feeds;
            return this;
        }
        public Builder feeds(String... feeds) {
            return feeds(List.of(feeds));
        }
        @CustomType.Setter
        public Builder prefixLists(List<String> prefixLists) {
            if (prefixLists == null) {
              throw new MissingRequiredPropertyException("GetSecurityRuleSource", "prefixLists");
            }
            this.prefixLists = prefixLists;
            return this;
        }
        public Builder prefixLists(String... prefixLists) {
            return prefixLists(List.of(prefixLists));
        }
        public GetSecurityRuleSource build() {
            final var _resultValue = new GetSecurityRuleSource();
            _resultValue.cidrs = cidrs;
            _resultValue.countries = countries;
            _resultValue.feeds = feeds;
            _resultValue.prefixLists = prefixLists;
            return _resultValue;
        }
    }
}
