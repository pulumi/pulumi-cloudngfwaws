// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.outputs;

import com.pulumi.cloudngfwaws.outputs.NgfwEndpointPrefix;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NgfwEndpoint {
    /**
     * @return The account id.
     * 
     */
    private @Nullable String accountId;
    /**
     * @return Enable egress NAT
     * 
     */
    private @Nullable Boolean egressNatEnabled;
    /**
     * @return Endpoint ID of the security zone
     * 
     */
    private @Nullable String endpointId;
    /**
     * @return The endpoint mode. Valid values are `ServiceManaged` or `CustomerManaged`.
     * 
     */
    private String mode;
    private @Nullable List<NgfwEndpointPrefix> prefixes;
    /**
     * @return The rejected reason.
     * 
     */
    private @Nullable String rejectedReason;
    /**
     * @return The attachment status.
     * 
     */
    private @Nullable String status;
    /**
     * @return The subnet id.
     * 
     */
    private @Nullable String subnetId;
    /**
     * @return The vpc id.
     * 
     */
    private @Nullable String vpcId;
    /**
     * @return The AZ id.
     * 
     */
    private @Nullable String zoneId;

    private NgfwEndpoint() {}
    /**
     * @return The account id.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return Enable egress NAT
     * 
     */
    public Optional<Boolean> egressNatEnabled() {
        return Optional.ofNullable(this.egressNatEnabled);
    }
    /**
     * @return Endpoint ID of the security zone
     * 
     */
    public Optional<String> endpointId() {
        return Optional.ofNullable(this.endpointId);
    }
    /**
     * @return The endpoint mode. Valid values are `ServiceManaged` or `CustomerManaged`.
     * 
     */
    public String mode() {
        return this.mode;
    }
    public List<NgfwEndpointPrefix> prefixes() {
        return this.prefixes == null ? List.of() : this.prefixes;
    }
    /**
     * @return The rejected reason.
     * 
     */
    public Optional<String> rejectedReason() {
        return Optional.ofNullable(this.rejectedReason);
    }
    /**
     * @return The attachment status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The subnet id.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return The vpc id.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }
    /**
     * @return The AZ id.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NgfwEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private @Nullable Boolean egressNatEnabled;
        private @Nullable String endpointId;
        private String mode;
        private @Nullable List<NgfwEndpointPrefix> prefixes;
        private @Nullable String rejectedReason;
        private @Nullable String status;
        private @Nullable String subnetId;
        private @Nullable String vpcId;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(NgfwEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.egressNatEnabled = defaults.egressNatEnabled;
    	      this.endpointId = defaults.endpointId;
    	      this.mode = defaults.mode;
    	      this.prefixes = defaults.prefixes;
    	      this.rejectedReason = defaults.rejectedReason;
    	      this.status = defaults.status;
    	      this.subnetId = defaults.subnetId;
    	      this.vpcId = defaults.vpcId;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {

            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder egressNatEnabled(@Nullable Boolean egressNatEnabled) {

            this.egressNatEnabled = egressNatEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder endpointId(@Nullable String endpointId) {

            this.endpointId = endpointId;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("NgfwEndpoint", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder prefixes(@Nullable List<NgfwEndpointPrefix> prefixes) {

            this.prefixes = prefixes;
            return this;
        }
        public Builder prefixes(NgfwEndpointPrefix... prefixes) {
            return prefixes(List.of(prefixes));
        }
        @CustomType.Setter
        public Builder rejectedReason(@Nullable String rejectedReason) {

            this.rejectedReason = rejectedReason;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {

            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {

            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {

            this.zoneId = zoneId;
            return this;
        }
        public NgfwEndpoint build() {
            final var _resultValue = new NgfwEndpoint();
            _resultValue.accountId = accountId;
            _resultValue.egressNatEnabled = egressNatEnabled;
            _resultValue.endpointId = endpointId;
            _resultValue.mode = mode;
            _resultValue.prefixes = prefixes;
            _resultValue.rejectedReason = rejectedReason;
            _resultValue.status = status;
            _resultValue.subnetId = subnetId;
            _resultValue.vpcId = vpcId;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
