// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudngfwaws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class NgfwUserIdCustomIncludeExcludeNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final NgfwUserIdCustomIncludeExcludeNetworkArgs Empty = new NgfwUserIdCustomIncludeExcludeNetworkArgs();

    /**
     * Include or exclude this subnet from user-id configuration
     * 
     */
    @Import(name="discoveryInclude", required=true)
    private Output<Boolean> discoveryInclude;

    /**
     * @return Include or exclude this subnet from user-id configuration
     * 
     */
    public Output<Boolean> discoveryInclude() {
        return this.discoveryInclude;
    }

    /**
     * Enable this specific custom include/exclude network
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Enable this specific custom include/exclude network
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Name of subnet filter
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of subnet filter
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Network IP address of the subnet filter
     * 
     */
    @Import(name="networkAddress", required=true)
    private Output<String> networkAddress;

    /**
     * @return Network IP address of the subnet filter
     * 
     */
    public Output<String> networkAddress() {
        return this.networkAddress;
    }

    private NgfwUserIdCustomIncludeExcludeNetworkArgs() {}

    private NgfwUserIdCustomIncludeExcludeNetworkArgs(NgfwUserIdCustomIncludeExcludeNetworkArgs $) {
        this.discoveryInclude = $.discoveryInclude;
        this.enabled = $.enabled;
        this.name = $.name;
        this.networkAddress = $.networkAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NgfwUserIdCustomIncludeExcludeNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NgfwUserIdCustomIncludeExcludeNetworkArgs $;

        public Builder() {
            $ = new NgfwUserIdCustomIncludeExcludeNetworkArgs();
        }

        public Builder(NgfwUserIdCustomIncludeExcludeNetworkArgs defaults) {
            $ = new NgfwUserIdCustomIncludeExcludeNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param discoveryInclude Include or exclude this subnet from user-id configuration
         * 
         * @return builder
         * 
         */
        public Builder discoveryInclude(Output<Boolean> discoveryInclude) {
            $.discoveryInclude = discoveryInclude;
            return this;
        }

        /**
         * @param discoveryInclude Include or exclude this subnet from user-id configuration
         * 
         * @return builder
         * 
         */
        public Builder discoveryInclude(Boolean discoveryInclude) {
            return discoveryInclude(Output.of(discoveryInclude));
        }

        /**
         * @param enabled Enable this specific custom include/exclude network
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable this specific custom include/exclude network
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param name Name of subnet filter
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of subnet filter
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkAddress Network IP address of the subnet filter
         * 
         * @return builder
         * 
         */
        public Builder networkAddress(Output<String> networkAddress) {
            $.networkAddress = networkAddress;
            return this;
        }

        /**
         * @param networkAddress Network IP address of the subnet filter
         * 
         * @return builder
         * 
         */
        public Builder networkAddress(String networkAddress) {
            return networkAddress(Output.of(networkAddress));
        }

        public NgfwUserIdCustomIncludeExcludeNetworkArgs build() {
            if ($.discoveryInclude == null) {
                throw new MissingRequiredPropertyException("NgfwUserIdCustomIncludeExcludeNetworkArgs", "discoveryInclude");
            }
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("NgfwUserIdCustomIncludeExcludeNetworkArgs", "enabled");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("NgfwUserIdCustomIncludeExcludeNetworkArgs", "name");
            }
            if ($.networkAddress == null) {
                throw new MissingRequiredPropertyException("NgfwUserIdCustomIncludeExcludeNetworkArgs", "networkAddress");
            }
            return $;
        }
    }

}
