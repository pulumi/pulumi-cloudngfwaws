// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source get a list of NGFWs.
//
// ## Admin Permission Type
//
// * `Firewall`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudngfwaws.GetNgfws(ctx, &cloudngfwaws.GetNgfwsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNgfws(ctx *pulumi.Context, args *GetNgfwsArgs, opts ...pulumi.InvokeOption) (*GetNgfwsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNgfwsResult
	err := ctx.Invoke("cloudngfwaws:index/getNgfws:getNgfws", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNgfws.
type GetNgfwsArgs struct {
	// The rulestack to filter on.
	Rulestack *string `pulumi:"rulestack"`
	// List of vpc ids to filter on.
	VpcIds []string `pulumi:"vpcIds"`
}

// A collection of values returned by getNgfws.
type GetNgfwsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of NGFWs.
	Instances []GetNgfwsInstance `pulumi:"instances"`
	// The rulestack to filter on.
	Rulestack *string `pulumi:"rulestack"`
	// List of vpc ids to filter on.
	VpcIds []string `pulumi:"vpcIds"`
}

func GetNgfwsOutput(ctx *pulumi.Context, args GetNgfwsOutputArgs, opts ...pulumi.InvokeOption) GetNgfwsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNgfwsResultOutput, error) {
			args := v.(GetNgfwsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudngfwaws:index/getNgfws:getNgfws", args, GetNgfwsResultOutput{}, options).(GetNgfwsResultOutput), nil
		}).(GetNgfwsResultOutput)
}

// A collection of arguments for invoking getNgfws.
type GetNgfwsOutputArgs struct {
	// The rulestack to filter on.
	Rulestack pulumi.StringPtrInput `pulumi:"rulestack"`
	// List of vpc ids to filter on.
	VpcIds pulumi.StringArrayInput `pulumi:"vpcIds"`
}

func (GetNgfwsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNgfwsArgs)(nil)).Elem()
}

// A collection of values returned by getNgfws.
type GetNgfwsResultOutput struct{ *pulumi.OutputState }

func (GetNgfwsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNgfwsResult)(nil)).Elem()
}

func (o GetNgfwsResultOutput) ToGetNgfwsResultOutput() GetNgfwsResultOutput {
	return o
}

func (o GetNgfwsResultOutput) ToGetNgfwsResultOutputWithContext(ctx context.Context) GetNgfwsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetNgfwsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNgfwsResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of NGFWs.
func (o GetNgfwsResultOutput) Instances() GetNgfwsInstanceArrayOutput {
	return o.ApplyT(func(v GetNgfwsResult) []GetNgfwsInstance { return v.Instances }).(GetNgfwsInstanceArrayOutput)
}

// The rulestack to filter on.
func (o GetNgfwsResultOutput) Rulestack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNgfwsResult) *string { return v.Rulestack }).(pulumi.StringPtrOutput)
}

// List of vpc ids to filter on.
func (o GetNgfwsResultOutput) VpcIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNgfwsResult) []string { return v.VpcIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNgfwsResultOutput{})
}
