// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source get a list of countries and their country codes.
//
// ## Admin Permission Type
//
// * `Rulestack`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudngfwaws.GetCountry(ctx, &cloudngfwaws.GetCountryArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCountry(ctx *pulumi.Context, args *GetCountryArgs, opts ...pulumi.InvokeOption) (*GetCountryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCountryResult
	err := ctx.Invoke("cloudngfwaws:index/getCountry:getCountry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCountry.
type GetCountryArgs struct {
	// Max number of results. Defaults to `100`.
	MaxResults *int `pulumi:"maxResults"`
	// Pagination token.
	Token *string `pulumi:"token"`
}

// A collection of values returned by getCountry.
type GetCountryResult struct {
	// The country code (as the key) and description (as the value).
	Codes map[string]string `pulumi:"codes"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Max number of results. Defaults to `100`.
	MaxResults *int `pulumi:"maxResults"`
	// Token for the next page of results.
	NextToken string `pulumi:"nextToken"`
	// Pagination token.
	Token *string `pulumi:"token"`
}

func GetCountryOutput(ctx *pulumi.Context, args GetCountryOutputArgs, opts ...pulumi.InvokeOption) GetCountryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCountryResultOutput, error) {
			args := v.(GetCountryArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetCountryResult
			secret, err := ctx.InvokePackageRaw("cloudngfwaws:index/getCountry:getCountry", args, &rv, "", opts...)
			if err != nil {
				return GetCountryResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetCountryResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetCountryResultOutput), nil
			}
			return output, nil
		}).(GetCountryResultOutput)
}

// A collection of arguments for invoking getCountry.
type GetCountryOutputArgs struct {
	// Max number of results. Defaults to `100`.
	MaxResults pulumi.IntPtrInput `pulumi:"maxResults"`
	// Pagination token.
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (GetCountryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCountryArgs)(nil)).Elem()
}

// A collection of values returned by getCountry.
type GetCountryResultOutput struct{ *pulumi.OutputState }

func (GetCountryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCountryResult)(nil)).Elem()
}

func (o GetCountryResultOutput) ToGetCountryResultOutput() GetCountryResultOutput {
	return o
}

func (o GetCountryResultOutput) ToGetCountryResultOutputWithContext(ctx context.Context) GetCountryResultOutput {
	return o
}

// The country code (as the key) and description (as the value).
func (o GetCountryResultOutput) Codes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCountryResult) map[string]string { return v.Codes }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCountryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCountryResult) string { return v.Id }).(pulumi.StringOutput)
}

// Max number of results. Defaults to `100`.
func (o GetCountryResultOutput) MaxResults() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCountryResult) *int { return v.MaxResults }).(pulumi.IntPtrOutput)
}

// Token for the next page of results.
func (o GetCountryResultOutput) NextToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetCountryResult) string { return v.NextToken }).(pulumi.StringOutput)
}

// Pagination token.
func (o GetCountryResultOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCountryResult) *string { return v.Token }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCountryResultOutput{})
}
