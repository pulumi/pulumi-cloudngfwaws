// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for fqdn list manipulation.
//
// ## Admin Permission Type
//
// * `Rulestack` (for `scope="Local"`)
// * `Global Rulestack` (for `scope="Global"`)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			r, err := cloudngfwaws.NewRulestack(ctx, "r", &cloudngfwaws.RulestackArgs{
//				Name:        pulumi.String("terraform-rulestack"),
//				Scope:       pulumi.String("Local"),
//				AccountId:   pulumi.String("123456789"),
//				Description: pulumi.String("Made by Pulumi"),
//				ProfileConfig: &cloudngfwaws.RulestackProfileConfigArgs{
//					AntiSpyware: pulumi.String("BestPractice"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloudngfwaws.NewFqdnList(ctx, "example", &cloudngfwaws.FqdnListArgs{
//				Rulestack:   r.Name,
//				Name:        pulumi.String("tf-fqdn-list"),
//				Description: pulumi.String("Also configured by Terraform"),
//				FqdnLists: pulumi.StringArray{
//					pulumi.String("example.com"),
//					pulumi.String("foobar.org"),
//				},
//				AuditComment: pulumi.String("initial config"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// import name is <scope>:<rulestack>:<fqdn_list_name>
//
// ```sh
// $ pulumi import cloudngfwaws:index/fqdnList:FqdnList example Local:terraform-rulestack:tf-fqdn-list
// ```
type FqdnList struct {
	pulumi.CustomResourceState

	// The audit comment.
	AuditComment pulumi.StringPtrOutput `pulumi:"auditComment"`
	// The description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The fqdn list.
	FqdnLists pulumi.StringArrayOutput `pulumi:"fqdnLists"`
	// The name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The rulestack.
	Rulestack pulumi.StringOutput `pulumi:"rulestack"`
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// The update token.
	UpdateToken pulumi.StringOutput `pulumi:"updateToken"`
}

// NewFqdnList registers a new resource with the given unique name, arguments, and options.
func NewFqdnList(ctx *pulumi.Context,
	name string, args *FqdnListArgs, opts ...pulumi.ResourceOption) (*FqdnList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FqdnLists == nil {
		return nil, errors.New("invalid value for required argument 'FqdnLists'")
	}
	if args.Rulestack == nil {
		return nil, errors.New("invalid value for required argument 'Rulestack'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FqdnList
	err := ctx.RegisterResource("cloudngfwaws:index/fqdnList:FqdnList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFqdnList gets an existing FqdnList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFqdnList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FqdnListState, opts ...pulumi.ResourceOption) (*FqdnList, error) {
	var resource FqdnList
	err := ctx.ReadResource("cloudngfwaws:index/fqdnList:FqdnList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FqdnList resources.
type fqdnListState struct {
	// The audit comment.
	AuditComment *string `pulumi:"auditComment"`
	// The description.
	Description *string `pulumi:"description"`
	// The fqdn list.
	FqdnLists []string `pulumi:"fqdnLists"`
	// The name.
	Name *string `pulumi:"name"`
	// The rulestack.
	Rulestack *string `pulumi:"rulestack"`
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope *string `pulumi:"scope"`
	// The update token.
	UpdateToken *string `pulumi:"updateToken"`
}

type FqdnListState struct {
	// The audit comment.
	AuditComment pulumi.StringPtrInput
	// The description.
	Description pulumi.StringPtrInput
	// The fqdn list.
	FqdnLists pulumi.StringArrayInput
	// The name.
	Name pulumi.StringPtrInput
	// The rulestack.
	Rulestack pulumi.StringPtrInput
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope pulumi.StringPtrInput
	// The update token.
	UpdateToken pulumi.StringPtrInput
}

func (FqdnListState) ElementType() reflect.Type {
	return reflect.TypeOf((*fqdnListState)(nil)).Elem()
}

type fqdnListArgs struct {
	// The audit comment.
	AuditComment *string `pulumi:"auditComment"`
	// The description.
	Description *string `pulumi:"description"`
	// The fqdn list.
	FqdnLists []string `pulumi:"fqdnLists"`
	// The name.
	Name *string `pulumi:"name"`
	// The rulestack.
	Rulestack string `pulumi:"rulestack"`
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a FqdnList resource.
type FqdnListArgs struct {
	// The audit comment.
	AuditComment pulumi.StringPtrInput
	// The description.
	Description pulumi.StringPtrInput
	// The fqdn list.
	FqdnLists pulumi.StringArrayInput
	// The name.
	Name pulumi.StringPtrInput
	// The rulestack.
	Rulestack pulumi.StringInput
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope pulumi.StringPtrInput
}

func (FqdnListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fqdnListArgs)(nil)).Elem()
}

type FqdnListInput interface {
	pulumi.Input

	ToFqdnListOutput() FqdnListOutput
	ToFqdnListOutputWithContext(ctx context.Context) FqdnListOutput
}

func (*FqdnList) ElementType() reflect.Type {
	return reflect.TypeOf((**FqdnList)(nil)).Elem()
}

func (i *FqdnList) ToFqdnListOutput() FqdnListOutput {
	return i.ToFqdnListOutputWithContext(context.Background())
}

func (i *FqdnList) ToFqdnListOutputWithContext(ctx context.Context) FqdnListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FqdnListOutput)
}

// FqdnListArrayInput is an input type that accepts FqdnListArray and FqdnListArrayOutput values.
// You can construct a concrete instance of `FqdnListArrayInput` via:
//
//	FqdnListArray{ FqdnListArgs{...} }
type FqdnListArrayInput interface {
	pulumi.Input

	ToFqdnListArrayOutput() FqdnListArrayOutput
	ToFqdnListArrayOutputWithContext(context.Context) FqdnListArrayOutput
}

type FqdnListArray []FqdnListInput

func (FqdnListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FqdnList)(nil)).Elem()
}

func (i FqdnListArray) ToFqdnListArrayOutput() FqdnListArrayOutput {
	return i.ToFqdnListArrayOutputWithContext(context.Background())
}

func (i FqdnListArray) ToFqdnListArrayOutputWithContext(ctx context.Context) FqdnListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FqdnListArrayOutput)
}

// FqdnListMapInput is an input type that accepts FqdnListMap and FqdnListMapOutput values.
// You can construct a concrete instance of `FqdnListMapInput` via:
//
//	FqdnListMap{ "key": FqdnListArgs{...} }
type FqdnListMapInput interface {
	pulumi.Input

	ToFqdnListMapOutput() FqdnListMapOutput
	ToFqdnListMapOutputWithContext(context.Context) FqdnListMapOutput
}

type FqdnListMap map[string]FqdnListInput

func (FqdnListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FqdnList)(nil)).Elem()
}

func (i FqdnListMap) ToFqdnListMapOutput() FqdnListMapOutput {
	return i.ToFqdnListMapOutputWithContext(context.Background())
}

func (i FqdnListMap) ToFqdnListMapOutputWithContext(ctx context.Context) FqdnListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FqdnListMapOutput)
}

type FqdnListOutput struct{ *pulumi.OutputState }

func (FqdnListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FqdnList)(nil)).Elem()
}

func (o FqdnListOutput) ToFqdnListOutput() FqdnListOutput {
	return o
}

func (o FqdnListOutput) ToFqdnListOutputWithContext(ctx context.Context) FqdnListOutput {
	return o
}

// The audit comment.
func (o FqdnListOutput) AuditComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FqdnList) pulumi.StringPtrOutput { return v.AuditComment }).(pulumi.StringPtrOutput)
}

// The description.
func (o FqdnListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FqdnList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The fqdn list.
func (o FqdnListOutput) FqdnLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FqdnList) pulumi.StringArrayOutput { return v.FqdnLists }).(pulumi.StringArrayOutput)
}

// The name.
func (o FqdnListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FqdnList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The rulestack.
func (o FqdnListOutput) Rulestack() pulumi.StringOutput {
	return o.ApplyT(func(v *FqdnList) pulumi.StringOutput { return v.Rulestack }).(pulumi.StringOutput)
}

// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
func (o FqdnListOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FqdnList) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

// The update token.
func (o FqdnListOutput) UpdateToken() pulumi.StringOutput {
	return o.ApplyT(func(v *FqdnList) pulumi.StringOutput { return v.UpdateToken }).(pulumi.StringOutput)
}

type FqdnListArrayOutput struct{ *pulumi.OutputState }

func (FqdnListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FqdnList)(nil)).Elem()
}

func (o FqdnListArrayOutput) ToFqdnListArrayOutput() FqdnListArrayOutput {
	return o
}

func (o FqdnListArrayOutput) ToFqdnListArrayOutputWithContext(ctx context.Context) FqdnListArrayOutput {
	return o
}

func (o FqdnListArrayOutput) Index(i pulumi.IntInput) FqdnListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FqdnList {
		return vs[0].([]*FqdnList)[vs[1].(int)]
	}).(FqdnListOutput)
}

type FqdnListMapOutput struct{ *pulumi.OutputState }

func (FqdnListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FqdnList)(nil)).Elem()
}

func (o FqdnListMapOutput) ToFqdnListMapOutput() FqdnListMapOutput {
	return o
}

func (o FqdnListMapOutput) ToFqdnListMapOutputWithContext(ctx context.Context) FqdnListMapOutput {
	return o
}

func (o FqdnListMapOutput) MapIndex(k pulumi.StringInput) FqdnListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FqdnList {
		return vs[0].(map[string]*FqdnList)[vs[1].(string)]
	}).(FqdnListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FqdnListInput)(nil)).Elem(), &FqdnList{})
	pulumi.RegisterInputType(reflect.TypeOf((*FqdnListArrayInput)(nil)).Elem(), FqdnListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FqdnListMapInput)(nil)).Elem(), FqdnListMap{})
	pulumi.RegisterOutputType(FqdnListOutput{})
	pulumi.RegisterOutputType(FqdnListArrayOutput{})
	pulumi.RegisterOutputType(FqdnListMapOutput{})
}
