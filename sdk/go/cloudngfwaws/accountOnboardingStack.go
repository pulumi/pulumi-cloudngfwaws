// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for Account Onboarding.
//
// ## Admin Permission Type
//
// * `Rulestack` (for `scope="Local"`)
// * `Global Rulestack` (for `scope="Global"`)
type AccountOnboardingStack struct {
	pulumi.CustomResourceState

	// The account IDs
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Audit Log Group Name
	AuditlogGroup pulumi.StringPtrOutput `pulumi:"auditlogGroup"`
	// Role name to run the account onboarding CFT in each account to be onboarded.
	CftRoleName pulumi.StringOutput `pulumi:"cftRoleName"`
	// Cloudwatch Log Group
	CloudwatchLogGroup pulumi.StringPtrOutput `pulumi:"cloudwatchLogGroup"`
	// Cloudwatch Namespace
	CloudwatchNamespace pulumi.StringPtrOutput `pulumi:"cloudwatchNamespace"`
	// The CloudNGFW can decrypt inbound and outbound traffic by providing a
	// 					  certificate stored in secret Manager.
	// 		 			  The role allows the service to access a certificate configured in the rulestack.
	// 		 			  Only certificated tagged with PaloAltoCloudNGFW can be accessed
	DecryptionCert pulumi.StringPtrOutput `pulumi:"decryptionCert"`
	// Controls whether cloud NGFW will create firewall endpoints automatitically in customer subnets
	EndpointMode pulumi.StringPtrOutput `pulumi:"endpointMode"`
	// External Id of the onboarded account
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// Kinesis Firehose for logging
	KinesisFirehose pulumi.StringPtrOutput `pulumi:"kinesisFirehose"`
	// Role name to run the account onboarding CFT in each account to be onboarded.
	OnboardingCft pulumi.StringOutput `pulumi:"onboardingCft"`
	// S3 Bucket Name for Logging. Logging roles provide access to create log contents in this bucket.
	S3Bucket pulumi.StringPtrOutput `pulumi:"s3Bucket"`
	// SNS topic ARN to publish the role ARNs
	SnsTopicArn pulumi.StringOutput `pulumi:"snsTopicArn"`
	// ID of the account onboarding CFT stack
	StackId pulumi.StringOutput `pulumi:"stackId"`
	// Status of the account onboarding CFT stack.
	StackStatus pulumi.StringOutput `pulumi:"stackStatus"`
	// PANW Cloud NGFW trusted account Id
	TrustedAccount pulumi.StringOutput `pulumi:"trustedAccount"`
}

// NewAccountOnboardingStack registers a new resource with the given unique name, arguments, and options.
func NewAccountOnboardingStack(ctx *pulumi.Context,
	name string, args *AccountOnboardingStackArgs, opts ...pulumi.ResourceOption) (*AccountOnboardingStack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.CftRoleName == nil {
		return nil, errors.New("invalid value for required argument 'CftRoleName'")
	}
	if args.ExternalId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalId'")
	}
	if args.OnboardingCft == nil {
		return nil, errors.New("invalid value for required argument 'OnboardingCft'")
	}
	if args.SnsTopicArn == nil {
		return nil, errors.New("invalid value for required argument 'SnsTopicArn'")
	}
	if args.TrustedAccount == nil {
		return nil, errors.New("invalid value for required argument 'TrustedAccount'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountOnboardingStack
	err := ctx.RegisterResource("cloudngfwaws:index/accountOnboardingStack:AccountOnboardingStack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountOnboardingStack gets an existing AccountOnboardingStack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountOnboardingStack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountOnboardingStackState, opts ...pulumi.ResourceOption) (*AccountOnboardingStack, error) {
	var resource AccountOnboardingStack
	err := ctx.ReadResource("cloudngfwaws:index/accountOnboardingStack:AccountOnboardingStack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountOnboardingStack resources.
type accountOnboardingStackState struct {
	// The account IDs
	AccountId *string `pulumi:"accountId"`
	// Audit Log Group Name
	AuditlogGroup *string `pulumi:"auditlogGroup"`
	// Role name to run the account onboarding CFT in each account to be onboarded.
	CftRoleName *string `pulumi:"cftRoleName"`
	// Cloudwatch Log Group
	CloudwatchLogGroup *string `pulumi:"cloudwatchLogGroup"`
	// Cloudwatch Namespace
	CloudwatchNamespace *string `pulumi:"cloudwatchNamespace"`
	// The CloudNGFW can decrypt inbound and outbound traffic by providing a
	// 					  certificate stored in secret Manager.
	// 		 			  The role allows the service to access a certificate configured in the rulestack.
	// 		 			  Only certificated tagged with PaloAltoCloudNGFW can be accessed
	DecryptionCert *string `pulumi:"decryptionCert"`
	// Controls whether cloud NGFW will create firewall endpoints automatitically in customer subnets
	EndpointMode *string `pulumi:"endpointMode"`
	// External Id of the onboarded account
	ExternalId *string `pulumi:"externalId"`
	// Kinesis Firehose for logging
	KinesisFirehose *string `pulumi:"kinesisFirehose"`
	// Role name to run the account onboarding CFT in each account to be onboarded.
	OnboardingCft *string `pulumi:"onboardingCft"`
	// S3 Bucket Name for Logging. Logging roles provide access to create log contents in this bucket.
	S3Bucket *string `pulumi:"s3Bucket"`
	// SNS topic ARN to publish the role ARNs
	SnsTopicArn *string `pulumi:"snsTopicArn"`
	// ID of the account onboarding CFT stack
	StackId *string `pulumi:"stackId"`
	// Status of the account onboarding CFT stack.
	StackStatus *string `pulumi:"stackStatus"`
	// PANW Cloud NGFW trusted account Id
	TrustedAccount *string `pulumi:"trustedAccount"`
}

type AccountOnboardingStackState struct {
	// The account IDs
	AccountId pulumi.StringPtrInput
	// Audit Log Group Name
	AuditlogGroup pulumi.StringPtrInput
	// Role name to run the account onboarding CFT in each account to be onboarded.
	CftRoleName pulumi.StringPtrInput
	// Cloudwatch Log Group
	CloudwatchLogGroup pulumi.StringPtrInput
	// Cloudwatch Namespace
	CloudwatchNamespace pulumi.StringPtrInput
	// The CloudNGFW can decrypt inbound and outbound traffic by providing a
	// 					  certificate stored in secret Manager.
	// 		 			  The role allows the service to access a certificate configured in the rulestack.
	// 		 			  Only certificated tagged with PaloAltoCloudNGFW can be accessed
	DecryptionCert pulumi.StringPtrInput
	// Controls whether cloud NGFW will create firewall endpoints automatitically in customer subnets
	EndpointMode pulumi.StringPtrInput
	// External Id of the onboarded account
	ExternalId pulumi.StringPtrInput
	// Kinesis Firehose for logging
	KinesisFirehose pulumi.StringPtrInput
	// Role name to run the account onboarding CFT in each account to be onboarded.
	OnboardingCft pulumi.StringPtrInput
	// S3 Bucket Name for Logging. Logging roles provide access to create log contents in this bucket.
	S3Bucket pulumi.StringPtrInput
	// SNS topic ARN to publish the role ARNs
	SnsTopicArn pulumi.StringPtrInput
	// ID of the account onboarding CFT stack
	StackId pulumi.StringPtrInput
	// Status of the account onboarding CFT stack.
	StackStatus pulumi.StringPtrInput
	// PANW Cloud NGFW trusted account Id
	TrustedAccount pulumi.StringPtrInput
}

func (AccountOnboardingStackState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountOnboardingStackState)(nil)).Elem()
}

type accountOnboardingStackArgs struct {
	// The account IDs
	AccountId string `pulumi:"accountId"`
	// Audit Log Group Name
	AuditlogGroup *string `pulumi:"auditlogGroup"`
	// Role name to run the account onboarding CFT in each account to be onboarded.
	CftRoleName string `pulumi:"cftRoleName"`
	// Cloudwatch Log Group
	CloudwatchLogGroup *string `pulumi:"cloudwatchLogGroup"`
	// Cloudwatch Namespace
	CloudwatchNamespace *string `pulumi:"cloudwatchNamespace"`
	// The CloudNGFW can decrypt inbound and outbound traffic by providing a
	// 					  certificate stored in secret Manager.
	// 		 			  The role allows the service to access a certificate configured in the rulestack.
	// 		 			  Only certificated tagged with PaloAltoCloudNGFW can be accessed
	DecryptionCert *string `pulumi:"decryptionCert"`
	// Controls whether cloud NGFW will create firewall endpoints automatitically in customer subnets
	EndpointMode *string `pulumi:"endpointMode"`
	// External Id of the onboarded account
	ExternalId string `pulumi:"externalId"`
	// Kinesis Firehose for logging
	KinesisFirehose *string `pulumi:"kinesisFirehose"`
	// Role name to run the account onboarding CFT in each account to be onboarded.
	OnboardingCft string `pulumi:"onboardingCft"`
	// S3 Bucket Name for Logging. Logging roles provide access to create log contents in this bucket.
	S3Bucket *string `pulumi:"s3Bucket"`
	// SNS topic ARN to publish the role ARNs
	SnsTopicArn string `pulumi:"snsTopicArn"`
	// ID of the account onboarding CFT stack
	StackId *string `pulumi:"stackId"`
	// Status of the account onboarding CFT stack.
	StackStatus *string `pulumi:"stackStatus"`
	// PANW Cloud NGFW trusted account Id
	TrustedAccount string `pulumi:"trustedAccount"`
}

// The set of arguments for constructing a AccountOnboardingStack resource.
type AccountOnboardingStackArgs struct {
	// The account IDs
	AccountId pulumi.StringInput
	// Audit Log Group Name
	AuditlogGroup pulumi.StringPtrInput
	// Role name to run the account onboarding CFT in each account to be onboarded.
	CftRoleName pulumi.StringInput
	// Cloudwatch Log Group
	CloudwatchLogGroup pulumi.StringPtrInput
	// Cloudwatch Namespace
	CloudwatchNamespace pulumi.StringPtrInput
	// The CloudNGFW can decrypt inbound and outbound traffic by providing a
	// 					  certificate stored in secret Manager.
	// 		 			  The role allows the service to access a certificate configured in the rulestack.
	// 		 			  Only certificated tagged with PaloAltoCloudNGFW can be accessed
	DecryptionCert pulumi.StringPtrInput
	// Controls whether cloud NGFW will create firewall endpoints automatitically in customer subnets
	EndpointMode pulumi.StringPtrInput
	// External Id of the onboarded account
	ExternalId pulumi.StringInput
	// Kinesis Firehose for logging
	KinesisFirehose pulumi.StringPtrInput
	// Role name to run the account onboarding CFT in each account to be onboarded.
	OnboardingCft pulumi.StringInput
	// S3 Bucket Name for Logging. Logging roles provide access to create log contents in this bucket.
	S3Bucket pulumi.StringPtrInput
	// SNS topic ARN to publish the role ARNs
	SnsTopicArn pulumi.StringInput
	// ID of the account onboarding CFT stack
	StackId pulumi.StringPtrInput
	// Status of the account onboarding CFT stack.
	StackStatus pulumi.StringPtrInput
	// PANW Cloud NGFW trusted account Id
	TrustedAccount pulumi.StringInput
}

func (AccountOnboardingStackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountOnboardingStackArgs)(nil)).Elem()
}

type AccountOnboardingStackInput interface {
	pulumi.Input

	ToAccountOnboardingStackOutput() AccountOnboardingStackOutput
	ToAccountOnboardingStackOutputWithContext(ctx context.Context) AccountOnboardingStackOutput
}

func (*AccountOnboardingStack) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountOnboardingStack)(nil)).Elem()
}

func (i *AccountOnboardingStack) ToAccountOnboardingStackOutput() AccountOnboardingStackOutput {
	return i.ToAccountOnboardingStackOutputWithContext(context.Background())
}

func (i *AccountOnboardingStack) ToAccountOnboardingStackOutputWithContext(ctx context.Context) AccountOnboardingStackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountOnboardingStackOutput)
}

// AccountOnboardingStackArrayInput is an input type that accepts AccountOnboardingStackArray and AccountOnboardingStackArrayOutput values.
// You can construct a concrete instance of `AccountOnboardingStackArrayInput` via:
//
//	AccountOnboardingStackArray{ AccountOnboardingStackArgs{...} }
type AccountOnboardingStackArrayInput interface {
	pulumi.Input

	ToAccountOnboardingStackArrayOutput() AccountOnboardingStackArrayOutput
	ToAccountOnboardingStackArrayOutputWithContext(context.Context) AccountOnboardingStackArrayOutput
}

type AccountOnboardingStackArray []AccountOnboardingStackInput

func (AccountOnboardingStackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountOnboardingStack)(nil)).Elem()
}

func (i AccountOnboardingStackArray) ToAccountOnboardingStackArrayOutput() AccountOnboardingStackArrayOutput {
	return i.ToAccountOnboardingStackArrayOutputWithContext(context.Background())
}

func (i AccountOnboardingStackArray) ToAccountOnboardingStackArrayOutputWithContext(ctx context.Context) AccountOnboardingStackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountOnboardingStackArrayOutput)
}

// AccountOnboardingStackMapInput is an input type that accepts AccountOnboardingStackMap and AccountOnboardingStackMapOutput values.
// You can construct a concrete instance of `AccountOnboardingStackMapInput` via:
//
//	AccountOnboardingStackMap{ "key": AccountOnboardingStackArgs{...} }
type AccountOnboardingStackMapInput interface {
	pulumi.Input

	ToAccountOnboardingStackMapOutput() AccountOnboardingStackMapOutput
	ToAccountOnboardingStackMapOutputWithContext(context.Context) AccountOnboardingStackMapOutput
}

type AccountOnboardingStackMap map[string]AccountOnboardingStackInput

func (AccountOnboardingStackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountOnboardingStack)(nil)).Elem()
}

func (i AccountOnboardingStackMap) ToAccountOnboardingStackMapOutput() AccountOnboardingStackMapOutput {
	return i.ToAccountOnboardingStackMapOutputWithContext(context.Background())
}

func (i AccountOnboardingStackMap) ToAccountOnboardingStackMapOutputWithContext(ctx context.Context) AccountOnboardingStackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountOnboardingStackMapOutput)
}

type AccountOnboardingStackOutput struct{ *pulumi.OutputState }

func (AccountOnboardingStackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountOnboardingStack)(nil)).Elem()
}

func (o AccountOnboardingStackOutput) ToAccountOnboardingStackOutput() AccountOnboardingStackOutput {
	return o
}

func (o AccountOnboardingStackOutput) ToAccountOnboardingStackOutputWithContext(ctx context.Context) AccountOnboardingStackOutput {
	return o
}

// The account IDs
func (o AccountOnboardingStackOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Audit Log Group Name
func (o AccountOnboardingStackOutput) AuditlogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringPtrOutput { return v.AuditlogGroup }).(pulumi.StringPtrOutput)
}

// Role name to run the account onboarding CFT in each account to be onboarded.
func (o AccountOnboardingStackOutput) CftRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringOutput { return v.CftRoleName }).(pulumi.StringOutput)
}

// Cloudwatch Log Group
func (o AccountOnboardingStackOutput) CloudwatchLogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringPtrOutput { return v.CloudwatchLogGroup }).(pulumi.StringPtrOutput)
}

// Cloudwatch Namespace
func (o AccountOnboardingStackOutput) CloudwatchNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringPtrOutput { return v.CloudwatchNamespace }).(pulumi.StringPtrOutput)
}

// The CloudNGFW can decrypt inbound and outbound traffic by providing a
//
//				  certificate stored in secret Manager.
//	 			  The role allows the service to access a certificate configured in the rulestack.
//	 			  Only certificated tagged with PaloAltoCloudNGFW can be accessed
func (o AccountOnboardingStackOutput) DecryptionCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringPtrOutput { return v.DecryptionCert }).(pulumi.StringPtrOutput)
}

// Controls whether cloud NGFW will create firewall endpoints automatitically in customer subnets
func (o AccountOnboardingStackOutput) EndpointMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringPtrOutput { return v.EndpointMode }).(pulumi.StringPtrOutput)
}

// External Id of the onboarded account
func (o AccountOnboardingStackOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// Kinesis Firehose for logging
func (o AccountOnboardingStackOutput) KinesisFirehose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringPtrOutput { return v.KinesisFirehose }).(pulumi.StringPtrOutput)
}

// Role name to run the account onboarding CFT in each account to be onboarded.
func (o AccountOnboardingStackOutput) OnboardingCft() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringOutput { return v.OnboardingCft }).(pulumi.StringOutput)
}

// S3 Bucket Name for Logging. Logging roles provide access to create log contents in this bucket.
func (o AccountOnboardingStackOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringPtrOutput { return v.S3Bucket }).(pulumi.StringPtrOutput)
}

// SNS topic ARN to publish the role ARNs
func (o AccountOnboardingStackOutput) SnsTopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringOutput { return v.SnsTopicArn }).(pulumi.StringOutput)
}

// ID of the account onboarding CFT stack
func (o AccountOnboardingStackOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringOutput { return v.StackId }).(pulumi.StringOutput)
}

// Status of the account onboarding CFT stack.
func (o AccountOnboardingStackOutput) StackStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringOutput { return v.StackStatus }).(pulumi.StringOutput)
}

// PANW Cloud NGFW trusted account Id
func (o AccountOnboardingStackOutput) TrustedAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountOnboardingStack) pulumi.StringOutput { return v.TrustedAccount }).(pulumi.StringOutput)
}

type AccountOnboardingStackArrayOutput struct{ *pulumi.OutputState }

func (AccountOnboardingStackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountOnboardingStack)(nil)).Elem()
}

func (o AccountOnboardingStackArrayOutput) ToAccountOnboardingStackArrayOutput() AccountOnboardingStackArrayOutput {
	return o
}

func (o AccountOnboardingStackArrayOutput) ToAccountOnboardingStackArrayOutputWithContext(ctx context.Context) AccountOnboardingStackArrayOutput {
	return o
}

func (o AccountOnboardingStackArrayOutput) Index(i pulumi.IntInput) AccountOnboardingStackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountOnboardingStack {
		return vs[0].([]*AccountOnboardingStack)[vs[1].(int)]
	}).(AccountOnboardingStackOutput)
}

type AccountOnboardingStackMapOutput struct{ *pulumi.OutputState }

func (AccountOnboardingStackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountOnboardingStack)(nil)).Elem()
}

func (o AccountOnboardingStackMapOutput) ToAccountOnboardingStackMapOutput() AccountOnboardingStackMapOutput {
	return o
}

func (o AccountOnboardingStackMapOutput) ToAccountOnboardingStackMapOutputWithContext(ctx context.Context) AccountOnboardingStackMapOutput {
	return o
}

func (o AccountOnboardingStackMapOutput) MapIndex(k pulumi.StringInput) AccountOnboardingStackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountOnboardingStack {
		return vs[0].(map[string]*AccountOnboardingStack)[vs[1].(string)]
	}).(AccountOnboardingStackOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountOnboardingStackInput)(nil)).Elem(), &AccountOnboardingStack{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountOnboardingStackArrayInput)(nil)).Elem(), AccountOnboardingStackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountOnboardingStackMapInput)(nil)).Elem(), AccountOnboardingStackMap{})
	pulumi.RegisterOutputType(AccountOnboardingStackOutput{})
	pulumi.RegisterOutputType(AccountOnboardingStackArrayOutput{})
	pulumi.RegisterOutputType(AccountOnboardingStackMapOutput{})
}
