// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "cloudngfwaws:index/account:Account":
		r = &Account{}
	case "cloudngfwaws:index/accountOnboarding:AccountOnboarding":
		r = &AccountOnboarding{}
	case "cloudngfwaws:index/accountOnboardingStack:AccountOnboardingStack":
		r = &AccountOnboardingStack{}
	case "cloudngfwaws:index/certificate:Certificate":
		r = &Certificate{}
	case "cloudngfwaws:index/commitRulestack:CommitRulestack":
		r = &CommitRulestack{}
	case "cloudngfwaws:index/customUrlCategory:CustomUrlCategory":
		r = &CustomUrlCategory{}
	case "cloudngfwaws:index/fqdnList:FqdnList":
		r = &FqdnList{}
	case "cloudngfwaws:index/intelligentFeed:IntelligentFeed":
		r = &IntelligentFeed{}
	case "cloudngfwaws:index/ngfw:Ngfw":
		r = &Ngfw{}
	case "cloudngfwaws:index/ngfwLogProfile:NgfwLogProfile":
		r = &NgfwLogProfile{}
	case "cloudngfwaws:index/predefinedUrlCategoryOverride:PredefinedUrlCategoryOverride":
		r = &PredefinedUrlCategoryOverride{}
	case "cloudngfwaws:index/prefixList:PrefixList":
		r = &PrefixList{}
	case "cloudngfwaws:index/rulestack:Rulestack":
		r = &Rulestack{}
	case "cloudngfwaws:index/securityRule:SecurityRule":
		r = &SecurityRule{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:cloudngfwaws" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/account",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/accountOnboarding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/accountOnboardingStack",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/certificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/commitRulestack",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/customUrlCategory",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/fqdnList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/intelligentFeed",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/ngfw",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/ngfwLogProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/predefinedUrlCategoryOverride",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/prefixList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/rulestack",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudngfwaws",
		"index/securityRule",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"cloudngfwaws",
		&pkg{version},
	)
}
