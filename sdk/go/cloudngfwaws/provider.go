// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the cloudngfwaws package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// (Used for the initial `sts assume role`) AWS access key. Environment variable: `CLOUDNGFWAWS_ACCESS_KEY`. JSON conf file
	// variable: `access-key`.
	AccessKey pulumi.StringPtrOutput `pulumi:"accessKey"`
	// The ARN allowing account admin permissions. Environment variable: `CLOUDNGFWAWS_ACCT_ADMIN_ARN`. JSON conf file
	// variable: `account-admin-arn`.
	AccountAdminArn pulumi.StringPtrOutput `pulumi:"accountAdminArn"`
	// The ARN allowing firewall, rulestack, and global rulestack admin permissions. Global rulestack admin permissions can be
	// enabled only if the AWS account is onboarded by AWS Firewall Manager. Use 'lfa_arn' and 'lra_arn' if you want to enable
	// only firewall and rulestack admin permissions. Environment variable: `CLOUDNGFWAWS_ARN`. JSON conf file variable: `arn`.
	Arn pulumi.StringPtrOutput `pulumi:"arn"`
	// The ARN allowing global rulestack admin permissions. Global rulestack admin permissions can be enabled only if the AWS
	// account is onboarded by AWS Firewall Manager. 'gra_arn' is preferentially used over the `arn` param if both are
	// specified. Environment variable: `CLOUDNGFWAWS_GRA_ARN`. JSON conf file variable: `gra-arn`.
	GraArn pulumi.StringPtrOutput `pulumi:"graArn"`
	// The hostname of the API (default: `api.us-east-1.aws.cloudngfw.paloaltonetworks.com`). Environment variable:
	// `CLOUDNGFWAWS_HOST`. JSON conf file variable: `host`.
	Host pulumi.StringPtrOutput `pulumi:"host"`
	// Retrieve provider configuration from this JSON file.
	JsonConfigFile pulumi.StringPtrOutput `pulumi:"jsonConfigFile"`
	// The ARN allowing firewall admin permissions. This is preferentially used over the `arn` param if both are specified.
	// Environment variable: `CLOUDNGFWAWS_LFA_ARN`. JSON conf file variable: `lfa-arn`.
	LfaArn pulumi.StringPtrOutput `pulumi:"lfaArn"`
	// The ARN allowing rulestack admin permissions. This is preferentially used over the `arn` param if both are specified.
	// Environment variable: `CLOUDNGFWAWS_LRA_ARN`. JSON conf file variable: `lra-arn`.
	LraArn pulumi.StringPtrOutput `pulumi:"lraArn"`
	// AWS management plane region. Environment variable: `CLOUDNGFWAWS_MP_REGION`. JSON conf file variable: `mpRegion`.
	MpRegion pulumi.StringPtrOutput `pulumi:"mpRegion"`
	// AWS management plane MP region host Environment variable: `CLOUDNGFWAWS_MP_REGION_HOST`. JSON conf file variable:
	// `mpRegionHost`.
	MpRegionHost pulumi.StringPtrOutput `pulumi:"mpRegionHost"`
	// (Used for the initial `sts assume role`) AWS PROFILE. Environment variable: `CLOUDNGFWAWS_PROFILE`. JSON conf file
	// variable: `profile`.
	Profile pulumi.StringPtrOutput `pulumi:"profile"`
	// The protocol (defaults to `https`). Environment variable: `CLOUDNGFWAWS_PROTOCOL`. JSON conf file variable: `protocol`.
	// Valid values are `https` or `http`.
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// AWS region. Environment variable: `CLOUDNGFWAWS_REGION`. JSON conf file variable: `region`.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// (Used for the initial `sts assume role`) AWS secret key. Environment variable: `CLOUDNGFWAWS_SECRET_KEY`. JSON conf file
	// variable: `secret-key`.
	SecretKey pulumi.StringPtrOutput `pulumi:"secretKey"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:cloudngfwaws", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// (Used for the initial `sts assume role`) AWS access key. Environment variable: `CLOUDNGFWAWS_ACCESS_KEY`. JSON conf file
	// variable: `access-key`.
	AccessKey *string `pulumi:"accessKey"`
	// The ARN allowing account admin permissions. Environment variable: `CLOUDNGFWAWS_ACCT_ADMIN_ARN`. JSON conf file
	// variable: `account-admin-arn`.
	AccountAdminArn *string `pulumi:"accountAdminArn"`
	// The ARN allowing firewall, rulestack, and global rulestack admin permissions. Global rulestack admin permissions can be
	// enabled only if the AWS account is onboarded by AWS Firewall Manager. Use 'lfa_arn' and 'lra_arn' if you want to enable
	// only firewall and rulestack admin permissions. Environment variable: `CLOUDNGFWAWS_ARN`. JSON conf file variable: `arn`.
	Arn *string `pulumi:"arn"`
	// The ARN allowing global rulestack admin permissions. Global rulestack admin permissions can be enabled only if the AWS
	// account is onboarded by AWS Firewall Manager. 'gra_arn' is preferentially used over the `arn` param if both are
	// specified. Environment variable: `CLOUDNGFWAWS_GRA_ARN`. JSON conf file variable: `gra-arn`.
	GraArn *string `pulumi:"graArn"`
	// Additional HTTP headers to send with API calls. Environment variable: `CLOUDNGFWAWS_HEADERS`. JSON conf file variable:
	// `headers`.
	Headers map[string]string `pulumi:"headers"`
	// The hostname of the API (default: `api.us-east-1.aws.cloudngfw.paloaltonetworks.com`). Environment variable:
	// `CLOUDNGFWAWS_HOST`. JSON conf file variable: `host`.
	Host *string `pulumi:"host"`
	// Retrieve provider configuration from this JSON file.
	JsonConfigFile *string `pulumi:"jsonConfigFile"`
	// The ARN allowing firewall admin permissions. This is preferentially used over the `arn` param if both are specified.
	// Environment variable: `CLOUDNGFWAWS_LFA_ARN`. JSON conf file variable: `lfa-arn`.
	LfaArn *string `pulumi:"lfaArn"`
	// The logging options for the provider. Environment variable: `CLOUDNGFWAWS_LOGGING`. JSON conf file variable: `logging`.
	Loggings []string `pulumi:"loggings"`
	// The ARN allowing rulestack admin permissions. This is preferentially used over the `arn` param if both are specified.
	// Environment variable: `CLOUDNGFWAWS_LRA_ARN`. JSON conf file variable: `lra-arn`.
	LraArn *string `pulumi:"lraArn"`
	// AWS management plane region. Environment variable: `CLOUDNGFWAWS_MP_REGION`. JSON conf file variable: `mpRegion`.
	MpRegion *string `pulumi:"mpRegion"`
	// AWS management plane MP region host Environment variable: `CLOUDNGFWAWS_MP_REGION_HOST`. JSON conf file variable:
	// `mpRegionHost`.
	MpRegionHost *string `pulumi:"mpRegionHost"`
	// (Used for the initial `sts assume role`) AWS PROFILE. Environment variable: `CLOUDNGFWAWS_PROFILE`. JSON conf file
	// variable: `profile`.
	Profile *string `pulumi:"profile"`
	// The protocol (defaults to `https`). Environment variable: `CLOUDNGFWAWS_PROTOCOL`. JSON conf file variable: `protocol`.
	// Valid values are `https` or `http`.
	Protocol *string `pulumi:"protocol"`
	// AWS region. Environment variable: `CLOUDNGFWAWS_REGION`. JSON conf file variable: `region`.
	Region          *string `pulumi:"region"`
	ResourceTimeout *int    `pulumi:"resourceTimeout"`
	// (Used for the initial `sts assume role`) AWS secret key. Environment variable: `CLOUDNGFWAWS_SECRET_KEY`. JSON conf file
	// variable: `secret-key`.
	SecretKey *string `pulumi:"secretKey"`
	// Skip verifying the SSL certificate. Environment variable: `CLOUDNGFWAWS_SKIP_VERIFY_CERTIFICATE`. JSON conf file
	// variable: `skip-verify-certificate`.
	SkipVerifyCertificate *bool `pulumi:"skipVerifyCertificate"`
	// Enable synchronous mode while creating resources Environment variable: `CLOUDNGFWAWS_SYNC_MODE`. JSON conf file
	// variable: `syncMode`.
	SyncMode *bool `pulumi:"syncMode"`
	// The timeout for any single API call (default: `30`). Environment variable: `CLOUDNGFWAWS_TIMEOUT`. JSON conf file
	// variable: `timeout`.
	Timeout *int `pulumi:"timeout"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// (Used for the initial `sts assume role`) AWS access key. Environment variable: `CLOUDNGFWAWS_ACCESS_KEY`. JSON conf file
	// variable: `access-key`.
	AccessKey pulumi.StringPtrInput
	// The ARN allowing account admin permissions. Environment variable: `CLOUDNGFWAWS_ACCT_ADMIN_ARN`. JSON conf file
	// variable: `account-admin-arn`.
	AccountAdminArn pulumi.StringPtrInput
	// The ARN allowing firewall, rulestack, and global rulestack admin permissions. Global rulestack admin permissions can be
	// enabled only if the AWS account is onboarded by AWS Firewall Manager. Use 'lfa_arn' and 'lra_arn' if you want to enable
	// only firewall and rulestack admin permissions. Environment variable: `CLOUDNGFWAWS_ARN`. JSON conf file variable: `arn`.
	Arn pulumi.StringPtrInput
	// The ARN allowing global rulestack admin permissions. Global rulestack admin permissions can be enabled only if the AWS
	// account is onboarded by AWS Firewall Manager. 'gra_arn' is preferentially used over the `arn` param if both are
	// specified. Environment variable: `CLOUDNGFWAWS_GRA_ARN`. JSON conf file variable: `gra-arn`.
	GraArn pulumi.StringPtrInput
	// Additional HTTP headers to send with API calls. Environment variable: `CLOUDNGFWAWS_HEADERS`. JSON conf file variable:
	// `headers`.
	Headers pulumi.StringMapInput
	// The hostname of the API (default: `api.us-east-1.aws.cloudngfw.paloaltonetworks.com`). Environment variable:
	// `CLOUDNGFWAWS_HOST`. JSON conf file variable: `host`.
	Host pulumi.StringPtrInput
	// Retrieve provider configuration from this JSON file.
	JsonConfigFile pulumi.StringPtrInput
	// The ARN allowing firewall admin permissions. This is preferentially used over the `arn` param if both are specified.
	// Environment variable: `CLOUDNGFWAWS_LFA_ARN`. JSON conf file variable: `lfa-arn`.
	LfaArn pulumi.StringPtrInput
	// The logging options for the provider. Environment variable: `CLOUDNGFWAWS_LOGGING`. JSON conf file variable: `logging`.
	Loggings pulumi.StringArrayInput
	// The ARN allowing rulestack admin permissions. This is preferentially used over the `arn` param if both are specified.
	// Environment variable: `CLOUDNGFWAWS_LRA_ARN`. JSON conf file variable: `lra-arn`.
	LraArn pulumi.StringPtrInput
	// AWS management plane region. Environment variable: `CLOUDNGFWAWS_MP_REGION`. JSON conf file variable: `mpRegion`.
	MpRegion pulumi.StringPtrInput
	// AWS management plane MP region host Environment variable: `CLOUDNGFWAWS_MP_REGION_HOST`. JSON conf file variable:
	// `mpRegionHost`.
	MpRegionHost pulumi.StringPtrInput
	// (Used for the initial `sts assume role`) AWS PROFILE. Environment variable: `CLOUDNGFWAWS_PROFILE`. JSON conf file
	// variable: `profile`.
	Profile pulumi.StringPtrInput
	// The protocol (defaults to `https`). Environment variable: `CLOUDNGFWAWS_PROTOCOL`. JSON conf file variable: `protocol`.
	// Valid values are `https` or `http`.
	Protocol pulumi.StringPtrInput
	// AWS region. Environment variable: `CLOUDNGFWAWS_REGION`. JSON conf file variable: `region`.
	Region          pulumi.StringPtrInput
	ResourceTimeout pulumi.IntPtrInput
	// (Used for the initial `sts assume role`) AWS secret key. Environment variable: `CLOUDNGFWAWS_SECRET_KEY`. JSON conf file
	// variable: `secret-key`.
	SecretKey pulumi.StringPtrInput
	// Skip verifying the SSL certificate. Environment variable: `CLOUDNGFWAWS_SKIP_VERIFY_CERTIFICATE`. JSON conf file
	// variable: `skip-verify-certificate`.
	SkipVerifyCertificate pulumi.BoolPtrInput
	// Enable synchronous mode while creating resources Environment variable: `CLOUDNGFWAWS_SYNC_MODE`. JSON conf file
	// variable: `syncMode`.
	SyncMode pulumi.BoolPtrInput
	// The timeout for any single API call (default: `30`). Environment variable: `CLOUDNGFWAWS_TIMEOUT`. JSON conf file
	// variable: `timeout`.
	Timeout pulumi.IntPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

// This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
func (r *Provider) TerraformConfig(ctx *pulumi.Context) (ProviderTerraformConfigResultOutput, error) {
	out, err := ctx.Call("pulumi:providers:cloudngfwaws/terraformConfig", nil, ProviderTerraformConfigResultOutput{}, r)
	if err != nil {
		return ProviderTerraformConfigResultOutput{}, err
	}
	return out.(ProviderTerraformConfigResultOutput), nil
}

type ProviderTerraformConfigResult struct {
	Result map[string]interface{} `pulumi:"result"`
}

type ProviderTerraformConfigResultOutput struct{ *pulumi.OutputState }

func (ProviderTerraformConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderTerraformConfigResult)(nil)).Elem()
}

func (o ProviderTerraformConfigResultOutput) Result() pulumi.MapOutput {
	return o.ApplyT(func(v ProviderTerraformConfigResult) map[string]interface{} { return v.Result }).(pulumi.MapOutput)
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// (Used for the initial `sts assume role`) AWS access key. Environment variable: `CLOUDNGFWAWS_ACCESS_KEY`. JSON conf file
// variable: `access-key`.
func (o ProviderOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// The ARN allowing account admin permissions. Environment variable: `CLOUDNGFWAWS_ACCT_ADMIN_ARN`. JSON conf file
// variable: `account-admin-arn`.
func (o ProviderOutput) AccountAdminArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AccountAdminArn }).(pulumi.StringPtrOutput)
}

// The ARN allowing firewall, rulestack, and global rulestack admin permissions. Global rulestack admin permissions can be
// enabled only if the AWS account is onboarded by AWS Firewall Manager. Use 'lfa_arn' and 'lra_arn' if you want to enable
// only firewall and rulestack admin permissions. Environment variable: `CLOUDNGFWAWS_ARN`. JSON conf file variable: `arn`.
func (o ProviderOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Arn }).(pulumi.StringPtrOutput)
}

// The ARN allowing global rulestack admin permissions. Global rulestack admin permissions can be enabled only if the AWS
// account is onboarded by AWS Firewall Manager. 'gra_arn' is preferentially used over the `arn` param if both are
// specified. Environment variable: `CLOUDNGFWAWS_GRA_ARN`. JSON conf file variable: `gra-arn`.
func (o ProviderOutput) GraArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.GraArn }).(pulumi.StringPtrOutput)
}

// The hostname of the API (default: `api.us-east-1.aws.cloudngfw.paloaltonetworks.com`). Environment variable:
// `CLOUDNGFWAWS_HOST`. JSON conf file variable: `host`.
func (o ProviderOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Host }).(pulumi.StringPtrOutput)
}

// Retrieve provider configuration from this JSON file.
func (o ProviderOutput) JsonConfigFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.JsonConfigFile }).(pulumi.StringPtrOutput)
}

// The ARN allowing firewall admin permissions. This is preferentially used over the `arn` param if both are specified.
// Environment variable: `CLOUDNGFWAWS_LFA_ARN`. JSON conf file variable: `lfa-arn`.
func (o ProviderOutput) LfaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.LfaArn }).(pulumi.StringPtrOutput)
}

// The ARN allowing rulestack admin permissions. This is preferentially used over the `arn` param if both are specified.
// Environment variable: `CLOUDNGFWAWS_LRA_ARN`. JSON conf file variable: `lra-arn`.
func (o ProviderOutput) LraArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.LraArn }).(pulumi.StringPtrOutput)
}

// AWS management plane region. Environment variable: `CLOUDNGFWAWS_MP_REGION`. JSON conf file variable: `mpRegion`.
func (o ProviderOutput) MpRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MpRegion }).(pulumi.StringPtrOutput)
}

// AWS management plane MP region host Environment variable: `CLOUDNGFWAWS_MP_REGION_HOST`. JSON conf file variable:
// `mpRegionHost`.
func (o ProviderOutput) MpRegionHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MpRegionHost }).(pulumi.StringPtrOutput)
}

// (Used for the initial `sts assume role`) AWS PROFILE. Environment variable: `CLOUDNGFWAWS_PROFILE`. JSON conf file
// variable: `profile`.
func (o ProviderOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Profile }).(pulumi.StringPtrOutput)
}

// The protocol (defaults to `https`). Environment variable: `CLOUDNGFWAWS_PROTOCOL`. JSON conf file variable: `protocol`.
// Valid values are `https` or `http`.
func (o ProviderOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// AWS region. Environment variable: `CLOUDNGFWAWS_REGION`. JSON conf file variable: `region`.
func (o ProviderOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// (Used for the initial `sts assume role`) AWS secret key. Environment variable: `CLOUDNGFWAWS_SECRET_KEY`. JSON conf file
// variable: `secret-key`.
func (o ProviderOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
	pulumi.RegisterOutputType(ProviderTerraformConfigResultOutput{})
}
