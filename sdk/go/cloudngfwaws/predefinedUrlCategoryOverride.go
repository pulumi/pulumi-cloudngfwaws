// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for predefined URL category override management.
//
// ## Admin Permission Type
//
// * `Rulestack` (for `scope="Local"`)
// * `Global Rulestack` (for `scope="Global"`)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			r, err := cloudngfwaws.NewRulestack(ctx, "r", &cloudngfwaws.RulestackArgs{
//				Name:        pulumi.String("terraform-rulestack"),
//				Scope:       pulumi.String("Local"),
//				AccountId:   pulumi.String("123456789"),
//				Description: pulumi.String("Made by Pulumi"),
//				ProfileConfig: &cloudngfwaws.RulestackProfileConfigArgs{
//					AntiSpyware: pulumi.String("BestPractice"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloudngfwaws.NewPredefinedUrlCategoryOverride(ctx, "example", &cloudngfwaws.PredefinedUrlCategoryOverrideArgs{
//				Rulestack: r.Name,
//				Name:      pulumi.String("foobar"),
//				Action:    pulumi.String("block"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// import name is <rulestack>:<predefined_url_category_override_name>
//
// ```sh
// $ pulumi import cloudngfwaws:index/predefinedUrlCategoryOverride:PredefinedUrlCategoryOverride example terraform-rulestack:foobar
// ```
type PredefinedUrlCategoryOverride struct {
	pulumi.CustomResourceState

	// The action to take. Valid values are `none`, `allow`, `alert`, or `block`. Defaults to `none`.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// The audit comment.
	AuditComment pulumi.StringPtrOutput `pulumi:"auditComment"`
	// The name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The rulestack.
	Rulestack pulumi.StringOutput `pulumi:"rulestack"`
	// Update token.
	UpdateToken pulumi.StringOutput `pulumi:"updateToken"`
}

// NewPredefinedUrlCategoryOverride registers a new resource with the given unique name, arguments, and options.
func NewPredefinedUrlCategoryOverride(ctx *pulumi.Context,
	name string, args *PredefinedUrlCategoryOverrideArgs, opts ...pulumi.ResourceOption) (*PredefinedUrlCategoryOverride, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Rulestack == nil {
		return nil, errors.New("invalid value for required argument 'Rulestack'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PredefinedUrlCategoryOverride
	err := ctx.RegisterResource("cloudngfwaws:index/predefinedUrlCategoryOverride:PredefinedUrlCategoryOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPredefinedUrlCategoryOverride gets an existing PredefinedUrlCategoryOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPredefinedUrlCategoryOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PredefinedUrlCategoryOverrideState, opts ...pulumi.ResourceOption) (*PredefinedUrlCategoryOverride, error) {
	var resource PredefinedUrlCategoryOverride
	err := ctx.ReadResource("cloudngfwaws:index/predefinedUrlCategoryOverride:PredefinedUrlCategoryOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PredefinedUrlCategoryOverride resources.
type predefinedUrlCategoryOverrideState struct {
	// The action to take. Valid values are `none`, `allow`, `alert`, or `block`. Defaults to `none`.
	Action *string `pulumi:"action"`
	// The audit comment.
	AuditComment *string `pulumi:"auditComment"`
	// The name.
	Name *string `pulumi:"name"`
	// The rulestack.
	Rulestack *string `pulumi:"rulestack"`
	// Update token.
	UpdateToken *string `pulumi:"updateToken"`
}

type PredefinedUrlCategoryOverrideState struct {
	// The action to take. Valid values are `none`, `allow`, `alert`, or `block`. Defaults to `none`.
	Action pulumi.StringPtrInput
	// The audit comment.
	AuditComment pulumi.StringPtrInput
	// The name.
	Name pulumi.StringPtrInput
	// The rulestack.
	Rulestack pulumi.StringPtrInput
	// Update token.
	UpdateToken pulumi.StringPtrInput
}

func (PredefinedUrlCategoryOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*predefinedUrlCategoryOverrideState)(nil)).Elem()
}

type predefinedUrlCategoryOverrideArgs struct {
	// The action to take. Valid values are `none`, `allow`, `alert`, or `block`. Defaults to `none`.
	Action *string `pulumi:"action"`
	// The audit comment.
	AuditComment *string `pulumi:"auditComment"`
	// The name.
	Name *string `pulumi:"name"`
	// The rulestack.
	Rulestack string `pulumi:"rulestack"`
}

// The set of arguments for constructing a PredefinedUrlCategoryOverride resource.
type PredefinedUrlCategoryOverrideArgs struct {
	// The action to take. Valid values are `none`, `allow`, `alert`, or `block`. Defaults to `none`.
	Action pulumi.StringPtrInput
	// The audit comment.
	AuditComment pulumi.StringPtrInput
	// The name.
	Name pulumi.StringPtrInput
	// The rulestack.
	Rulestack pulumi.StringInput
}

func (PredefinedUrlCategoryOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*predefinedUrlCategoryOverrideArgs)(nil)).Elem()
}

type PredefinedUrlCategoryOverrideInput interface {
	pulumi.Input

	ToPredefinedUrlCategoryOverrideOutput() PredefinedUrlCategoryOverrideOutput
	ToPredefinedUrlCategoryOverrideOutputWithContext(ctx context.Context) PredefinedUrlCategoryOverrideOutput
}

func (*PredefinedUrlCategoryOverride) ElementType() reflect.Type {
	return reflect.TypeOf((**PredefinedUrlCategoryOverride)(nil)).Elem()
}

func (i *PredefinedUrlCategoryOverride) ToPredefinedUrlCategoryOverrideOutput() PredefinedUrlCategoryOverrideOutput {
	return i.ToPredefinedUrlCategoryOverrideOutputWithContext(context.Background())
}

func (i *PredefinedUrlCategoryOverride) ToPredefinedUrlCategoryOverrideOutputWithContext(ctx context.Context) PredefinedUrlCategoryOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PredefinedUrlCategoryOverrideOutput)
}

// PredefinedUrlCategoryOverrideArrayInput is an input type that accepts PredefinedUrlCategoryOverrideArray and PredefinedUrlCategoryOverrideArrayOutput values.
// You can construct a concrete instance of `PredefinedUrlCategoryOverrideArrayInput` via:
//
//	PredefinedUrlCategoryOverrideArray{ PredefinedUrlCategoryOverrideArgs{...} }
type PredefinedUrlCategoryOverrideArrayInput interface {
	pulumi.Input

	ToPredefinedUrlCategoryOverrideArrayOutput() PredefinedUrlCategoryOverrideArrayOutput
	ToPredefinedUrlCategoryOverrideArrayOutputWithContext(context.Context) PredefinedUrlCategoryOverrideArrayOutput
}

type PredefinedUrlCategoryOverrideArray []PredefinedUrlCategoryOverrideInput

func (PredefinedUrlCategoryOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PredefinedUrlCategoryOverride)(nil)).Elem()
}

func (i PredefinedUrlCategoryOverrideArray) ToPredefinedUrlCategoryOverrideArrayOutput() PredefinedUrlCategoryOverrideArrayOutput {
	return i.ToPredefinedUrlCategoryOverrideArrayOutputWithContext(context.Background())
}

func (i PredefinedUrlCategoryOverrideArray) ToPredefinedUrlCategoryOverrideArrayOutputWithContext(ctx context.Context) PredefinedUrlCategoryOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PredefinedUrlCategoryOverrideArrayOutput)
}

// PredefinedUrlCategoryOverrideMapInput is an input type that accepts PredefinedUrlCategoryOverrideMap and PredefinedUrlCategoryOverrideMapOutput values.
// You can construct a concrete instance of `PredefinedUrlCategoryOverrideMapInput` via:
//
//	PredefinedUrlCategoryOverrideMap{ "key": PredefinedUrlCategoryOverrideArgs{...} }
type PredefinedUrlCategoryOverrideMapInput interface {
	pulumi.Input

	ToPredefinedUrlCategoryOverrideMapOutput() PredefinedUrlCategoryOverrideMapOutput
	ToPredefinedUrlCategoryOverrideMapOutputWithContext(context.Context) PredefinedUrlCategoryOverrideMapOutput
}

type PredefinedUrlCategoryOverrideMap map[string]PredefinedUrlCategoryOverrideInput

func (PredefinedUrlCategoryOverrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PredefinedUrlCategoryOverride)(nil)).Elem()
}

func (i PredefinedUrlCategoryOverrideMap) ToPredefinedUrlCategoryOverrideMapOutput() PredefinedUrlCategoryOverrideMapOutput {
	return i.ToPredefinedUrlCategoryOverrideMapOutputWithContext(context.Background())
}

func (i PredefinedUrlCategoryOverrideMap) ToPredefinedUrlCategoryOverrideMapOutputWithContext(ctx context.Context) PredefinedUrlCategoryOverrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PredefinedUrlCategoryOverrideMapOutput)
}

type PredefinedUrlCategoryOverrideOutput struct{ *pulumi.OutputState }

func (PredefinedUrlCategoryOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PredefinedUrlCategoryOverride)(nil)).Elem()
}

func (o PredefinedUrlCategoryOverrideOutput) ToPredefinedUrlCategoryOverrideOutput() PredefinedUrlCategoryOverrideOutput {
	return o
}

func (o PredefinedUrlCategoryOverrideOutput) ToPredefinedUrlCategoryOverrideOutputWithContext(ctx context.Context) PredefinedUrlCategoryOverrideOutput {
	return o
}

// The action to take. Valid values are `none`, `allow`, `alert`, or `block`. Defaults to `none`.
func (o PredefinedUrlCategoryOverrideOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PredefinedUrlCategoryOverride) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// The audit comment.
func (o PredefinedUrlCategoryOverrideOutput) AuditComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PredefinedUrlCategoryOverride) pulumi.StringPtrOutput { return v.AuditComment }).(pulumi.StringPtrOutput)
}

// The name.
func (o PredefinedUrlCategoryOverrideOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PredefinedUrlCategoryOverride) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The rulestack.
func (o PredefinedUrlCategoryOverrideOutput) Rulestack() pulumi.StringOutput {
	return o.ApplyT(func(v *PredefinedUrlCategoryOverride) pulumi.StringOutput { return v.Rulestack }).(pulumi.StringOutput)
}

// Update token.
func (o PredefinedUrlCategoryOverrideOutput) UpdateToken() pulumi.StringOutput {
	return o.ApplyT(func(v *PredefinedUrlCategoryOverride) pulumi.StringOutput { return v.UpdateToken }).(pulumi.StringOutput)
}

type PredefinedUrlCategoryOverrideArrayOutput struct{ *pulumi.OutputState }

func (PredefinedUrlCategoryOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PredefinedUrlCategoryOverride)(nil)).Elem()
}

func (o PredefinedUrlCategoryOverrideArrayOutput) ToPredefinedUrlCategoryOverrideArrayOutput() PredefinedUrlCategoryOverrideArrayOutput {
	return o
}

func (o PredefinedUrlCategoryOverrideArrayOutput) ToPredefinedUrlCategoryOverrideArrayOutputWithContext(ctx context.Context) PredefinedUrlCategoryOverrideArrayOutput {
	return o
}

func (o PredefinedUrlCategoryOverrideArrayOutput) Index(i pulumi.IntInput) PredefinedUrlCategoryOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PredefinedUrlCategoryOverride {
		return vs[0].([]*PredefinedUrlCategoryOverride)[vs[1].(int)]
	}).(PredefinedUrlCategoryOverrideOutput)
}

type PredefinedUrlCategoryOverrideMapOutput struct{ *pulumi.OutputState }

func (PredefinedUrlCategoryOverrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PredefinedUrlCategoryOverride)(nil)).Elem()
}

func (o PredefinedUrlCategoryOverrideMapOutput) ToPredefinedUrlCategoryOverrideMapOutput() PredefinedUrlCategoryOverrideMapOutput {
	return o
}

func (o PredefinedUrlCategoryOverrideMapOutput) ToPredefinedUrlCategoryOverrideMapOutputWithContext(ctx context.Context) PredefinedUrlCategoryOverrideMapOutput {
	return o
}

func (o PredefinedUrlCategoryOverrideMapOutput) MapIndex(k pulumi.StringInput) PredefinedUrlCategoryOverrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PredefinedUrlCategoryOverride {
		return vs[0].(map[string]*PredefinedUrlCategoryOverride)[vs[1].(string)]
	}).(PredefinedUrlCategoryOverrideOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PredefinedUrlCategoryOverrideInput)(nil)).Elem(), &PredefinedUrlCategoryOverride{})
	pulumi.RegisterInputType(reflect.TypeOf((*PredefinedUrlCategoryOverrideArrayInput)(nil)).Elem(), PredefinedUrlCategoryOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PredefinedUrlCategoryOverrideMapInput)(nil)).Elem(), PredefinedUrlCategoryOverrideMap{})
	pulumi.RegisterOutputType(PredefinedUrlCategoryOverrideOutput{})
	pulumi.RegisterOutputType(PredefinedUrlCategoryOverrideArrayOutput{})
	pulumi.RegisterOutputType(PredefinedUrlCategoryOverrideMapOutput{})
}
