// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving rulestack information.
//
// ## Admin Permission Type
//
// * `Rulestack` (for `scope="Local"`)
// * `Global Rulestack` (for `scope="Global"`)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudngfwaws.LookupRulestack(ctx, &cloudngfwaws.LookupRulestackArgs{
//				Name: "my-rulestack-name",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRulestack(ctx *pulumi.Context, args *LookupRulestackArgs, opts ...pulumi.InvokeOption) (*LookupRulestackResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRulestackResult
	err := ctx.Invoke("cloudngfwaws:index/getRulestack:getRulestack", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRulestack.
type LookupRulestackArgs struct {
	// Retrieve either the candidate or running config. Valid values are `candidate` or `running`. Defaults to `candidate`.
	ConfigType *string `pulumi:"configType"`
	// The name.
	Name string `pulumi:"name"`
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope *string `pulumi:"scope"`
}

// A collection of values returned by getRulestack.
type LookupRulestackResult struct {
	// Account group.
	AccountGroup string `pulumi:"accountGroup"`
	// The account ID.
	AccountId string `pulumi:"accountId"`
	// Retrieve either the candidate or running config. Valid values are `candidate` or `running`. Defaults to `candidate`.
	ConfigType *string `pulumi:"configType"`
	// The description.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Lookup x forwarded for.
	LookupXForwardedFor string `pulumi:"lookupXForwardedFor"`
	// Minimum App-ID version number.
	MinimumAppIdVersion string `pulumi:"minimumAppIdVersion"`
	// The name.
	Name           string                      `pulumi:"name"`
	ProfileConfigs []GetRulestackProfileConfig `pulumi:"profileConfigs"`
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope *string `pulumi:"scope"`
	// The rulestack state.
	State string `pulumi:"state"`
	// The tags.
	Tags map[string]string `pulumi:"tags"`
}

func LookupRulestackOutput(ctx *pulumi.Context, args LookupRulestackOutputArgs, opts ...pulumi.InvokeOption) LookupRulestackResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRulestackResultOutput, error) {
			args := v.(LookupRulestackArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudngfwaws:index/getRulestack:getRulestack", args, LookupRulestackResultOutput{}, options).(LookupRulestackResultOutput), nil
		}).(LookupRulestackResultOutput)
}

// A collection of arguments for invoking getRulestack.
type LookupRulestackOutputArgs struct {
	// Retrieve either the candidate or running config. Valid values are `candidate` or `running`. Defaults to `candidate`.
	ConfigType pulumi.StringPtrInput `pulumi:"configType"`
	// The name.
	Name pulumi.StringInput `pulumi:"name"`
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (LookupRulestackOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRulestackArgs)(nil)).Elem()
}

// A collection of values returned by getRulestack.
type LookupRulestackResultOutput struct{ *pulumi.OutputState }

func (LookupRulestackResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRulestackResult)(nil)).Elem()
}

func (o LookupRulestackResultOutput) ToLookupRulestackResultOutput() LookupRulestackResultOutput {
	return o
}

func (o LookupRulestackResultOutput) ToLookupRulestackResultOutputWithContext(ctx context.Context) LookupRulestackResultOutput {
	return o
}

// Account group.
func (o LookupRulestackResultOutput) AccountGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulestackResult) string { return v.AccountGroup }).(pulumi.StringOutput)
}

// The account ID.
func (o LookupRulestackResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulestackResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Retrieve either the candidate or running config. Valid values are `candidate` or `running`. Defaults to `candidate`.
func (o LookupRulestackResultOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRulestackResult) *string { return v.ConfigType }).(pulumi.StringPtrOutput)
}

// The description.
func (o LookupRulestackResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulestackResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRulestackResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulestackResult) string { return v.Id }).(pulumi.StringOutput)
}

// Lookup x forwarded for.
func (o LookupRulestackResultOutput) LookupXForwardedFor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulestackResult) string { return v.LookupXForwardedFor }).(pulumi.StringOutput)
}

// Minimum App-ID version number.
func (o LookupRulestackResultOutput) MinimumAppIdVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulestackResult) string { return v.MinimumAppIdVersion }).(pulumi.StringOutput)
}

// The name.
func (o LookupRulestackResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulestackResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRulestackResultOutput) ProfileConfigs() GetRulestackProfileConfigArrayOutput {
	return o.ApplyT(func(v LookupRulestackResult) []GetRulestackProfileConfig { return v.ProfileConfigs }).(GetRulestackProfileConfigArrayOutput)
}

// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
func (o LookupRulestackResultOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRulestackResult) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The rulestack state.
func (o LookupRulestackResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRulestackResult) string { return v.State }).(pulumi.StringOutput)
}

// The tags.
func (o LookupRulestackResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRulestackResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRulestackResultOutput{})
}
