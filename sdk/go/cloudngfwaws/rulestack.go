// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for rulestack manipulation.
//
// ## Admin Permission Type
//
// * `Rulestack` (for `scope="Local"`)
// * `Global Rulestack` (for `scope="Global"`)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudngfwaws.NewRulestack(ctx, "example", &cloudngfwaws.RulestackArgs{
//				Name:        pulumi.String("terraform-rulestack"),
//				Scope:       pulumi.String("Local"),
//				AccountId:   pulumi.String("123456789"),
//				Description: pulumi.String("Made by Pulumi"),
//				ProfileConfig: &cloudngfwaws.RulestackProfileConfigArgs{
//					AntiSpyware: pulumi.String("BestPractice"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// import name is <scope>:<rulestack>
//
// ```sh
// $ pulumi import cloudngfwaws:index/rulestack:Rulestack example Local:terraform-rulestack
// ```
type Rulestack struct {
	pulumi.CustomResourceState

	// Account group.
	AccountGroup pulumi.StringPtrOutput `pulumi:"accountGroup"`
	// The account ID.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// The description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Lookup x forwarded for.
	LookupXForwardedFor pulumi.StringOutput `pulumi:"lookupXForwardedFor"`
	// Minimum App-ID version number.
	MinimumAppIdVersion pulumi.StringOutput `pulumi:"minimumAppIdVersion"`
	// The name.
	Name          pulumi.StringOutput          `pulumi:"name"`
	ProfileConfig RulestackProfileConfigOutput `pulumi:"profileConfig"`
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// The rulestack state.
	State pulumi.StringOutput `pulumi:"state"`
	// The tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewRulestack registers a new resource with the given unique name, arguments, and options.
func NewRulestack(ctx *pulumi.Context,
	name string, args *RulestackArgs, opts ...pulumi.ResourceOption) (*Rulestack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProfileConfig == nil {
		return nil, errors.New("invalid value for required argument 'ProfileConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Rulestack
	err := ctx.RegisterResource("cloudngfwaws:index/rulestack:Rulestack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRulestack gets an existing Rulestack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRulestack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RulestackState, opts ...pulumi.ResourceOption) (*Rulestack, error) {
	var resource Rulestack
	err := ctx.ReadResource("cloudngfwaws:index/rulestack:Rulestack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Rulestack resources.
type rulestackState struct {
	// Account group.
	AccountGroup *string `pulumi:"accountGroup"`
	// The account ID.
	AccountId *string `pulumi:"accountId"`
	// The description.
	Description *string `pulumi:"description"`
	// Lookup x forwarded for.
	LookupXForwardedFor *string `pulumi:"lookupXForwardedFor"`
	// Minimum App-ID version number.
	MinimumAppIdVersion *string `pulumi:"minimumAppIdVersion"`
	// The name.
	Name          *string                 `pulumi:"name"`
	ProfileConfig *RulestackProfileConfig `pulumi:"profileConfig"`
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope *string `pulumi:"scope"`
	// The rulestack state.
	State *string `pulumi:"state"`
	// The tags.
	Tags map[string]string `pulumi:"tags"`
}

type RulestackState struct {
	// Account group.
	AccountGroup pulumi.StringPtrInput
	// The account ID.
	AccountId pulumi.StringPtrInput
	// The description.
	Description pulumi.StringPtrInput
	// Lookup x forwarded for.
	LookupXForwardedFor pulumi.StringPtrInput
	// Minimum App-ID version number.
	MinimumAppIdVersion pulumi.StringPtrInput
	// The name.
	Name          pulumi.StringPtrInput
	ProfileConfig RulestackProfileConfigPtrInput
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope pulumi.StringPtrInput
	// The rulestack state.
	State pulumi.StringPtrInput
	// The tags.
	Tags pulumi.StringMapInput
}

func (RulestackState) ElementType() reflect.Type {
	return reflect.TypeOf((*rulestackState)(nil)).Elem()
}

type rulestackArgs struct {
	// Account group.
	AccountGroup *string `pulumi:"accountGroup"`
	// The account ID.
	AccountId *string `pulumi:"accountId"`
	// The description.
	Description *string `pulumi:"description"`
	// Lookup x forwarded for.
	LookupXForwardedFor *string `pulumi:"lookupXForwardedFor"`
	// Minimum App-ID version number.
	MinimumAppIdVersion *string `pulumi:"minimumAppIdVersion"`
	// The name.
	Name          *string                `pulumi:"name"`
	ProfileConfig RulestackProfileConfig `pulumi:"profileConfig"`
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope *string `pulumi:"scope"`
	// The tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Rulestack resource.
type RulestackArgs struct {
	// Account group.
	AccountGroup pulumi.StringPtrInput
	// The account ID.
	AccountId pulumi.StringPtrInput
	// The description.
	Description pulumi.StringPtrInput
	// Lookup x forwarded for.
	LookupXForwardedFor pulumi.StringPtrInput
	// Minimum App-ID version number.
	MinimumAppIdVersion pulumi.StringPtrInput
	// The name.
	Name          pulumi.StringPtrInput
	ProfileConfig RulestackProfileConfigInput
	// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
	Scope pulumi.StringPtrInput
	// The tags.
	Tags pulumi.StringMapInput
}

func (RulestackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rulestackArgs)(nil)).Elem()
}

type RulestackInput interface {
	pulumi.Input

	ToRulestackOutput() RulestackOutput
	ToRulestackOutputWithContext(ctx context.Context) RulestackOutput
}

func (*Rulestack) ElementType() reflect.Type {
	return reflect.TypeOf((**Rulestack)(nil)).Elem()
}

func (i *Rulestack) ToRulestackOutput() RulestackOutput {
	return i.ToRulestackOutputWithContext(context.Background())
}

func (i *Rulestack) ToRulestackOutputWithContext(ctx context.Context) RulestackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulestackOutput)
}

// RulestackArrayInput is an input type that accepts RulestackArray and RulestackArrayOutput values.
// You can construct a concrete instance of `RulestackArrayInput` via:
//
//	RulestackArray{ RulestackArgs{...} }
type RulestackArrayInput interface {
	pulumi.Input

	ToRulestackArrayOutput() RulestackArrayOutput
	ToRulestackArrayOutputWithContext(context.Context) RulestackArrayOutput
}

type RulestackArray []RulestackInput

func (RulestackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Rulestack)(nil)).Elem()
}

func (i RulestackArray) ToRulestackArrayOutput() RulestackArrayOutput {
	return i.ToRulestackArrayOutputWithContext(context.Background())
}

func (i RulestackArray) ToRulestackArrayOutputWithContext(ctx context.Context) RulestackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulestackArrayOutput)
}

// RulestackMapInput is an input type that accepts RulestackMap and RulestackMapOutput values.
// You can construct a concrete instance of `RulestackMapInput` via:
//
//	RulestackMap{ "key": RulestackArgs{...} }
type RulestackMapInput interface {
	pulumi.Input

	ToRulestackMapOutput() RulestackMapOutput
	ToRulestackMapOutputWithContext(context.Context) RulestackMapOutput
}

type RulestackMap map[string]RulestackInput

func (RulestackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Rulestack)(nil)).Elem()
}

func (i RulestackMap) ToRulestackMapOutput() RulestackMapOutput {
	return i.ToRulestackMapOutputWithContext(context.Background())
}

func (i RulestackMap) ToRulestackMapOutputWithContext(ctx context.Context) RulestackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulestackMapOutput)
}

type RulestackOutput struct{ *pulumi.OutputState }

func (RulestackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Rulestack)(nil)).Elem()
}

func (o RulestackOutput) ToRulestackOutput() RulestackOutput {
	return o
}

func (o RulestackOutput) ToRulestackOutputWithContext(ctx context.Context) RulestackOutput {
	return o
}

// Account group.
func (o RulestackOutput) AccountGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rulestack) pulumi.StringPtrOutput { return v.AccountGroup }).(pulumi.StringPtrOutput)
}

// The account ID.
func (o RulestackOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rulestack) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The description.
func (o RulestackOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rulestack) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Lookup x forwarded for.
func (o RulestackOutput) LookupXForwardedFor() pulumi.StringOutput {
	return o.ApplyT(func(v *Rulestack) pulumi.StringOutput { return v.LookupXForwardedFor }).(pulumi.StringOutput)
}

// Minimum App-ID version number.
func (o RulestackOutput) MinimumAppIdVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Rulestack) pulumi.StringOutput { return v.MinimumAppIdVersion }).(pulumi.StringOutput)
}

// The name.
func (o RulestackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Rulestack) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RulestackOutput) ProfileConfig() RulestackProfileConfigOutput {
	return o.ApplyT(func(v *Rulestack) RulestackProfileConfigOutput { return v.ProfileConfig }).(RulestackProfileConfigOutput)
}

// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
func (o RulestackOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Rulestack) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

// The rulestack state.
func (o RulestackOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Rulestack) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The tags.
func (o RulestackOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Rulestack) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type RulestackArrayOutput struct{ *pulumi.OutputState }

func (RulestackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Rulestack)(nil)).Elem()
}

func (o RulestackArrayOutput) ToRulestackArrayOutput() RulestackArrayOutput {
	return o
}

func (o RulestackArrayOutput) ToRulestackArrayOutputWithContext(ctx context.Context) RulestackArrayOutput {
	return o
}

func (o RulestackArrayOutput) Index(i pulumi.IntInput) RulestackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Rulestack {
		return vs[0].([]*Rulestack)[vs[1].(int)]
	}).(RulestackOutput)
}

type RulestackMapOutput struct{ *pulumi.OutputState }

func (RulestackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Rulestack)(nil)).Elem()
}

func (o RulestackMapOutput) ToRulestackMapOutput() RulestackMapOutput {
	return o
}

func (o RulestackMapOutput) ToRulestackMapOutputWithContext(ctx context.Context) RulestackMapOutput {
	return o
}

func (o RulestackMapOutput) MapIndex(k pulumi.StringInput) RulestackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Rulestack {
		return vs[0].(map[string]*Rulestack)[vs[1].(string)]
	}).(RulestackOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RulestackInput)(nil)).Elem(), &Rulestack{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulestackArrayInput)(nil)).Elem(), RulestackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulestackMapInput)(nil)).Elem(), RulestackMap{})
	pulumi.RegisterOutputType(RulestackOutput{})
	pulumi.RegisterOutputType(RulestackArrayOutput{})
	pulumi.RegisterOutputType(RulestackMapOutput{})
}
