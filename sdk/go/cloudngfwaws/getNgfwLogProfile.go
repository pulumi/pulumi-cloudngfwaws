// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudngfwaws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving log profile information.
//
// ## Admin Permission Type
//
// * `Firewall`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudngfwaws/sdk/go/cloudngfwaws"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudngfwaws.LookupNgfwLogProfile(ctx, &cloudngfwaws.LookupNgfwLogProfileArgs{
//				Ngfw:      "example-instance",
//				AccountId: "123456789",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNgfwLogProfile(ctx *pulumi.Context, args *LookupNgfwLogProfileArgs, opts ...pulumi.InvokeOption) (*LookupNgfwLogProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNgfwLogProfileResult
	err := ctx.Invoke("cloudngfwaws:index/getNgfwLogProfile:getNgfwLogProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNgfwLogProfile.
type LookupNgfwLogProfileArgs struct {
	// The unique ID of the account.
	AccountId string `pulumi:"accountId"`
	// The name of the NGFW.
	Ngfw string `pulumi:"ngfw"`
}

// A collection of values returned by getNgfwLogProfile.
type LookupNgfwLogProfileResult struct {
	// The unique ID of the account.
	AccountId string `pulumi:"accountId"`
	// Enable advanced threat logging.
	AdvancedThreatLog bool `pulumi:"advancedThreatLog"`
	// The CloudWatch metric namespace.
	CloudWatchMetricNamespace string `pulumi:"cloudWatchMetricNamespace"`
	// Cloudwatch metric fields.
	CloudwatchMetricFields []string `pulumi:"cloudwatchMetricFields"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of log destinations.
	LogDestinations []GetNgfwLogProfileLogDestination `pulumi:"logDestinations"`
	// The name of the NGFW.
	Ngfw string `pulumi:"ngfw"`
}

func LookupNgfwLogProfileOutput(ctx *pulumi.Context, args LookupNgfwLogProfileOutputArgs, opts ...pulumi.InvokeOption) LookupNgfwLogProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNgfwLogProfileResultOutput, error) {
			args := v.(LookupNgfwLogProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudngfwaws:index/getNgfwLogProfile:getNgfwLogProfile", args, LookupNgfwLogProfileResultOutput{}, options).(LookupNgfwLogProfileResultOutput), nil
		}).(LookupNgfwLogProfileResultOutput)
}

// A collection of arguments for invoking getNgfwLogProfile.
type LookupNgfwLogProfileOutputArgs struct {
	// The unique ID of the account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The name of the NGFW.
	Ngfw pulumi.StringInput `pulumi:"ngfw"`
}

func (LookupNgfwLogProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNgfwLogProfileArgs)(nil)).Elem()
}

// A collection of values returned by getNgfwLogProfile.
type LookupNgfwLogProfileResultOutput struct{ *pulumi.OutputState }

func (LookupNgfwLogProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNgfwLogProfileResult)(nil)).Elem()
}

func (o LookupNgfwLogProfileResultOutput) ToLookupNgfwLogProfileResultOutput() LookupNgfwLogProfileResultOutput {
	return o
}

func (o LookupNgfwLogProfileResultOutput) ToLookupNgfwLogProfileResultOutputWithContext(ctx context.Context) LookupNgfwLogProfileResultOutput {
	return o
}

// The unique ID of the account.
func (o LookupNgfwLogProfileResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNgfwLogProfileResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Enable advanced threat logging.
func (o LookupNgfwLogProfileResultOutput) AdvancedThreatLog() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNgfwLogProfileResult) bool { return v.AdvancedThreatLog }).(pulumi.BoolOutput)
}

// The CloudWatch metric namespace.
func (o LookupNgfwLogProfileResultOutput) CloudWatchMetricNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNgfwLogProfileResult) string { return v.CloudWatchMetricNamespace }).(pulumi.StringOutput)
}

// Cloudwatch metric fields.
func (o LookupNgfwLogProfileResultOutput) CloudwatchMetricFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNgfwLogProfileResult) []string { return v.CloudwatchMetricFields }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNgfwLogProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNgfwLogProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of log destinations.
func (o LookupNgfwLogProfileResultOutput) LogDestinations() GetNgfwLogProfileLogDestinationArrayOutput {
	return o.ApplyT(func(v LookupNgfwLogProfileResult) []GetNgfwLogProfileLogDestination { return v.LogDestinations }).(GetNgfwLogProfileLogDestinationArrayOutput)
}

// The name of the NGFW.
func (o LookupNgfwLogProfileResultOutput) Ngfw() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNgfwLogProfileResult) string { return v.Ngfw }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNgfwLogProfileResultOutput{})
}
