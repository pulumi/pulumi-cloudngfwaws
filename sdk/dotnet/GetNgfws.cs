// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudNgfwAws
{
    public static class GetNgfws
    {
        /// <summary>
        /// Data source get a list of NGFWs.
        /// 
        /// 
        /// ## Admin Permission Type
        /// 
        /// * `Firewall`
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudNgfwAws = Pulumi.CloudNgfwAws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = CloudNgfwAws.GetNgfws.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNgfwsResult> InvokeAsync(GetNgfwsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNgfwsResult>("cloudngfwaws:index/getNgfws:getNgfws", args ?? new GetNgfwsArgs(), options.WithDefaults());

        /// <summary>
        /// Data source get a list of NGFWs.
        /// 
        /// 
        /// ## Admin Permission Type
        /// 
        /// * `Firewall`
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudNgfwAws = Pulumi.CloudNgfwAws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = CloudNgfwAws.GetNgfws.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNgfwsResult> Invoke(GetNgfwsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNgfwsResult>("cloudngfwaws:index/getNgfws:getNgfws", args ?? new GetNgfwsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source get a list of NGFWs.
        /// 
        /// 
        /// ## Admin Permission Type
        /// 
        /// * `Firewall`
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudNgfwAws = Pulumi.CloudNgfwAws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = CloudNgfwAws.GetNgfws.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNgfwsResult> Invoke(GetNgfwsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNgfwsResult>("cloudngfwaws:index/getNgfws:getNgfws", args ?? new GetNgfwsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNgfwsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The rulestack to filter on.
        /// </summary>
        [Input("rulestack")]
        public string? Rulestack { get; set; }

        [Input("vpcIds")]
        private List<string>? _vpcIds;

        /// <summary>
        /// List of vpc ids to filter on.
        /// </summary>
        public List<string> VpcIds
        {
            get => _vpcIds ?? (_vpcIds = new List<string>());
            set => _vpcIds = value;
        }

        public GetNgfwsArgs()
        {
        }
        public static new GetNgfwsArgs Empty => new GetNgfwsArgs();
    }

    public sealed class GetNgfwsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The rulestack to filter on.
        /// </summary>
        [Input("rulestack")]
        public Input<string>? Rulestack { get; set; }

        [Input("vpcIds")]
        private InputList<string>? _vpcIds;

        /// <summary>
        /// List of vpc ids to filter on.
        /// </summary>
        public InputList<string> VpcIds
        {
            get => _vpcIds ?? (_vpcIds = new InputList<string>());
            set => _vpcIds = value;
        }

        public GetNgfwsInvokeArgs()
        {
        }
        public static new GetNgfwsInvokeArgs Empty => new GetNgfwsInvokeArgs();
    }


    [OutputType]
    public sealed class GetNgfwsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of NGFWs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNgfwsInstanceResult> Instances;
        /// <summary>
        /// The rulestack to filter on.
        /// </summary>
        public readonly string? Rulestack;
        /// <summary>
        /// List of vpc ids to filter on.
        /// </summary>
        public readonly ImmutableArray<string> VpcIds;

        [OutputConstructor]
        private GetNgfwsResult(
            string id,

            ImmutableArray<Outputs.GetNgfwsInstanceResult> instances,

            string? rulestack,

            ImmutableArray<string> vpcIds)
        {
            Id = id;
            Instances = instances;
            Rulestack = rulestack;
            VpcIds = vpcIds;
        }
    }
}
