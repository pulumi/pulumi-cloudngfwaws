// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudNgfwAws.Outputs
{

    [OutputType]
    public sealed class GetNgfwEndpointResult
    {
        /// <summary>
        /// The account id.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Enable egress NAT
        /// </summary>
        public readonly bool EgressNatEnabled;
        /// <summary>
        /// Endpoint ID of the security zone
        /// </summary>
        public readonly string EndpointId;
        /// <summary>
        /// The endpoint mode. Valid values are `ServiceManaged` or `CustomerManaged`.
        /// </summary>
        public readonly string Mode;
        public readonly ImmutableArray<Outputs.GetNgfwEndpointPrefixResult> Prefixes;
        /// <summary>
        /// The rejected reason.
        /// </summary>
        public readonly string RejectedReason;
        /// <summary>
        /// The attachment status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The subnet id.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// The vpc id.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The AZ id.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetNgfwEndpointResult(
            string accountId,

            bool egressNatEnabled,

            string endpointId,

            string mode,

            ImmutableArray<Outputs.GetNgfwEndpointPrefixResult> prefixes,

            string rejectedReason,

            string status,

            string subnetId,

            string vpcId,

            string zoneId)
        {
            AccountId = accountId;
            EgressNatEnabled = egressNatEnabled;
            EndpointId = endpointId;
            Mode = mode;
            Prefixes = prefixes;
            RejectedReason = rejectedReason;
            Status = status;
            SubnetId = subnetId;
            VpcId = vpcId;
            ZoneId = zoneId;
        }
    }
}
