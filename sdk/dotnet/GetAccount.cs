// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudNgfwAws
{
    public static class GetAccount
    {
        /// <summary>
        /// Data source for retrieving account information.
        /// 
        /// 
        /// ## Admin Permission Type
        /// 
        /// * `Rulestack` (for `scope="Local"`)
        /// * `Global Rulestack` (for `scope="Global"`)
        /// </summary>
        public static Task<GetAccountResult> InvokeAsync(GetAccountArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountResult>("cloudngfwaws:index/getAccount:getAccount", args ?? new GetAccountArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving account information.
        /// 
        /// 
        /// ## Admin Permission Type
        /// 
        /// * `Rulestack` (for `scope="Local"`)
        /// * `Global Rulestack` (for `scope="Global"`)
        /// </summary>
        public static Output<GetAccountResult> Invoke(GetAccountInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountResult>("cloudngfwaws:index/getAccount:getAccount", args ?? new GetAccountInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving account information.
        /// 
        /// 
        /// ## Admin Permission Type
        /// 
        /// * `Rulestack` (for `scope="Local"`)
        /// * `Global Rulestack` (for `scope="Global"`)
        /// </summary>
        public static Output<GetAccountResult> Invoke(GetAccountInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountResult>("cloudngfwaws:index/getAccount:getAccount", args ?? new GetAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account ID
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// The CFT URL.
        /// </summary>
        [Input("cftUrl")]
        public string? CftUrl { get; set; }

        /// <summary>
        /// The external ID of the account
        /// </summary>
        [Input("externalId")]
        public string? ExternalId { get; set; }

        /// <summary>
        /// The Account onboarding status
        /// </summary>
        [Input("onboardingStatus")]
        public string? OnboardingStatus { get; set; }

        /// <summary>
        /// Origin of account onboarding
        /// </summary>
        [Input("origin")]
        public string? Origin { get; set; }

        /// <summary>
        /// The account ID of cloud NGFW service
        /// </summary>
        [Input("serviceAccountId")]
        public string? ServiceAccountId { get; set; }

        /// <summary>
        /// The SNS topic ARN
        /// </summary>
        [Input("snsTopicArn")]
        public string? SnsTopicArn { get; set; }

        /// <summary>
        /// The trusted account ID
        /// </summary>
        [Input("trustedAccount")]
        public string? TrustedAccount { get; set; }

        public GetAccountArgs()
        {
        }
        public static new GetAccountArgs Empty => new GetAccountArgs();
    }

    public sealed class GetAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account ID
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The CFT URL.
        /// </summary>
        [Input("cftUrl")]
        public Input<string>? CftUrl { get; set; }

        /// <summary>
        /// The external ID of the account
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// The Account onboarding status
        /// </summary>
        [Input("onboardingStatus")]
        public Input<string>? OnboardingStatus { get; set; }

        /// <summary>
        /// Origin of account onboarding
        /// </summary>
        [Input("origin")]
        public Input<string>? Origin { get; set; }

        /// <summary>
        /// The account ID of cloud NGFW service
        /// </summary>
        [Input("serviceAccountId")]
        public Input<string>? ServiceAccountId { get; set; }

        /// <summary>
        /// The SNS topic ARN
        /// </summary>
        [Input("snsTopicArn")]
        public Input<string>? SnsTopicArn { get; set; }

        /// <summary>
        /// The trusted account ID
        /// </summary>
        [Input("trustedAccount")]
        public Input<string>? TrustedAccount { get; set; }

        public GetAccountInvokeArgs()
        {
        }
        public static new GetAccountInvokeArgs Empty => new GetAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountResult
    {
        /// <summary>
        /// The account ID
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The CFT URL.
        /// </summary>
        public readonly string CftUrl;
        /// <summary>
        /// The external ID of the account
        /// </summary>
        public readonly string ExternalId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Account onboarding status
        /// </summary>
        public readonly string OnboardingStatus;
        /// <summary>
        /// Origin of account onboarding
        /// </summary>
        public readonly string Origin;
        /// <summary>
        /// The account ID of cloud NGFW service
        /// </summary>
        public readonly string ServiceAccountId;
        /// <summary>
        /// The SNS topic ARN
        /// </summary>
        public readonly string SnsTopicArn;
        /// <summary>
        /// The trusted account ID
        /// </summary>
        public readonly string TrustedAccount;
        /// <summary>
        /// The update token.
        /// </summary>
        public readonly string UpdateToken;

        [OutputConstructor]
        private GetAccountResult(
            string? accountId,

            string cftUrl,

            string externalId,

            string id,

            string onboardingStatus,

            string origin,

            string serviceAccountId,

            string snsTopicArn,

            string trustedAccount,

            string updateToken)
        {
            AccountId = accountId;
            CftUrl = cftUrl;
            ExternalId = externalId;
            Id = id;
            OnboardingStatus = onboardingStatus;
            Origin = origin;
            ServiceAccountId = serviceAccountId;
            SnsTopicArn = snsTopicArn;
            TrustedAccount = trustedAccount;
            UpdateToken = updateToken;
        }
    }
}
