// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudNgfwAws
{
    /// <summary>
    /// Resource for predefined URL category override management.
    /// 
    /// ## Admin Permission Type
    /// 
    /// * `Rulestack` (for `scope="Local"`)
    /// * `Global Rulestack` (for `scope="Global"`)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using CloudNgfwAws = Pulumi.CloudNgfwAws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var r = new CloudNgfwAws.Rulestack("r", new()
    ///     {
    ///         Name = "terraform-rulestack",
    ///         Scope = "Local",
    ///         AccountId = "123456789",
    ///         Description = "Made by Pulumi",
    ///         ProfileConfig = new CloudNgfwAws.Inputs.RulestackProfileConfigArgs
    ///         {
    ///             AntiSpyware = "BestPractice",
    ///         },
    ///     });
    /// 
    ///     var example = new CloudNgfwAws.PredefinedUrlCategoryOverride("example", new()
    ///     {
    ///         Rulestack = r.Name,
    ///         Name = "foobar",
    ///         Action = "block",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// import name is &lt;rulestack&gt;:&lt;predefined_url_category_override_name&gt;
    /// 
    /// ```sh
    /// $ pulumi import cloudngfwaws:index/predefinedUrlCategoryOverride:PredefinedUrlCategoryOverride example terraform-rulestack:foobar
    /// ```
    /// </summary>
    [CloudNgfwAwsResourceType("cloudngfwaws:index/predefinedUrlCategoryOverride:PredefinedUrlCategoryOverride")]
    public partial class PredefinedUrlCategoryOverride : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The action to take. Valid values are `None`, `Allow`, `Alert`, or `Block`. Defaults to `None`.
        /// </summary>
        [Output("action")]
        public Output<string?> Action { get; private set; } = null!;

        /// <summary>
        /// The audit comment.
        /// </summary>
        [Output("auditComment")]
        public Output<string?> AuditComment { get; private set; } = null!;

        /// <summary>
        /// The name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The rulestack.
        /// </summary>
        [Output("rulestack")]
        public Output<string> Rulestack { get; private set; } = null!;

        /// <summary>
        /// Update token.
        /// </summary>
        [Output("updateToken")]
        public Output<string> UpdateToken { get; private set; } = null!;


        /// <summary>
        /// Create a PredefinedUrlCategoryOverride resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PredefinedUrlCategoryOverride(string name, PredefinedUrlCategoryOverrideArgs args, CustomResourceOptions? options = null)
            : base("cloudngfwaws:index/predefinedUrlCategoryOverride:PredefinedUrlCategoryOverride", name, args ?? new PredefinedUrlCategoryOverrideArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PredefinedUrlCategoryOverride(string name, Input<string> id, PredefinedUrlCategoryOverrideState? state = null, CustomResourceOptions? options = null)
            : base("cloudngfwaws:index/predefinedUrlCategoryOverride:PredefinedUrlCategoryOverride", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-cloudngfwaws",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PredefinedUrlCategoryOverride resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PredefinedUrlCategoryOverride Get(string name, Input<string> id, PredefinedUrlCategoryOverrideState? state = null, CustomResourceOptions? options = null)
        {
            return new PredefinedUrlCategoryOverride(name, id, state, options);
        }
    }

    public sealed class PredefinedUrlCategoryOverrideArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to take. Valid values are `None`, `Allow`, `Alert`, or `Block`. Defaults to `None`.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The audit comment.
        /// </summary>
        [Input("auditComment")]
        public Input<string>? AuditComment { get; set; }

        /// <summary>
        /// The name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The rulestack.
        /// </summary>
        [Input("rulestack", required: true)]
        public Input<string> Rulestack { get; set; } = null!;

        public PredefinedUrlCategoryOverrideArgs()
        {
        }
        public static new PredefinedUrlCategoryOverrideArgs Empty => new PredefinedUrlCategoryOverrideArgs();
    }

    public sealed class PredefinedUrlCategoryOverrideState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to take. Valid values are `None`, `Allow`, `Alert`, or `Block`. Defaults to `None`.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The audit comment.
        /// </summary>
        [Input("auditComment")]
        public Input<string>? AuditComment { get; set; }

        /// <summary>
        /// The name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The rulestack.
        /// </summary>
        [Input("rulestack")]
        public Input<string>? Rulestack { get; set; }

        /// <summary>
        /// Update token.
        /// </summary>
        [Input("updateToken")]
        public Input<string>? UpdateToken { get; set; }

        public PredefinedUrlCategoryOverrideState()
        {
        }
        public static new PredefinedUrlCategoryOverrideState Empty => new PredefinedUrlCategoryOverrideState();
    }
}
