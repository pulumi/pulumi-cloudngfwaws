// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudNgfwAws
{
    /// <summary>
    /// The provider type for the cloudngfwaws package. By default, resources use package-wide configuration
    /// settings, however an explicit `Provider` instance may be created and passed during resource
    /// construction to achieve fine-grained programmatic control over provider settings. See the
    /// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
    /// </summary>
    [CloudNgfwAwsResourceType("pulumi:providers:cloudngfwaws")]
    public partial class Provider : global::Pulumi.ProviderResource
    {
        /// <summary>
        /// (Used for the initial `sts assume role`) AWS access key. Environment variable: `CLOUDNGFWAWS_ACCESS_KEY`. JSON conf file
        /// variable: `access-key`.
        /// </summary>
        [Output("accessKey")]
        public Output<string?> AccessKey { get; private set; } = null!;

        /// <summary>
        /// The ARN allowing account admin permissions. Environment variable: `CLOUDNGFWAWS_ACCT_ADMIN_ARN`. JSON conf file
        /// variable: `account-admin-arn`.
        /// </summary>
        [Output("accountAdminArn")]
        public Output<string?> AccountAdminArn { get; private set; } = null!;

        /// <summary>
        /// The ARN allowing firewall, rulestack, and global rulestack admin permissions. Global rulestack admin permissions can be
        /// enabled only if the AWS account is onboarded by AWS Firewall Manager. Use 'lfa_arn' and 'lra_arn' if you want to enable
        /// only firewall and rulestack admin permissions. Environment variable: `CLOUDNGFWAWS_ARN`. JSON conf file variable: `arn`.
        /// </summary>
        [Output("arn")]
        public Output<string?> Arn { get; private set; } = null!;

        /// <summary>
        /// The ARN allowing global rulestack admin permissions. Global rulestack admin permissions can be enabled only if the AWS
        /// account is onboarded by AWS Firewall Manager. 'gra_arn' is preferentially used over the `arn` param if both are
        /// specified. Environment variable: `CLOUDNGFWAWS_GRA_ARN`. JSON conf file variable: `gra-arn`.
        /// </summary>
        [Output("graArn")]
        public Output<string?> GraArn { get; private set; } = null!;

        /// <summary>
        /// The hostname of the API (default: `api.us-east-1.aws.cloudngfw.paloaltonetworks.com`). Environment variable:
        /// `CLOUDNGFWAWS_HOST`. JSON conf file variable: `host`.
        /// </summary>
        [Output("host")]
        public Output<string?> Host { get; private set; } = null!;

        /// <summary>
        /// Retrieve provider configuration from this JSON file.
        /// </summary>
        [Output("jsonConfigFile")]
        public Output<string?> JsonConfigFile { get; private set; } = null!;

        /// <summary>
        /// The ARN allowing firewall admin permissions. This is preferentially used over the `arn` param if both are specified.
        /// Environment variable: `CLOUDNGFWAWS_LFA_ARN`. JSON conf file variable: `lfa-arn`.
        /// </summary>
        [Output("lfaArn")]
        public Output<string?> LfaArn { get; private set; } = null!;

        /// <summary>
        /// The ARN allowing rulestack admin permissions. This is preferentially used over the `arn` param if both are specified.
        /// Environment variable: `CLOUDNGFWAWS_LRA_ARN`. JSON conf file variable: `lra-arn`.
        /// </summary>
        [Output("lraArn")]
        public Output<string?> LraArn { get; private set; } = null!;

        /// <summary>
        /// AWS management plane region. Environment variable: `CLOUDNGFWAWS_MP_REGION`. JSON conf file variable: `mp_region`.
        /// </summary>
        [Output("mpRegion")]
        public Output<string?> MpRegion { get; private set; } = null!;

        /// <summary>
        /// AWS management plane MP region host Environment variable: `CLOUDNGFWAWS_MP_REGION_HOST`. JSON conf file variable:
        /// `mp_region_host`.
        /// </summary>
        [Output("mpRegionHost")]
        public Output<string?> MpRegionHost { get; private set; } = null!;

        /// <summary>
        /// (Used for the initial `sts assume role`) AWS PROFILE. Environment variable: `CLOUDNGFWAWS_PROFILE`. JSON conf file
        /// variable: `profile`.
        /// </summary>
        [Output("profile")]
        public Output<string?> Profile { get; private set; } = null!;

        /// <summary>
        /// The protocol (defaults to `https`). Environment variable: `CLOUDNGFWAWS_PROTOCOL`. JSON conf file variable: `protocol`.
        /// Valid values are `https` or `http`.
        /// </summary>
        [Output("protocol")]
        public Output<string?> Protocol { get; private set; } = null!;

        /// <summary>
        /// AWS region. Environment variable: `CLOUDNGFWAWS_REGION`. JSON conf file variable: `region`.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// (Used for the initial `sts assume role`) AWS secret key. Environment variable: `CLOUDNGFWAWS_SECRET_KEY`. JSON conf file
        /// variable: `secret-key`.
        /// </summary>
        [Output("secretKey")]
        public Output<string?> SecretKey { get; private set; } = null!;


        /// <summary>
        /// Create a Provider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provider(string name, ProviderArgs? args = null, CustomResourceOptions? options = null)
            : base("cloudngfwaws", name, args ?? new ProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-cloudngfwaws",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }

        /// <summary>
        /// This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
        /// </summary>
        public global::Pulumi.Output<ProviderTerraformConfigResult> TerraformConfig()
            => global::Pulumi.Deployment.Instance.Call<ProviderTerraformConfigResult>("pulumi:providers:cloudngfwaws/terraformConfig", CallArgs.Empty, this);
    }

    public sealed class ProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Used for the initial `sts assume role`) AWS access key. Environment variable: `CLOUDNGFWAWS_ACCESS_KEY`. JSON conf file
        /// variable: `access-key`.
        /// </summary>
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        /// <summary>
        /// The ARN allowing account admin permissions. Environment variable: `CLOUDNGFWAWS_ACCT_ADMIN_ARN`. JSON conf file
        /// variable: `account-admin-arn`.
        /// </summary>
        [Input("accountAdminArn")]
        public Input<string>? AccountAdminArn { get; set; }

        /// <summary>
        /// The ARN allowing firewall, rulestack, and global rulestack admin permissions. Global rulestack admin permissions can be
        /// enabled only if the AWS account is onboarded by AWS Firewall Manager. Use 'lfa_arn' and 'lra_arn' if you want to enable
        /// only firewall and rulestack admin permissions. Environment variable: `CLOUDNGFWAWS_ARN`. JSON conf file variable: `arn`.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The ARN allowing global rulestack admin permissions. Global rulestack admin permissions can be enabled only if the AWS
        /// account is onboarded by AWS Firewall Manager. 'gra_arn' is preferentially used over the `arn` param if both are
        /// specified. Environment variable: `CLOUDNGFWAWS_GRA_ARN`. JSON conf file variable: `gra-arn`.
        /// </summary>
        [Input("graArn")]
        public Input<string>? GraArn { get; set; }

        [Input("headers", json: true)]
        private InputMap<string>? _headers;

        /// <summary>
        /// Additional HTTP headers to send with API calls. Environment variable: `CLOUDNGFWAWS_HEADERS`. JSON conf file variable:
        /// `headers`.
        /// </summary>
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        /// <summary>
        /// The hostname of the API (default: `api.us-east-1.aws.cloudngfw.paloaltonetworks.com`). Environment variable:
        /// `CLOUDNGFWAWS_HOST`. JSON conf file variable: `host`.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// Retrieve provider configuration from this JSON file.
        /// </summary>
        [Input("jsonConfigFile")]
        public Input<string>? JsonConfigFile { get; set; }

        /// <summary>
        /// The ARN allowing firewall admin permissions. This is preferentially used over the `arn` param if both are specified.
        /// Environment variable: `CLOUDNGFWAWS_LFA_ARN`. JSON conf file variable: `lfa-arn`.
        /// </summary>
        [Input("lfaArn")]
        public Input<string>? LfaArn { get; set; }

        [Input("loggings", json: true)]
        private InputList<string>? _loggings;

        /// <summary>
        /// The logging options for the provider. Environment variable: `CLOUDNGFWAWS_LOGGING`. JSON conf file variable: `logging`.
        /// </summary>
        public InputList<string> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<string>());
            set => _loggings = value;
        }

        /// <summary>
        /// The ARN allowing rulestack admin permissions. This is preferentially used over the `arn` param if both are specified.
        /// Environment variable: `CLOUDNGFWAWS_LRA_ARN`. JSON conf file variable: `lra-arn`.
        /// </summary>
        [Input("lraArn")]
        public Input<string>? LraArn { get; set; }

        /// <summary>
        /// AWS management plane region. Environment variable: `CLOUDNGFWAWS_MP_REGION`. JSON conf file variable: `mp_region`.
        /// </summary>
        [Input("mpRegion")]
        public Input<string>? MpRegion { get; set; }

        /// <summary>
        /// AWS management plane MP region host Environment variable: `CLOUDNGFWAWS_MP_REGION_HOST`. JSON conf file variable:
        /// `mp_region_host`.
        /// </summary>
        [Input("mpRegionHost")]
        public Input<string>? MpRegionHost { get; set; }

        /// <summary>
        /// (Used for the initial `sts assume role`) AWS PROFILE. Environment variable: `CLOUDNGFWAWS_PROFILE`. JSON conf file
        /// variable: `profile`.
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// The protocol (defaults to `https`). Environment variable: `CLOUDNGFWAWS_PROTOCOL`. JSON conf file variable: `protocol`.
        /// Valid values are `https` or `http`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// AWS region. Environment variable: `CLOUDNGFWAWS_REGION`. JSON conf file variable: `region`.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("resourceTimeout", json: true)]
        public Input<int>? ResourceTimeout { get; set; }

        /// <summary>
        /// (Used for the initial `sts assume role`) AWS secret key. Environment variable: `CLOUDNGFWAWS_SECRET_KEY`. JSON conf file
        /// variable: `secret-key`.
        /// </summary>
        [Input("secretKey")]
        public Input<string>? SecretKey { get; set; }

        /// <summary>
        /// Skip verifying the SSL certificate. Environment variable: `CLOUDNGFWAWS_SKIP_VERIFY_CERTIFICATE`. JSON conf file
        /// variable: `skip-verify-certificate`.
        /// </summary>
        [Input("skipVerifyCertificate", json: true)]
        public Input<bool>? SkipVerifyCertificate { get; set; }

        /// <summary>
        /// Enable synchronous mode while creating resources Environment variable: `CLOUDNGFWAWS_SYNC_MODE`. JSON conf file
        /// variable: `sync_mode`.
        /// </summary>
        [Input("syncMode", json: true)]
        public Input<bool>? SyncMode { get; set; }

        /// <summary>
        /// The timeout for any single API call (default: `30`). Environment variable: `CLOUDNGFWAWS_TIMEOUT`. JSON conf file
        /// variable: `timeout`.
        /// </summary>
        [Input("timeout", json: true)]
        public Input<int>? Timeout { get; set; }

        public ProviderArgs()
        {
        }
        public static new ProviderArgs Empty => new ProviderArgs();
    }

    /// <summary>
    /// The results of the <see cref="Provider.TerraformConfig"/> method.
    /// </summary>
    [OutputType]
    public sealed class ProviderTerraformConfigResult
    {
        public readonly ImmutableDictionary<string, object> Result;

        [OutputConstructor]
        private ProviderTerraformConfigResult(ImmutableDictionary<string, object> result)
        {
            Result = result;
        }
    }
}
