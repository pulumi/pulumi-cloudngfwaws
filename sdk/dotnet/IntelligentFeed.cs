// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudNgfwAws
{
    /// <summary>
    /// Resource for intelligent feed manipulation.
    /// 
    /// ## Admin Permission Type
    /// 
    /// * `Rulestack` (for `scope="Local"`)
    /// * `Global Rulestack` (for `scope="Global"`)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using CloudNgfwAws = Pulumi.CloudNgfwAws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var r = new CloudNgfwAws.Rulestack("r", new()
    ///     {
    ///         Name = "terraform-rulestack",
    ///         Scope = "Local",
    ///         AccountId = "123456789",
    ///         Description = "Made by Pulumi",
    ///         ProfileConfig = new CloudNgfwAws.Inputs.RulestackProfileConfigArgs
    ///         {
    ///             AntiSpyware = "BestPractice",
    ///         },
    ///     });
    /// 
    ///     // Retrieve the feed information every day at midnight.
    ///     var example = new CloudNgfwAws.IntelligentFeed("example", new()
    ///     {
    ///         Rulestack = r.Name,
    ///         Name = "tf-feed",
    ///         Description = "Also configured by Terraform",
    ///         Url = "https://foobar.net",
    ///         Type = "URL_LIST",
    ///         Frequency = "DAILY",
    ///         Time = 0,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// import name is &lt;scope&gt;:&lt;rulestack&gt;:&lt;intelligent_feed_name&gt;
    /// 
    /// ```sh
    /// $ pulumi import cloudngfwaws:index/intelligentFeed:IntelligentFeed example Local:terraform-rulestack:tf-feed
    /// ```
    /// </summary>
    [CloudNgfwAwsResourceType("cloudngfwaws:index/intelligentFeed:IntelligentFeed")]
    public partial class IntelligentFeed : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The audit comment.
        /// </summary>
        [Output("auditComment")]
        public Output<string?> AuditComment { get; private set; } = null!;

        /// <summary>
        /// The certificate profile.
        /// </summary>
        [Output("certificate")]
        public Output<string?> Certificate { get; private set; } = null!;

        /// <summary>
        /// The description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Update frequency. Valid values are `HOURLY` or `DAILY`. Defaults to `HOURLY`.
        /// </summary>
        [Output("frequency")]
        public Output<string?> Frequency { get; private set; } = null!;

        /// <summary>
        /// The name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The rulestack.
        /// </summary>
        [Output("rulestack")]
        public Output<string> Rulestack { get; private set; } = null!;

        /// <summary>
        /// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;

        /// <summary>
        /// The time to poll for updates if frequency is daily. The number must be between [0, 23] incluside.
        /// </summary>
        [Output("time")]
        public Output<int?> Time { get; private set; } = null!;

        /// <summary>
        /// The intelligent feed type. Valid values are `IP_LIST` or `URL_LIST`. Defaults to `IP_LIST`.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// The update token.
        /// </summary>
        [Output("updateToken")]
        public Output<string> UpdateToken { get; private set; } = null!;

        /// <summary>
        /// The intelligent feed source.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a IntelligentFeed resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntelligentFeed(string name, IntelligentFeedArgs args, CustomResourceOptions? options = null)
            : base("cloudngfwaws:index/intelligentFeed:IntelligentFeed", name, args ?? new IntelligentFeedArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntelligentFeed(string name, Input<string> id, IntelligentFeedState? state = null, CustomResourceOptions? options = null)
            : base("cloudngfwaws:index/intelligentFeed:IntelligentFeed", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-cloudngfwaws",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntelligentFeed resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntelligentFeed Get(string name, Input<string> id, IntelligentFeedState? state = null, CustomResourceOptions? options = null)
        {
            return new IntelligentFeed(name, id, state, options);
        }
    }

    public sealed class IntelligentFeedArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The audit comment.
        /// </summary>
        [Input("auditComment")]
        public Input<string>? AuditComment { get; set; }

        /// <summary>
        /// The certificate profile.
        /// </summary>
        [Input("certificate")]
        public Input<string>? Certificate { get; set; }

        /// <summary>
        /// The description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Update frequency. Valid values are `HOURLY` or `DAILY`. Defaults to `HOURLY`.
        /// </summary>
        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        /// <summary>
        /// The name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The rulestack.
        /// </summary>
        [Input("rulestack", required: true)]
        public Input<string> Rulestack { get; set; } = null!;

        /// <summary>
        /// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The time to poll for updates if frequency is daily. The number must be between [0, 23] incluside.
        /// </summary>
        [Input("time")]
        public Input<int>? Time { get; set; }

        /// <summary>
        /// The intelligent feed type. Valid values are `IP_LIST` or `URL_LIST`. Defaults to `IP_LIST`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The intelligent feed source.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public IntelligentFeedArgs()
        {
        }
        public static new IntelligentFeedArgs Empty => new IntelligentFeedArgs();
    }

    public sealed class IntelligentFeedState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The audit comment.
        /// </summary>
        [Input("auditComment")]
        public Input<string>? AuditComment { get; set; }

        /// <summary>
        /// The certificate profile.
        /// </summary>
        [Input("certificate")]
        public Input<string>? Certificate { get; set; }

        /// <summary>
        /// The description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Update frequency. Valid values are `HOURLY` or `DAILY`. Defaults to `HOURLY`.
        /// </summary>
        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        /// <summary>
        /// The name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The rulestack.
        /// </summary>
        [Input("rulestack")]
        public Input<string>? Rulestack { get; set; }

        /// <summary>
        /// The rulestack's scope. A local rulestack will require that you've retrieved a LRA JWT. A global rulestack will require that you've retrieved a GRA JWT. Valid values are `Local` or `Global`. Defaults to `Local`.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The time to poll for updates if frequency is daily. The number must be between [0, 23] incluside.
        /// </summary>
        [Input("time")]
        public Input<int>? Time { get; set; }

        /// <summary>
        /// The intelligent feed type. Valid values are `IP_LIST` or `URL_LIST`. Defaults to `IP_LIST`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The update token.
        /// </summary>
        [Input("updateToken")]
        public Input<string>? UpdateToken { get; set; }

        /// <summary>
        /// The intelligent feed source.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public IntelligentFeedState()
        {
        }
        public static new IntelligentFeedState Empty => new IntelligentFeedState();
    }
}
